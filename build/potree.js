/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("three"));
	else if(typeof define === 'function' && define.amd)
		define("potree", ["three"], factory);
	else if(typeof exports === 'object')
		exports["potree"] = factory(require("three"));
	else
		root["potree"] = factory(root["three"]);
})(self, (__WEBPACK_EXTERNAL_MODULE_three__) => {
return /******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/utils/binary-heap.js":
/*!**********************************!*\
  !*** ./src/utils/binary-heap.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BinaryHeap: () => (/* binding */ BinaryHeap)\n/* harmony export */ });\n/**\n * from: http://eloquentjavascript.net/1st_edition/appendix2.html\n *\n */\n\nfunction BinaryHeap(scoreFunction) {\n  this.content = [];\n  this.scoreFunction = scoreFunction;\n}\nBinaryHeap.prototype = {\n  push: function push(element) {\n    // Add the new element to the end of the array.\n    this.content.push(element);\n    // Allow it to bubble up.\n    this.bubbleUp(this.content.length - 1);\n  },\n  pop: function pop() {\n    // Store the first element so we can return it later.\n    var result = this.content[0];\n    // Get the element at the end of the array.\n    var end = this.content.pop();\n    // If there are any elements left, put the end element at the\n    // start, and let it sink down.\n    if (this.content.length > 0) {\n      this.content[0] = end;\n      this.sinkDown(0);\n    }\n    return result;\n  },\n  remove: function remove(node) {\n    var length = this.content.length;\n    // To remove a value, we must search through the array to find\n    // it.\n    for (var i = 0; i < length; i++) {\n      if (this.content[i] != node) continue;\n      // When it is found, the process seen in 'pop' is repeated\n      // to fill up the hole.\n      var end = this.content.pop();\n      // If the element we popped was the one we needed to remove,\n      // we're done.\n      if (i == length - 1) break;\n      // Otherwise, we replace the removed element with the popped\n      // one, and allow it to float up or sink down as appropriate.\n      this.content[i] = end;\n      this.bubbleUp(i);\n      this.sinkDown(i);\n      break;\n    }\n  },\n  size: function size() {\n    return this.content.length;\n  },\n  bubbleUp: function bubbleUp(n) {\n    // Fetch the element that has to be moved.\n    var element = this.content[n],\n      score = this.scoreFunction(element);\n    // When at 0, an element can not go up any further.\n    while (n > 0) {\n      // Compute the parent element's index, and fetch it.\n      var parentN = Math.floor((n + 1) / 2) - 1,\n        parent = this.content[parentN];\n      // If the parent has a lesser score, things are in order and we\n      // are done.\n      if (score >= this.scoreFunction(parent)) break;\n\n      // Otherwise, swap the parent with the current element and\n      // continue.\n      this.content[parentN] = element;\n      this.content[n] = parent;\n      n = parentN;\n    }\n  },\n  sinkDown: function sinkDown(n) {\n    // Look up the target element and its score.\n    var length = this.content.length,\n      element = this.content[n],\n      elemScore = this.scoreFunction(element);\n    while (true) {\n      // Compute the indices of the child elements.\n      var child2N = (n + 1) * 2,\n        child1N = child2N - 1;\n      // This is used to store the new position of the element,\n      // if any.\n      var swap = null;\n      // If the first child exists (is inside the array)...\n      if (child1N < length) {\n        // Look it up and compute its score.\n        var child1 = this.content[child1N],\n          child1Score = this.scoreFunction(child1);\n        // If the score is less than our element's, we need to swap.\n        if (child1Score < elemScore) swap = child1N;\n      }\n      // Do the same checks for the other child.\n      if (child2N < length) {\n        var child2 = this.content[child2N],\n          child2Score = this.scoreFunction(child2);\n        if (child2Score < (swap == null ? elemScore : child1Score)) swap = child2N;\n      }\n\n      // No need to swap further, we are done.\n      if (swap == null) break;\n\n      // Otherwise, swap and continue.\n      this.content[n] = this.content[swap];\n      this.content[swap] = element;\n      n = swap;\n    }\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdXRpbHMvYmluYXJ5LWhlYXAuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG90cmVlLy4vc3JjL3V0aWxzL2JpbmFyeS1oZWFwLmpzPzI0NTAiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBmcm9tOiBodHRwOi8vZWxvcXVlbnRqYXZhc2NyaXB0Lm5ldC8xc3RfZWRpdGlvbi9hcHBlbmRpeDIuaHRtbFxuICpcbiAqL1xuXG5leHBvcnQgZnVuY3Rpb24gQmluYXJ5SGVhcChzY29yZUZ1bmN0aW9uKSB7XG4gIHRoaXMuY29udGVudCA9IFtdO1xuICB0aGlzLnNjb3JlRnVuY3Rpb24gPSBzY29yZUZ1bmN0aW9uO1xufVxuQmluYXJ5SGVhcC5wcm90b3R5cGUgPSB7XG4gIHB1c2g6IGZ1bmN0aW9uIHB1c2goZWxlbWVudCkge1xuICAgIC8vIEFkZCB0aGUgbmV3IGVsZW1lbnQgdG8gdGhlIGVuZCBvZiB0aGUgYXJyYXkuXG4gICAgdGhpcy5jb250ZW50LnB1c2goZWxlbWVudCk7XG4gICAgLy8gQWxsb3cgaXQgdG8gYnViYmxlIHVwLlxuICAgIHRoaXMuYnViYmxlVXAodGhpcy5jb250ZW50Lmxlbmd0aCAtIDEpO1xuICB9LFxuICBwb3A6IGZ1bmN0aW9uIHBvcCgpIHtcbiAgICAvLyBTdG9yZSB0aGUgZmlyc3QgZWxlbWVudCBzbyB3ZSBjYW4gcmV0dXJuIGl0IGxhdGVyLlxuICAgIHZhciByZXN1bHQgPSB0aGlzLmNvbnRlbnRbMF07XG4gICAgLy8gR2V0IHRoZSBlbGVtZW50IGF0IHRoZSBlbmQgb2YgdGhlIGFycmF5LlxuICAgIHZhciBlbmQgPSB0aGlzLmNvbnRlbnQucG9wKCk7XG4gICAgLy8gSWYgdGhlcmUgYXJlIGFueSBlbGVtZW50cyBsZWZ0LCBwdXQgdGhlIGVuZCBlbGVtZW50IGF0IHRoZVxuICAgIC8vIHN0YXJ0LCBhbmQgbGV0IGl0IHNpbmsgZG93bi5cbiAgICBpZiAodGhpcy5jb250ZW50Lmxlbmd0aCA+IDApIHtcbiAgICAgIHRoaXMuY29udGVudFswXSA9IGVuZDtcbiAgICAgIHRoaXMuc2lua0Rvd24oMCk7XG4gICAgfVxuICAgIHJldHVybiByZXN1bHQ7XG4gIH0sXG4gIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKG5vZGUpIHtcbiAgICB2YXIgbGVuZ3RoID0gdGhpcy5jb250ZW50Lmxlbmd0aDtcbiAgICAvLyBUbyByZW1vdmUgYSB2YWx1ZSwgd2UgbXVzdCBzZWFyY2ggdGhyb3VnaCB0aGUgYXJyYXkgdG8gZmluZFxuICAgIC8vIGl0LlxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGVuZ3RoOyBpKyspIHtcbiAgICAgIGlmICh0aGlzLmNvbnRlbnRbaV0gIT0gbm9kZSkgY29udGludWU7XG4gICAgICAvLyBXaGVuIGl0IGlzIGZvdW5kLCB0aGUgcHJvY2VzcyBzZWVuIGluICdwb3AnIGlzIHJlcGVhdGVkXG4gICAgICAvLyB0byBmaWxsIHVwIHRoZSBob2xlLlxuICAgICAgdmFyIGVuZCA9IHRoaXMuY29udGVudC5wb3AoKTtcbiAgICAgIC8vIElmIHRoZSBlbGVtZW50IHdlIHBvcHBlZCB3YXMgdGhlIG9uZSB3ZSBuZWVkZWQgdG8gcmVtb3ZlLFxuICAgICAgLy8gd2UncmUgZG9uZS5cbiAgICAgIGlmIChpID09IGxlbmd0aCAtIDEpIGJyZWFrO1xuICAgICAgLy8gT3RoZXJ3aXNlLCB3ZSByZXBsYWNlIHRoZSByZW1vdmVkIGVsZW1lbnQgd2l0aCB0aGUgcG9wcGVkXG4gICAgICAvLyBvbmUsIGFuZCBhbGxvdyBpdCB0byBmbG9hdCB1cCBvciBzaW5rIGRvd24gYXMgYXBwcm9wcmlhdGUuXG4gICAgICB0aGlzLmNvbnRlbnRbaV0gPSBlbmQ7XG4gICAgICB0aGlzLmJ1YmJsZVVwKGkpO1xuICAgICAgdGhpcy5zaW5rRG93bihpKTtcbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgfSxcbiAgc2l6ZTogZnVuY3Rpb24gc2l6ZSgpIHtcbiAgICByZXR1cm4gdGhpcy5jb250ZW50Lmxlbmd0aDtcbiAgfSxcbiAgYnViYmxlVXA6IGZ1bmN0aW9uIGJ1YmJsZVVwKG4pIHtcbiAgICAvLyBGZXRjaCB0aGUgZWxlbWVudCB0aGF0IGhhcyB0byBiZSBtb3ZlZC5cbiAgICB2YXIgZWxlbWVudCA9IHRoaXMuY29udGVudFtuXSxcbiAgICAgIHNjb3JlID0gdGhpcy5zY29yZUZ1bmN0aW9uKGVsZW1lbnQpO1xuICAgIC8vIFdoZW4gYXQgMCwgYW4gZWxlbWVudCBjYW4gbm90IGdvIHVwIGFueSBmdXJ0aGVyLlxuICAgIHdoaWxlIChuID4gMCkge1xuICAgICAgLy8gQ29tcHV0ZSB0aGUgcGFyZW50IGVsZW1lbnQncyBpbmRleCwgYW5kIGZldGNoIGl0LlxuICAgICAgdmFyIHBhcmVudE4gPSBNYXRoLmZsb29yKChuICsgMSkgLyAyKSAtIDEsXG4gICAgICAgIHBhcmVudCA9IHRoaXMuY29udGVudFtwYXJlbnROXTtcbiAgICAgIC8vIElmIHRoZSBwYXJlbnQgaGFzIGEgbGVzc2VyIHNjb3JlLCB0aGluZ3MgYXJlIGluIG9yZGVyIGFuZCB3ZVxuICAgICAgLy8gYXJlIGRvbmUuXG4gICAgICBpZiAoc2NvcmUgPj0gdGhpcy5zY29yZUZ1bmN0aW9uKHBhcmVudCkpIGJyZWFrO1xuXG4gICAgICAvLyBPdGhlcndpc2UsIHN3YXAgdGhlIHBhcmVudCB3aXRoIHRoZSBjdXJyZW50IGVsZW1lbnQgYW5kXG4gICAgICAvLyBjb250aW51ZS5cbiAgICAgIHRoaXMuY29udGVudFtwYXJlbnROXSA9IGVsZW1lbnQ7XG4gICAgICB0aGlzLmNvbnRlbnRbbl0gPSBwYXJlbnQ7XG4gICAgICBuID0gcGFyZW50TjtcbiAgICB9XG4gIH0sXG4gIHNpbmtEb3duOiBmdW5jdGlvbiBzaW5rRG93bihuKSB7XG4gICAgLy8gTG9vayB1cCB0aGUgdGFyZ2V0IGVsZW1lbnQgYW5kIGl0cyBzY29yZS5cbiAgICB2YXIgbGVuZ3RoID0gdGhpcy5jb250ZW50Lmxlbmd0aCxcbiAgICAgIGVsZW1lbnQgPSB0aGlzLmNvbnRlbnRbbl0sXG4gICAgICBlbGVtU2NvcmUgPSB0aGlzLnNjb3JlRnVuY3Rpb24oZWxlbWVudCk7XG4gICAgd2hpbGUgKHRydWUpIHtcbiAgICAgIC8vIENvbXB1dGUgdGhlIGluZGljZXMgb2YgdGhlIGNoaWxkIGVsZW1lbnRzLlxuICAgICAgdmFyIGNoaWxkMk4gPSAobiArIDEpICogMixcbiAgICAgICAgY2hpbGQxTiA9IGNoaWxkMk4gLSAxO1xuICAgICAgLy8gVGhpcyBpcyB1c2VkIHRvIHN0b3JlIHRoZSBuZXcgcG9zaXRpb24gb2YgdGhlIGVsZW1lbnQsXG4gICAgICAvLyBpZiBhbnkuXG4gICAgICB2YXIgc3dhcCA9IG51bGw7XG4gICAgICAvLyBJZiB0aGUgZmlyc3QgY2hpbGQgZXhpc3RzIChpcyBpbnNpZGUgdGhlIGFycmF5KS4uLlxuICAgICAgaWYgKGNoaWxkMU4gPCBsZW5ndGgpIHtcbiAgICAgICAgLy8gTG9vayBpdCB1cCBhbmQgY29tcHV0ZSBpdHMgc2NvcmUuXG4gICAgICAgIHZhciBjaGlsZDEgPSB0aGlzLmNvbnRlbnRbY2hpbGQxTl0sXG4gICAgICAgICAgY2hpbGQxU2NvcmUgPSB0aGlzLnNjb3JlRnVuY3Rpb24oY2hpbGQxKTtcbiAgICAgICAgLy8gSWYgdGhlIHNjb3JlIGlzIGxlc3MgdGhhbiBvdXIgZWxlbWVudCdzLCB3ZSBuZWVkIHRvIHN3YXAuXG4gICAgICAgIGlmIChjaGlsZDFTY29yZSA8IGVsZW1TY29yZSkgc3dhcCA9IGNoaWxkMU47XG4gICAgICB9XG4gICAgICAvLyBEbyB0aGUgc2FtZSBjaGVja3MgZm9yIHRoZSBvdGhlciBjaGlsZC5cbiAgICAgIGlmIChjaGlsZDJOIDwgbGVuZ3RoKSB7XG4gICAgICAgIHZhciBjaGlsZDIgPSB0aGlzLmNvbnRlbnRbY2hpbGQyTl0sXG4gICAgICAgICAgY2hpbGQyU2NvcmUgPSB0aGlzLnNjb3JlRnVuY3Rpb24oY2hpbGQyKTtcbiAgICAgICAgaWYgKGNoaWxkMlNjb3JlIDwgKHN3YXAgPT0gbnVsbCA/IGVsZW1TY29yZSA6IGNoaWxkMVNjb3JlKSkgc3dhcCA9IGNoaWxkMk47XG4gICAgICB9XG5cbiAgICAgIC8vIE5vIG5lZWQgdG8gc3dhcCBmdXJ0aGVyLCB3ZSBhcmUgZG9uZS5cbiAgICAgIGlmIChzd2FwID09IG51bGwpIGJyZWFrO1xuXG4gICAgICAvLyBPdGhlcndpc2UsIHN3YXAgYW5kIGNvbnRpbnVlLlxuICAgICAgdGhpcy5jb250ZW50W25dID0gdGhpcy5jb250ZW50W3N3YXBdO1xuICAgICAgdGhpcy5jb250ZW50W3N3YXBdID0gZWxlbWVudDtcbiAgICAgIG4gPSBzd2FwO1xuICAgIH1cbiAgfVxufTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/utils/binary-heap.js\n");

/***/ }),

/***/ "./src/materials/shaders/blur.frag":
/*!*****************************************!*\
  !*** ./src/materials/shaders/blur.frag ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"precision highp float;\\nprecision highp int;\\n\\nuniform mat4 projectionMatrix;\\n\\nuniform float screenWidth;\\nuniform float screenHeight;\\n\\nuniform sampler2D map;\\n\\nvarying vec2 vUv;\\n\\nvoid main() {\\n\\n\\tfloat dx = 1.0 / screenWidth;\\n\\tfloat dy = 1.0 / screenHeight;\\n\\n\\tvec3 color = vec3(0.0, 0.0, 0.0);\\n\\tcolor += texture2D(map, vUv + vec2(-dx, -dy)).rgb;\\n\\tcolor += texture2D(map, vUv + vec2(  0, -dy)).rgb;\\n\\tcolor += texture2D(map, vUv + vec2(+dx, -dy)).rgb;\\n\\tcolor += texture2D(map, vUv + vec2(-dx,   0)).rgb;\\n\\tcolor += texture2D(map, vUv + vec2(  0,   0)).rgb;\\n\\tcolor += texture2D(map, vUv + vec2(+dx,   0)).rgb;\\n\\tcolor += texture2D(map, vUv + vec2(-dx,  dy)).rgb;\\n\\tcolor += texture2D(map, vUv + vec2(  0,  dy)).rgb;\\n\\tcolor += texture2D(map, vUv + vec2(+dx,  dy)).rgb;\\n    \\n\\tcolor = color / 9.0;\\n\\t\\n\\tgl_FragColor = vec4(color, 1.0);\\n\\t\\n\\t\\n}\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbWF0ZXJpYWxzL3NoYWRlcnMvYmx1ci5mcmFnIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovL3BvdHJlZS8uL3NyYy9tYXRlcmlhbHMvc2hhZGVycy9ibHVyLmZyYWc/MjI5MyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBcInByZWNpc2lvbiBoaWdocCBmbG9hdDtcXG5wcmVjaXNpb24gaGlnaHAgaW50O1xcblxcbnVuaWZvcm0gbWF0NCBwcm9qZWN0aW9uTWF0cml4O1xcblxcbnVuaWZvcm0gZmxvYXQgc2NyZWVuV2lkdGg7XFxudW5pZm9ybSBmbG9hdCBzY3JlZW5IZWlnaHQ7XFxuXFxudW5pZm9ybSBzYW1wbGVyMkQgbWFwO1xcblxcbnZhcnlpbmcgdmVjMiB2VXY7XFxuXFxudm9pZCBtYWluKCkge1xcblxcblxcdGZsb2F0IGR4ID0gMS4wIC8gc2NyZWVuV2lkdGg7XFxuXFx0ZmxvYXQgZHkgPSAxLjAgLyBzY3JlZW5IZWlnaHQ7XFxuXFxuXFx0dmVjMyBjb2xvciA9IHZlYzMoMC4wLCAwLjAsIDAuMCk7XFxuXFx0Y29sb3IgKz0gdGV4dHVyZTJEKG1hcCwgdlV2ICsgdmVjMigtZHgsIC1keSkpLnJnYjtcXG5cXHRjb2xvciArPSB0ZXh0dXJlMkQobWFwLCB2VXYgKyB2ZWMyKCAgMCwgLWR5KSkucmdiO1xcblxcdGNvbG9yICs9IHRleHR1cmUyRChtYXAsIHZVdiArIHZlYzIoK2R4LCAtZHkpKS5yZ2I7XFxuXFx0Y29sb3IgKz0gdGV4dHVyZTJEKG1hcCwgdlV2ICsgdmVjMigtZHgsICAgMCkpLnJnYjtcXG5cXHRjb2xvciArPSB0ZXh0dXJlMkQobWFwLCB2VXYgKyB2ZWMyKCAgMCwgICAwKSkucmdiO1xcblxcdGNvbG9yICs9IHRleHR1cmUyRChtYXAsIHZVdiArIHZlYzIoK2R4LCAgIDApKS5yZ2I7XFxuXFx0Y29sb3IgKz0gdGV4dHVyZTJEKG1hcCwgdlV2ICsgdmVjMigtZHgsICBkeSkpLnJnYjtcXG5cXHRjb2xvciArPSB0ZXh0dXJlMkQobWFwLCB2VXYgKyB2ZWMyKCAgMCwgIGR5KSkucmdiO1xcblxcdGNvbG9yICs9IHRleHR1cmUyRChtYXAsIHZVdiArIHZlYzIoK2R4LCAgZHkpKS5yZ2I7XFxuICAgIFxcblxcdGNvbG9yID0gY29sb3IgLyA5LjA7XFxuXFx0XFxuXFx0Z2xfRnJhZ0NvbG9yID0gdmVjNChjb2xvciwgMS4wKTtcXG5cXHRcXG5cXHRcXG59XCI7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/materials/shaders/blur.frag\n");

/***/ }),

/***/ "./src/materials/shaders/blur.vert":
/*!*****************************************!*\
  !*** ./src/materials/shaders/blur.vert ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"precision highp float;\\nprecision highp int;\\n\\nattribute vec3 position;\\nattribute vec2 uv;\\n\\nuniform mat4 modelViewMatrix;\\nuniform mat4 projectionMatrix;\\n\\nvarying vec2 vUv;\\n\\nvoid main() {\\n    vUv = uv;\\n\\n    gl_Position =   projectionMatrix * modelViewMatrix * vec4(position, 1.0);\\n}\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbWF0ZXJpYWxzL3NoYWRlcnMvYmx1ci52ZXJ0IiwibWFwcGluZ3MiOiI7Ozs7QUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovL3BvdHJlZS8uL3NyYy9tYXRlcmlhbHMvc2hhZGVycy9ibHVyLnZlcnQ/NWRiYyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBcInByZWNpc2lvbiBoaWdocCBmbG9hdDtcXG5wcmVjaXNpb24gaGlnaHAgaW50O1xcblxcbmF0dHJpYnV0ZSB2ZWMzIHBvc2l0aW9uO1xcbmF0dHJpYnV0ZSB2ZWMyIHV2O1xcblxcbnVuaWZvcm0gbWF0NCBtb2RlbFZpZXdNYXRyaXg7XFxudW5pZm9ybSBtYXQ0IHByb2plY3Rpb25NYXRyaXg7XFxuXFxudmFyeWluZyB2ZWMyIHZVdjtcXG5cXG52b2lkIG1haW4oKSB7XFxuICAgIHZVdiA9IHV2O1xcblxcbiAgICBnbF9Qb3NpdGlvbiA9ICAgcHJvamVjdGlvbk1hdHJpeCAqIG1vZGVsVmlld01hdHJpeCAqIHZlYzQocG9zaXRpb24sIDEuMCk7XFxufVwiOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/materials/shaders/blur.vert\n");

/***/ }),

/***/ "./src/materials/shaders/pointcloud.frag":
/*!***********************************************!*\
  !*** ./src/materials/shaders/pointcloud.frag ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"precision highp float;\\nprecision highp int;\\n\\n#if defined paraboloid_point_shape\\n\\t#extension GL_EXT_frag_depth : enable\\n#endif\\n\\nuniform mat4 viewMatrix;\\nuniform vec3 cameraPosition;\\n\\nuniform mat4 projectionMatrix;\\nuniform float opacity;\\n\\nuniform float blendHardness;\\nuniform float blendDepthSupplement;\\nuniform float fov;\\nuniform float spacing;\\nuniform float pcIndex;\\nuniform float screenWidth;\\nuniform float screenHeight;\\n\\nuniform sampler2D depthMap;\\n\\n#if defined (clip_horizontally) || defined (clip_vertically)\\n\\tuniform vec4 clipExtent;\\n#endif\\n\\n#ifdef use_texture_blending\\n\\tuniform sampler2D backgroundMap;\\n#endif\\n\\n\\n#ifdef use_point_cloud_mixing\\n\\tuniform int pointCloudMixingMode;\\n\\tuniform float pointCloudID;\\n\\tuniform float pointCloudMixAngle;\\n\\tuniform float stripeDistanceX;\\n\\tuniform float stripeDistanceY;\\n\\n\\tuniform float stripeDivisorX;\\n\\tuniform float stripeDivisorY;\\n#endif\\n\\n#ifdef highlight_point\\n\\tuniform vec4 highlightedPointColor;\\n#endif\\n\\nvarying vec3 vColor;\\n\\n#if !defined(color_type_point_index)\\n\\tvarying float vOpacity;\\n#endif\\n\\n#if defined(weighted_splats)\\n\\tvarying float vLinearDepth;\\n#endif\\n\\n#if !defined(paraboloid_point_shape) && defined(use_edl)\\n\\tvarying float vLogDepth;\\n#endif\\n\\n#if defined(color_type_phong) && (MAX_POINT_LIGHTS > 0 || MAX_DIR_LIGHTS > 0) || defined(paraboloid_point_shape)\\n\\tvarying vec3 vViewPosition;\\n#endif\\n\\n#if defined(weighted_splats) || defined(paraboloid_point_shape)\\n\\tvarying float vRadius;\\n#endif\\n\\n#if defined(color_type_phong) && (MAX_POINT_LIGHTS > 0 || MAX_DIR_LIGHTS > 0)\\n\\tvarying vec3 vNormal;\\n#endif\\n\\n#ifdef highlight_point\\n\\tvarying float vHighlight;\\n#endif\\n\\nfloat specularStrength = 1.0;\\n\\nvoid main() {\\n\\tvec3 color = vColor;\\n\\tfloat depth = gl_FragCoord.z;\\n\\n\\t#if defined (clip_horizontally) || defined (clip_vertically)\\n\\tvec2 ndc = vec2((gl_FragCoord.x / screenWidth), 1.0 - (gl_FragCoord.y / screenHeight));\\n\\n\\tif(step(clipExtent.x, ndc.x) * step(ndc.x, clipExtent.z) < 1.0)\\n\\t{\\n\\t\\tdiscard;\\n\\t}\\n\\n\\tif(step(clipExtent.y, ndc.y) * step(ndc.y, clipExtent.w) < 1.0)\\n\\t{\\n\\t\\tdiscard;\\n\\t}\\n\\t#endif  \\n\\n\\t#if defined(circle_point_shape) || defined(paraboloid_point_shape) || defined (weighted_splats)\\n\\t\\tfloat u = 2.0 * gl_PointCoord.x - 1.0;\\n\\t\\tfloat v = 2.0 * gl_PointCoord.y - 1.0;\\n\\t#endif\\n\\n\\t#if defined(circle_point_shape) || defined (weighted_splats)\\n\\t\\tfloat cc = u*u + v*v;\\n\\t\\tif(cc > 1.0){\\n\\t\\t\\tdiscard;\\n\\t\\t}\\n\\t#endif\\n\\n\\t#if defined weighted_splats\\n\\t\\tvec2 uv = gl_FragCoord.xy / vec2(screenWidth, screenHeight);\\n\\t\\tfloat sDepth = texture2D(depthMap, uv).r;\\n\\t\\tif(vLinearDepth > sDepth + vRadius + blendDepthSupplement){\\n\\t\\t\\tdiscard;\\n\\t\\t}\\n\\t#endif\\n\\n\\t#if defined color_type_point_index\\n\\t\\tgl_FragColor = vec4(color, pcIndex / 255.0);\\n\\t#else\\n\\t\\tgl_FragColor = vec4(color, vOpacity);\\n\\t#endif\\n\\n\\t#ifdef use_point_cloud_mixing\\n\\t\\tbool discardFragment = false;\\n\\n\\t\\tif (pointCloudMixingMode == 1) {  // Checkboard\\n\\t\\t\\tfloat vPointCloudID = pointCloudID > 10. ? pointCloudID/10.: pointCloudID;\\n\\t\\t\\tdiscardFragment = mod(gl_FragCoord.x, vPointCloudID) > 0.5 && mod(gl_FragCoord.y, vPointCloudID) > 0.5;\\n\\t\\t}\\n\\t\\telse if (pointCloudMixingMode == 2) {  // Stripes\\n\\t\\t\\tfloat angle = pointCloudMixAngle * pointCloudID / 180.;\\n\\t\\t\\tfloat u = cos(angle) * gl_FragCoord.x + sin(angle) * gl_FragCoord.y;\\n\\t\\t\\tfloat v = -sin(angle) * gl_FragCoord.x + cos(angle) * gl_FragCoord.y;\\n\\n\\t\\t\\tdiscardFragment = mod(u, stripeDistanceX) >= stripeDistanceX/stripeDivisorX && mod(v, stripeDistanceY) >= stripeDistanceY/stripeDivisorY;\\n\\t\\t}\\n\\t\\tif (discardFragment) {\\n\\t\\t\\tdiscard;\\n\\t\\t}\\n\\t#endif\\n\\n\\t#ifdef use_texture_blending\\n\\t\\tvec2 vUv = gl_FragCoord.xy / vec2(screenWidth, screenHeight);\\n\\n\\t\\tvec4 tColor = texture2D(backgroundMap, vUv);\\n\\t\\tgl_FragColor = vec4(vOpacity * color, 1.) + vec4((1. - vOpacity) * tColor.rgb, 0.);\\n\\t#endif\\n\\n\\t#if defined(color_type_phong)\\n\\t\\t#if MAX_POINT_LIGHTS > 0 || MAX_DIR_LIGHTS > 0\\n\\t\\t\\tvec3 normal = normalize( vNormal );\\n\\t\\t\\tnormal.z = abs(normal.z);\\n\\n\\t\\t\\tvec3 viewPosition = normalize( vViewPosition );\\n\\t\\t#endif\\n\\n\\t\\t// code taken from three.js phong light fragment shader\\n\\n\\t\\t#if MAX_POINT_LIGHTS > 0\\n\\n\\t\\t\\tvec3 pointDiffuse = vec3( 0.0 );\\n\\t\\t\\tvec3 pointSpecular = vec3( 0.0 );\\n\\n\\t\\t\\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\\n\\n\\t\\t\\t\\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\\n\\t\\t\\t\\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\\n\\n\\t\\t\\t\\tfloat lDistance = 1.0;\\n\\t\\t\\t\\tif ( pointLightDistance[ i ] > 0.0 )\\n\\t\\t\\t\\t\\tlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\\n\\n\\t\\t\\t\\tlVector = normalize( lVector );\\n\\n\\t\\t\\t\\t\\t\\t// diffuse\\n\\n\\t\\t\\t\\tfloat dotProduct = dot( normal, lVector );\\n\\n\\t\\t\\t\\t#ifdef WRAP_AROUND\\n\\n\\t\\t\\t\\t\\tfloat pointDiffuseWeightFull = max( dotProduct, 0.0 );\\n\\t\\t\\t\\t\\tfloat pointDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\\n\\n\\t\\t\\t\\t\\tvec3 pointDiffuseWeight = mix( vec3( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\\n\\n\\t\\t\\t\\t#else\\n\\n\\t\\t\\t\\t\\tfloat pointDiffuseWeight = max( dotProduct, 0.0 );\\n\\n\\t\\t\\t\\t#endif\\n\\n\\t\\t\\t\\tpointDiffuse += diffuse * pointLightColor[ i ] * pointDiffuseWeight * lDistance;\\n\\n\\t\\t\\t\\t// specular\\n\\n\\t\\t\\t\\tvec3 pointHalfVector = normalize( lVector + viewPosition );\\n\\t\\t\\t\\tfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\\n\\t\\t\\t\\tfloat pointSpecularWeight = specularStrength * max( pow( pointDotNormalHalf, shininess ), 0.0 );\\n\\n\\t\\t\\t\\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;\\n\\n\\t\\t\\t\\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, pointHalfVector ), 0.0 ), 5.0 );\\n\\t\\t\\t\\tpointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance * specularNormalization;\\n\\t\\t\\t\\tpointSpecular = vec3(0.0, 0.0, 0.0);\\n\\t\\t\\t}\\n\\n\\t\\t#endif\\n\\n\\t\\t#if MAX_DIR_LIGHTS > 0\\n\\n\\t\\t\\tvec3 dirDiffuse = vec3( 0.0 );\\n\\t\\t\\tvec3 dirSpecular = vec3( 0.0 );\\n\\n\\t\\t\\tfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\\n\\n\\t\\t\\t\\tvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\\n\\t\\t\\t\\tvec3 dirVector = normalize( lDirection.xyz );\\n\\n\\t\\t\\t\\t\\t\\t// diffuse\\n\\n\\t\\t\\t\\tfloat dotProduct = dot( normal, dirVector );\\n\\n\\t\\t\\t\\t#ifdef WRAP_AROUND\\n\\n\\t\\t\\t\\t\\tfloat dirDiffuseWeightFull = max( dotProduct, 0.0 );\\n\\t\\t\\t\\t\\tfloat dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\\n\\n\\t\\t\\t\\t\\tvec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );\\n\\n\\t\\t\\t\\t#else\\n\\n\\t\\t\\t\\t\\tfloat dirDiffuseWeight = max( dotProduct, 0.0 );\\n\\n\\t\\t\\t\\t#endif\\n\\n\\t\\t\\t\\tdirDiffuse += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\\n\\n\\t\\t\\t\\t// specular\\n\\n\\t\\t\\t\\tvec3 dirHalfVector = normalize( dirVector + viewPosition );\\n\\t\\t\\t\\tfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\\n\\t\\t\\t\\tfloat dirSpecularWeight = specularStrength * max( pow( dirDotNormalHalf, shininess ), 0.0 );\\n\\n\\t\\t\\t\\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;\\n\\n\\t\\t\\t\\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( dirVector, dirHalfVector ), 0.0 ), 5.0 );\\n\\t\\t\\t\\tdirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\\n\\t\\t\\t}\\n\\n\\t\\t#endif\\n\\n\\t\\tvec3 totalDiffuse = vec3( 0.0 );\\n\\t\\tvec3 totalSpecular = vec3( 0.0 );\\n\\n\\t\\t#if MAX_POINT_LIGHTS > 0\\n\\n\\t\\t\\ttotalDiffuse += pointDiffuse;\\n\\t\\t\\ttotalSpecular += pointSpecular;\\n\\n\\t\\t#endif\\n\\n\\t\\t#if MAX_DIR_LIGHTS > 0\\n\\n\\t\\t\\ttotalDiffuse += dirDiffuse;\\n\\t\\t\\ttotalSpecular += dirSpecular;\\n\\n\\t\\t#endif\\n\\n\\t\\tgl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient ) + totalSpecular;\\n\\n\\t#endif\\n\\n\\t#if defined weighted_splats\\n\\t    //float w = pow(1.0 - (u*u + v*v), blendHardness);\\n\\n\\t\\tfloat wx = 2.0 * length(2.0 * gl_PointCoord - 1.0);\\n\\t\\tfloat w = exp(-wx * wx * 0.5);\\n\\n\\t\\t//float distance = length(2.0 * gl_PointCoord - 1.0);\\n\\t\\t//float w = exp( -(distance * distance) / blendHardness);\\n\\n\\t\\tgl_FragColor.rgb = gl_FragColor.rgb * w;\\n\\t\\tgl_FragColor.a = w;\\n\\t#endif\\n\\n\\t#if defined paraboloid_point_shape\\n\\t\\tfloat wi = 0.0 - ( u*u + v*v);\\n\\t\\tvec4 pos = vec4(vViewPosition, 1.0);\\n\\t\\tpos.z += wi * vRadius;\\n\\t\\tfloat linearDepth = -pos.z;\\n\\t\\tpos = projectionMatrix * pos;\\n\\t\\tpos = pos / pos.w;\\n\\t\\tfloat expDepth = pos.z;\\n\\t\\tdepth = (pos.z + 1.0) / 2.0;\\n\\t\\tgl_FragDepthEXT = depth;\\n\\n\\t\\t#if defined(color_type_depth)\\n\\t\\t\\tgl_FragColor.r = linearDepth;\\n\\t\\t\\tgl_FragColor.g = expDepth;\\n\\t\\t#endif\\n\\n\\t\\t#if defined(use_edl)\\n\\t\\t\\tgl_FragColor.a = log2(linearDepth);\\n\\t\\t#endif\\n\\n\\t#else\\n\\t\\t#if defined(use_edl)\\n\\t\\t\\tgl_FragColor.a = vLogDepth;\\n\\t\\t#endif\\n\\t#endif\\n\\n\\t#ifdef highlight_point\\n\\t\\tif (vHighlight > 0.0) {\\n\\t\\t\\tgl_FragColor = highlightedPointColor;\\n\\t\\t}\\n\\t#endif\\n}\\n\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/materials/shaders/pointcloud.frag\n");

/***/ }),

/***/ "./src/materials/shaders/pointcloud.vert":
/*!***********************************************!*\
  !*** ./src/materials/shaders/pointcloud.vert ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"precision highp float;\\nprecision highp int;\\n\\n#define max_clip_boxes 30\\n\\nattribute vec3 position;\\nattribute vec3 color;\\n\\n#ifdef color_rgba\\n\\tattribute vec4 rgba;\\n#endif\\n\\nattribute vec3 normal;\\nattribute float intensity;\\nattribute float classification;\\nattribute float returnNumber;\\nattribute float numberOfReturns;\\nattribute float pointSourceID;\\nattribute vec4 indices;\\nattribute vec2 uv;\\n\\nuniform mat4 modelMatrix;\\nuniform mat4 modelViewMatrix;\\nuniform mat4 projectionMatrix;\\nuniform mat4 viewMatrix;\\nuniform mat3 normalMatrix;\\n\\nuniform float pcIndex;\\n\\nuniform float screenWidth;\\nuniform float screenHeight;\\nuniform float fov;\\nuniform float spacing;\\n\\n#if defined use_clip_box\\n\\tuniform mat4 clipBoxes[max_clip_boxes];\\n#endif\\n\\nuniform float heightMin;\\nuniform float heightMax;\\nuniform float size; // pixel size factor\\nuniform float minSize; // minimum pixel size\\nuniform float maxSize; // maximum pixel size\\nuniform float octreeSize;\\nuniform vec3 bbSize;\\nuniform vec3 uColor;\\nuniform float opacity;\\nuniform float clipBoxCount;\\nuniform float level;\\nuniform float vnStart;\\nuniform bool isLeafNode;\\n\\nuniform float filterByNormalThreshold;\\nuniform vec2 intensityRange;\\nuniform float opacityAttenuation;\\nuniform float intensityGamma;\\nuniform float intensityContrast;\\nuniform float intensityBrightness;\\nuniform float rgbGamma;\\nuniform float rgbContrast;\\nuniform float rgbBrightness;\\nuniform float transition;\\nuniform float wRGB;\\nuniform float wIntensity;\\nuniform float wElevation;\\nuniform float wClassification;\\nuniform float wReturnNumber;\\nuniform float wSourceID;\\n\\nuniform sampler2D visibleNodes;\\nuniform sampler2D gradient;\\nuniform sampler2D classificationLUT;\\nuniform sampler2D depthMap;\\n\\n#ifdef use_texture_blending\\n\\tuniform sampler2D backgroundMap;\\n#endif\\n\\n#ifdef use_point_cloud_mixing\\n\\tuniform int pointCloudMixingMode;\\n\\tuniform float pointCloudID;\\n\\n\\tuniform float pointCloudMixAngle;\\n\\tuniform float stripeDistanceX;\\n\\tuniform float stripeDistanceY;\\n\\n\\tuniform float stripeDivisorX;\\n\\tuniform float stripeDivisorY;\\n#endif\\n\\n#ifdef highlight_point\\n\\tuniform vec3 highlightedPointCoordinate;\\n\\tuniform bool enablePointHighlighting;\\n\\tuniform float highlightedPointScale;\\n#endif\\n\\n#ifdef use_filter_by_normal\\n\\tuniform int normalFilteringMode;\\n#endif\\n\\nvarying vec3 vColor;\\n\\n#if !defined(color_type_point_index)\\n\\tvarying float vOpacity;\\n#endif\\n\\n#if defined(weighted_splats)\\n\\tvarying float vLinearDepth;\\n#endif\\n\\n#if !defined(paraboloid_point_shape) && defined(use_edl)\\n\\tvarying float vLogDepth;\\n#endif\\n\\n#if defined(color_type_phong) && (MAX_POINT_LIGHTS > 0 || MAX_DIR_LIGHTS > 0) || defined(paraboloid_point_shape)\\n\\tvarying vec3 vViewPosition;\\n#endif\\n\\n#if defined(weighted_splats) || defined(paraboloid_point_shape)\\n\\tvarying float vRadius;\\n#endif\\n\\n#if defined(color_type_phong) && (MAX_POINT_LIGHTS > 0 || MAX_DIR_LIGHTS > 0)\\n\\tvarying vec3 vNormal;\\n#endif\\n\\n#ifdef highlight_point\\n\\tvarying float vHighlight;\\n#endif\\n\\n// ---------------------\\n// OCTREE\\n// ---------------------\\n\\n#if (defined(adaptive_point_size) || defined(color_type_lod)) && defined(tree_type_octree)\\n\\n/**\\n * Rounds the specified number to the closest integer.\\n */\\nfloat round(float number){\\n\\treturn floor(number + 0.5);\\n}\\n\\n/**\\n * Gets the number of 1-bits up to inclusive index position.\\n *\\n * number is treated as if it were an integer in the range 0-255\\n */\\nint numberOfOnes(int number, int index) {\\n\\tint numOnes = 0;\\n\\tint tmp = 128;\\n\\tfor (int i = 7; i >= 0; i--) {\\n\\n\\t\\tif (number >= tmp) {\\n\\t\\t\\tnumber = number - tmp;\\n\\n\\t\\t\\tif (i <= index) {\\n\\t\\t\\t\\tnumOnes++;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\ttmp = tmp / 2;\\n\\t}\\n\\n\\treturn numOnes;\\n}\\n\\n/**\\n * Checks whether the bit at index is 1.0\\n *\\n * number is treated as if it were an integer in the range 0-255\\n */\\nbool isBitSet(int number, int index){\\n\\n\\t// weird multi else if due to lack of proper array, int and bitwise support in WebGL 1.0\\n\\tint powi = 1;\\n\\tif (index == 0) {\\n\\t\\tpowi = 1;\\n\\t} else if (index == 1) {\\n\\t\\tpowi = 2;\\n\\t} else if (index == 2) {\\n\\t\\tpowi = 4;\\n\\t} else if (index == 3) {\\n\\t\\tpowi = 8;\\n\\t} else if (index == 4) {\\n\\t\\tpowi = 16;\\n\\t} else if (index == 5) {\\n\\t\\tpowi = 32;\\n\\t} else if (index == 6) {\\n\\t\\tpowi = 64;\\n\\t} else if (index == 7) {\\n\\t\\tpowi = 128;\\n\\t}\\n\\n\\tint ndp = number / powi;\\n\\n\\treturn mod(float(ndp), 2.0) != 0.0;\\n}\\n\\n/**\\n * Gets the the LOD at the point position.\\n */\\nfloat getLOD() {\\n\\tvec3 offset = vec3(0.0, 0.0, 0.0);\\n\\tint iOffset = int(vnStart);\\n\\tfloat depth = level;\\n\\n\\tfor (float i = 0.0; i <= 30.0; i++) {\\n\\t\\tfloat nodeSizeAtLevel = octreeSize  / pow(2.0, i + level + 0.0);\\n\\n\\t\\tvec3 index3d = (position-offset) / nodeSizeAtLevel;\\n\\t\\tindex3d = floor(index3d + 0.5);\\n\\t\\tint index = int(round(4.0 * index3d.x + 2.0 * index3d.y + index3d.z));\\n\\n\\t\\tvec4 value = texture2D(visibleNodes, vec2(float(iOffset) / 2048.0, 0.0));\\n\\t\\tint mask = int(round(value.r * 255.0));\\n\\n\\t\\tif (isBitSet(mask, index)) {\\n\\t\\t\\t// there are more visible child nodes at this position\\n\\t\\t\\tint advanceG = int(round(value.g * 255.0)) * 256;\\n\\t\\t\\tint advanceB = int(round(value.b * 255.0));\\n\\t\\t\\tint advanceChild = numberOfOnes(mask, index - 1);\\n\\t\\t\\tint advance = advanceG + advanceB + advanceChild;\\n\\n\\t\\t\\tiOffset = iOffset + advance;\\n\\n\\t\\t\\tdepth++;\\n\\t\\t} else {\\n\\t\\t\\treturn value.a * 255.0; // no more visible child nodes at this position\\n\\t\\t}\\n\\n\\t\\toffset = offset + (vec3(1.0, 1.0, 1.0) * nodeSizeAtLevel * 0.5) * index3d;\\n\\t}\\n\\n\\treturn depth;\\n}\\n\\nfloat getPointSizeAttenuation() {\\n\\treturn 0.5 * pow(2.0, getLOD());\\n}\\n\\n#endif\\n\\n// ---------------------\\n// KD-TREE\\n// ---------------------\\n\\n#if (defined(adaptive_point_size) || defined(color_type_lod)) && defined(tree_type_kdtree)\\n\\nfloat getLOD() {\\n\\tvec3 offset = vec3(0.0, 0.0, 0.0);\\n\\tfloat intOffset = 0.0;\\n\\tfloat depth = 0.0;\\n\\n\\tvec3 size = bbSize;\\n\\tvec3 pos = position;\\n\\n\\tfor (float i = 0.0; i <= 1000.0; i++) {\\n\\n\\t\\tvec4 value = texture2D(visibleNodes, vec2(intOffset / 2048.0, 0.0));\\n\\n\\t\\tint children = int(value.r * 255.0);\\n\\t\\tfloat next = value.g * 255.0;\\n\\t\\tint split = int(value.b * 255.0);\\n\\n\\t\\tif (next == 0.0) {\\n\\t\\t \\treturn depth;\\n\\t\\t}\\n\\n\\t\\tvec3 splitv = vec3(0.0, 0.0, 0.0);\\n\\t\\tif (split == 1) {\\n\\t\\t\\tsplitv.x = 1.0;\\n\\t\\t} else if (split == 2) {\\n\\t\\t \\tsplitv.y = 1.0;\\n\\t\\t} else if (split == 4) {\\n\\t\\t \\tsplitv.z = 1.0;\\n\\t\\t}\\n\\n\\t\\tintOffset = intOffset + next;\\n\\n\\t\\tfloat factor = length(pos * splitv / size);\\n\\t\\tif (factor < 0.5) {\\n\\t\\t \\t// left\\n\\t\\t\\tif (children == 0 || children == 2) {\\n\\t\\t\\t\\treturn depth;\\n\\t\\t\\t}\\n\\t\\t} else {\\n\\t\\t\\t// right\\n\\t\\t\\tpos = pos - size * splitv * 0.5;\\n\\t\\t\\tif (children == 0 || children == 1) {\\n\\t\\t\\t\\treturn depth;\\n\\t\\t\\t}\\n\\t\\t\\tif (children == 3) {\\n\\t\\t\\t\\tintOffset = intOffset + 1.0;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\tsize = size * ((1.0 - (splitv + 1.0) / 2.0) + 0.5);\\n\\n\\t\\tdepth++;\\n\\t}\\n\\n\\n\\treturn depth;\\n}\\n\\nfloat getPointSizeAttenuation() {\\n\\treturn 0.5 * pow(1.3, getLOD());\\n}\\n\\n#endif\\n\\n// formula adapted from: http://www.dfstudios.co.uk/articles/programming/image-programming-algorithms/image-processing-algorithms-part-5-contrast-adjustment/\\nfloat getContrastFactor(float contrast) {\\n\\treturn (1.0158730158730156 * (contrast + 1.0)) / (1.0158730158730156 - contrast);\\n}\\n\\nvec3 getRGB() {\\n\\t\\n\\t#ifdef color_rgba\\n\\t\\tvec3 rgb = rgba.rgb;\\n\\t#else\\t\\n\\t\\tvec3 rgb = color;\\n\\t#endif\\t\\t\\n\\n\\t#if defined(use_rgb_gamma_contrast_brightness)\\n\\t\\trgb = pow(rgb, vec3(rgbGamma));\\n\\t\\trgb = rgb + rgbBrightness;\\n\\t\\trgb = (rgb - 0.5) * getContrastFactor(rgbContrast) + 0.5;\\n\\t\\trgb = clamp(rgb, 0.0, 1.0);\\n\\t\\treturn rgb;\\n\\t#else\\n\\t\\treturn rgb;\\n\\t#endif\\n}\\n\\nfloat getIntensity() {\\n\\tfloat w = (intensity - intensityRange.x) / (intensityRange.y - intensityRange.x);\\n\\tw = pow(w, intensityGamma);\\n\\tw = w + intensityBrightness;\\n\\tw = (w - 0.5) * getContrastFactor(intensityContrast) + 0.5;\\n\\tw = clamp(w, 0.0, 1.0);\\n\\n\\treturn w;\\n}\\n\\nvec3 getElevation() {\\n\\tvec4 world = modelMatrix * vec4( position, 1.0 );\\n\\tfloat w = (world.z - heightMin) / (heightMax-heightMin);\\n\\tvec3 cElevation = texture2D(gradient, vec2(w,1.0-w)).rgb;\\n\\n\\treturn cElevation;\\n}\\n\\nvec4 getClassification() {\\n\\tvec2 uv = vec2(classification / 255.0, 0.5);\\n\\tvec4 classColor = texture2D(classificationLUT, uv);\\n\\n\\treturn classColor;\\n}\\n\\nvec3 getReturnNumber() {\\n\\tif (numberOfReturns == 1.0) {\\n\\t\\treturn vec3(1.0, 1.0, 0.0);\\n\\t} else {\\n\\t\\tif (returnNumber == 1.0) {\\n\\t\\t\\treturn vec3(1.0, 0.0, 0.0);\\n\\t\\t} else if (returnNumber == numberOfReturns) {\\n\\t\\t\\treturn vec3(0.0, 0.0, 1.0);\\n\\t\\t} else {\\n\\t\\t\\treturn vec3(0.0, 1.0, 0.0);\\n\\t\\t}\\n\\t}\\n}\\n\\nvec3 getSourceID() {\\n\\tfloat w = mod(pointSourceID, 10.0) / 10.0;\\n\\treturn texture2D(gradient, vec2(w, 1.0 - w)).rgb;\\n}\\n\\nvec3 getCompositeColor() {\\n\\tvec3 c;\\n\\tfloat w;\\n\\n\\tc += wRGB * getRGB();\\n\\tw += wRGB;\\n\\n\\tc += wIntensity * getIntensity() * vec3(1.0, 1.0, 1.0);\\n\\tw += wIntensity;\\n\\n\\tc += wElevation * getElevation();\\n\\tw += wElevation;\\n\\n\\tc += wReturnNumber * getReturnNumber();\\n\\tw += wReturnNumber;\\n\\n\\tc += wSourceID * getSourceID();\\n\\tw += wSourceID;\\n\\n\\tvec4 cl = wClassification * getClassification();\\n\\tc += cl.a * cl.rgb;\\n\\tw += wClassification * cl.a;\\n\\n\\tc = c / w;\\n\\n\\tif (w == 0.0) {\\n\\t\\tgl_Position = vec4(100.0, 100.0, 100.0, 0.0);\\n\\t}\\n\\n\\treturn c;\\n}\\n\\nvoid main() {\\n\\tvec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\\n\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\n\\t#if defined(color_type_phong) && (MAX_POINT_LIGHTS > 0 || MAX_DIR_LIGHTS > 0) || defined(paraboloid_point_shape)\\n\\t\\tvViewPosition = mvPosition.xyz;\\n\\t#endif\\n\\n\\t#if defined weighted_splats\\n\\t\\tvLinearDepth = gl_Position.w;\\n\\t#endif\\n\\n\\t#if defined(color_type_phong) && (MAX_POINT_LIGHTS > 0 || MAX_DIR_LIGHTS > 0)\\n\\t\\tvNormal = normalize(normalMatrix * normal);\\n\\t#endif\\n\\n\\t#if !defined(paraboloid_point_shape) && defined(use_edl)\\n\\t\\tvLogDepth = log2(-mvPosition.z);\\n\\t#endif\\n\\n\\t// ---------------------\\n\\t// POINT SIZE\\n\\t// ---------------------\\n\\n\\tfloat pointSize = 1.0;\\n\\tfloat slope = tan(fov / 2.0);\\n\\tfloat projFactor =  -0.5 * screenHeight / (slope * mvPosition.z);\\n\\n\\t#if defined fixed_point_size\\n\\t\\tpointSize = size;\\n\\t#elif defined attenuated_point_size\\n\\t\\tpointSize = size * spacing * projFactor;\\n\\t#elif defined adaptive_point_size\\n\\t\\tfloat worldSpaceSize = 2.0 * size * spacing / getPointSizeAttenuation();\\n\\t\\tpointSize = worldSpaceSize * projFactor;\\n\\t#endif\\n\\n\\tpointSize = max(minSize, pointSize);\\n\\tpointSize = min(maxSize, pointSize);\\n\\n\\t#if defined(weighted_splats) || defined(paraboloid_point_shape)\\n\\t\\tvRadius = pointSize / projFactor;\\n\\t#endif\\n\\n\\tgl_PointSize = pointSize;\\n\\n\\t// ---------------------\\n\\t// HIGHLIGHTING\\n\\t// ---------------------\\n\\n\\t#ifdef highlight_point\\n\\t\\tvec4 mPosition = modelMatrix * vec4(position, 1.0);\\n\\t\\tif (enablePointHighlighting && abs(mPosition.x - highlightedPointCoordinate.x) < 0.0001 &&\\n\\t\\t\\tabs(mPosition.y - highlightedPointCoordinate.y) < 0.0001 &&\\n\\t\\t\\tabs(mPosition.z - highlightedPointCoordinate.z) < 0.0001) {\\n\\t\\t\\tvHighlight = 1.0;\\n\\t\\t\\tgl_PointSize = pointSize * highlightedPointScale;\\n\\t\\t} else {\\n\\t\\t\\tvHighlight = 0.0;\\n\\t\\t}\\n\\t#endif\\n\\n\\t// ---------------------\\n\\t// OPACITY\\n\\t// ---------------------\\n\\n\\t#ifndef color_type_point_index\\n\\t\\t#ifdef attenuated_opacity\\n\\t\\t\\tvOpacity = opacity * exp(-length(-mvPosition.xyz) / opacityAttenuation);\\n\\t\\t#else\\n\\t\\t\\tvOpacity = opacity;\\n\\t\\t#endif\\n\\t#endif\\n\\n\\t// ---------------------\\n\\t// FILTERING\\n\\t// ---------------------\\n\\n\\t#ifdef use_filter_by_normal\\n\\t\\tbool discardPoint = false;\\n\\t\\t// Absolute normal filtering\\n\\t\\tif (normalFilteringMode == 1) {\\n\\t\\t\\tdiscardPoint = (abs((modelViewMatrix * vec4(normal, 0.0)).z) > filterByNormalThreshold);\\n\\t\\t}\\n\\t\\t// less than equal to\\n\\t\\telse if (normalFilteringMode == 2) {\\n\\t\\t\\tdiscardPoint = (modelViewMatrix * vec4(normal, 0.0)).z <= filterByNormalThreshold;\\n\\t\\t\\t}\\n\\t\\t// greater than\\n\\t\\telse if(normalFilteringMode == 3) {\\n\\t\\t\\tdiscardPoint = (modelViewMatrix * vec4(normal, 0.0)).z > filterByNormalThreshold;\\n\\t\\t\\t}\\n\\n\\t\\tif (discardPoint)\\n\\t\\t{\\n\\t\\t\\tgl_Position = vec4(0.0, 0.0, 2.0, 1.0);\\n\\t\\t}\\n\\t#endif\\n\\n\\t// ---------------------\\n\\t// POINT COLOR\\n\\t// ---------------------\\n\\n\\t#ifdef color_type_rgb\\n\\t\\tvColor = getRGB();\\n\\t#elif defined color_type_height\\n\\t\\tvColor = getElevation();\\n\\t#elif defined color_type_rgb_height\\n\\t\\tvec3 cHeight = getElevation();\\n\\t\\tvColor = (1.0 - transition) * getRGB() + transition * cHeight;\\n\\t#elif defined color_type_depth\\n\\t\\tfloat linearDepth = -mvPosition.z ;\\n\\t\\tfloat expDepth = (gl_Position.z / gl_Position.w) * 0.5 + 0.5;\\n\\t\\tvColor = vec3(linearDepth, expDepth, 0.0);\\n\\t#elif defined color_type_intensity\\n\\t\\tfloat w = getIntensity();\\n\\t\\tvColor = vec3(w, w, w);\\n\\t#elif defined color_type_intensity_gradient\\n\\t\\tfloat w = getIntensity();\\n\\t\\tvColor = texture2D(gradient, vec2(w, 1.0 - w)).rgb;\\n\\t#elif defined color_type_color\\n\\t\\tvColor = uColor;\\n\\t#elif defined color_type_lod\\n\\tfloat w = getLOD() / 10.0;\\n\\tvColor = texture2D(gradient, vec2(w, 1.0 - w)).rgb;\\n\\t#elif defined color_type_point_index\\n\\t\\tvColor = indices.rgb;\\n\\t#elif defined color_type_classification\\n\\t  vec4 cl = getClassification();\\n\\t\\tvColor = cl.rgb;\\n\\t#elif defined color_type_return_number\\n\\t\\tvColor = getReturnNumber();\\n\\t#elif defined color_type_source\\n\\t\\tvColor = getSourceID();\\n\\t#elif defined color_type_normal\\n\\t\\tvColor = (modelMatrix * vec4(normal, 0.0)).xyz;\\n\\t#elif defined color_type_phong\\n\\t\\tvColor = color;\\n\\t#elif defined color_type_composite\\n\\t\\tvColor = getCompositeColor();\\n\\t#endif\\n\\n\\t#if !defined color_type_composite && defined color_type_classification\\n\\t\\tif (cl.a == 0.0) {\\n\\t\\t\\tgl_Position = vec4(100.0, 100.0, 100.0, 0.0);\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\t#endif\\n\\n\\t// ---------------------\\n\\t// CLIPPING\\n\\t// ---------------------\\n\\n\\t#if defined use_clip_box\\n\\t\\tbool insideAny = false;\\n\\t\\tfor (int i = 0; i < max_clip_boxes; i++) {\\n\\t\\t\\tif (i == int(clipBoxCount)) {\\n\\t\\t\\t\\tbreak;\\n\\t\\t\\t}\\n\\n\\t\\t\\tvec4 clipPosition = clipBoxes[i] * modelMatrix * vec4(position, 1.0);\\n\\t\\t\\tbool inside = -0.5 <= clipPosition.x && clipPosition.x <= 0.5;\\n\\t\\t\\tinside = inside && -0.5 <= clipPosition.y && clipPosition.y <= 0.5;\\n\\t\\t\\tinside = inside && -0.5 <= clipPosition.z && clipPosition.z <= 0.5;\\n\\t\\t\\tinsideAny = insideAny || inside;\\n\\t\\t}\\n\\n\\t\\tif (!insideAny) {\\n\\t\\t\\t#if defined clip_outside\\n\\t\\t\\t\\tgl_Position = vec4(1000.0, 1000.0, 1000.0, 1.0);\\n\\t\\t\\t#elif defined clip_highlight_inside && !defined(color_type_depth)\\n\\t\\t\\t\\tfloat c = (vColor.r + vColor.g + vColor.b) / 6.0;\\n\\t\\t\\t#endif\\n\\t\\t} else {\\n\\t\\t\\t#if defined clip_highlight_inside\\n\\t\\t\\t\\tvColor.r += 0.5;\\n\\t\\t\\t#endif\\n\\t\\t}\\n\\t#endif\\n}\\n\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/materials/shaders/pointcloud.vert\n");

/***/ }),

/***/ "./src/constants.ts":
/*!**************************!*\
  !*** ./src/constants.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   COLOR_BLACK: () => (/* binding */ COLOR_BLACK),\n/* harmony export */   DEFAULT_HIGHLIGHT_COLOR: () => (/* binding */ DEFAULT_HIGHLIGHT_COLOR),\n/* harmony export */   DEFAULT_MAX_POINT_SIZE: () => (/* binding */ DEFAULT_MAX_POINT_SIZE),\n/* harmony export */   DEFAULT_MIN_NODE_PIXEL_SIZE: () => (/* binding */ DEFAULT_MIN_NODE_PIXEL_SIZE),\n/* harmony export */   DEFAULT_MIN_POINT_SIZE: () => (/* binding */ DEFAULT_MIN_POINT_SIZE),\n/* harmony export */   DEFAULT_PICK_WINDOW_SIZE: () => (/* binding */ DEFAULT_PICK_WINDOW_SIZE),\n/* harmony export */   DEFAULT_POINT_BUDGET: () => (/* binding */ DEFAULT_POINT_BUDGET),\n/* harmony export */   DEFAULT_RGB_BRIGHTNESS: () => (/* binding */ DEFAULT_RGB_BRIGHTNESS),\n/* harmony export */   DEFAULT_RGB_CONTRAST: () => (/* binding */ DEFAULT_RGB_CONTRAST),\n/* harmony export */   DEFAULT_RGB_GAMMA: () => (/* binding */ DEFAULT_RGB_GAMMA),\n/* harmony export */   MAX_LOADS_TO_GPU: () => (/* binding */ MAX_LOADS_TO_GPU),\n/* harmony export */   MAX_NUM_NODES_LOADING: () => (/* binding */ MAX_NUM_NODES_LOADING),\n/* harmony export */   PERSPECTIVE_CAMERA: () => (/* binding */ PERSPECTIVE_CAMERA)\n/* harmony export */ });\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ \"three\");\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(three__WEBPACK_IMPORTED_MODULE_0__);\n\nconst DEFAULT_RGB_BRIGHTNESS = 0;\nconst DEFAULT_RGB_CONTRAST = 0;\nconst DEFAULT_RGB_GAMMA = 1;\nconst DEFAULT_MAX_POINT_SIZE = 50;\nconst DEFAULT_MIN_NODE_PIXEL_SIZE = 50;\nconst DEFAULT_MIN_POINT_SIZE = 2;\nconst DEFAULT_PICK_WINDOW_SIZE = 15;\nconst DEFAULT_POINT_BUDGET = 1000000;\nconst MAX_LOADS_TO_GPU = 2;\nconst MAX_NUM_NODES_LOADING = 4;\nconst PERSPECTIVE_CAMERA = 'PerspectiveCamera';\nconst COLOR_BLACK = new three__WEBPACK_IMPORTED_MODULE_0__.Color(0, 0, 0);\nconst DEFAULT_HIGHLIGHT_COLOR = new three__WEBPACK_IMPORTED_MODULE_0__.Vector4(1, 0, 0, 1);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29uc3RhbnRzLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3RyZWUvLi9zcmMvY29uc3RhbnRzLnRzP2MzYjQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29sb3IsIFZlY3RvcjQgfSBmcm9tICd0aHJlZSc7XG5leHBvcnQgY29uc3QgREVGQVVMVF9SR0JfQlJJR0hUTkVTUyA9IDA7XG5leHBvcnQgY29uc3QgREVGQVVMVF9SR0JfQ09OVFJBU1QgPSAwO1xuZXhwb3J0IGNvbnN0IERFRkFVTFRfUkdCX0dBTU1BID0gMTtcbmV4cG9ydCBjb25zdCBERUZBVUxUX01BWF9QT0lOVF9TSVpFID0gNTA7XG5leHBvcnQgY29uc3QgREVGQVVMVF9NSU5fTk9ERV9QSVhFTF9TSVpFID0gNTA7XG5leHBvcnQgY29uc3QgREVGQVVMVF9NSU5fUE9JTlRfU0laRSA9IDI7XG5leHBvcnQgY29uc3QgREVGQVVMVF9QSUNLX1dJTkRPV19TSVpFID0gMTU7XG5leHBvcnQgY29uc3QgREVGQVVMVF9QT0lOVF9CVURHRVQgPSAxMDAwMDAwO1xuZXhwb3J0IGNvbnN0IE1BWF9MT0FEU19UT19HUFUgPSAyO1xuZXhwb3J0IGNvbnN0IE1BWF9OVU1fTk9ERVNfTE9BRElORyA9IDQ7XG5leHBvcnQgY29uc3QgUEVSU1BFQ1RJVkVfQ0FNRVJBID0gJ1BlcnNwZWN0aXZlQ2FtZXJhJztcbmV4cG9ydCBjb25zdCBDT0xPUl9CTEFDSyA9IG5ldyBDb2xvcigwLCAwLCAwKTtcbmV4cG9ydCBjb25zdCBERUZBVUxUX0hJR0hMSUdIVF9DT0xPUiA9IG5ldyBWZWN0b3I0KDEsIDAsIDAsIDEpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/constants.ts\n");

/***/ }),

/***/ "./src/features.ts":
/*!*************************!*\
  !*** ./src/features.ts ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FEATURES: () => (/* binding */ FEATURES)\n/* harmony export */ });\nconst canvas = document.createElement('canvas');\nconst gl = canvas.getContext('webgl');\nconst FEATURES = {\n    SHADER_INTERPOLATION: hasExtension('EXT_frag_depth') && hasMinVaryingVectors(8),\n    SHADER_SPLATS: hasExtension('EXT_frag_depth') && hasExtension('OES_texture_float') && hasMinVaryingVectors(8),\n    SHADER_EDL: hasExtension('OES_texture_float') && hasMinVaryingVectors(8),\n    precision: getPrecision(),\n};\nfunction hasExtension(ext) {\n    return gl !== null && Boolean(gl.getExtension(ext));\n}\nfunction hasMinVaryingVectors(value) {\n    return gl !== null && gl.getParameter(gl.MAX_VARYING_VECTORS) >= value;\n}\nfunction getPrecision() {\n    if (gl === null) {\n        return '';\n    }\n    const vsHighpFloat = gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.HIGH_FLOAT);\n    const vsMediumpFloat = gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.MEDIUM_FLOAT);\n    const fsHighpFloat = gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_FLOAT);\n    const fsMediumpFloat = gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT);\n    const highpAvailable = vsHighpFloat && fsHighpFloat && vsHighpFloat.precision > 0 && fsHighpFloat.precision > 0;\n    const mediumpAvailable = vsMediumpFloat &&\n        fsMediumpFloat &&\n        vsMediumpFloat.precision > 0 &&\n        fsMediumpFloat.precision > 0;\n    return highpAvailable ? 'highp' : mediumpAvailable ? 'mediump' : 'lowp';\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZmVhdHVyZXMudHMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3RyZWUvLi9zcmMvZmVhdHVyZXMudHM/MjhjMCJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBjYW52YXMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdjYW52YXMnKTtcbmNvbnN0IGdsID0gY2FudmFzLmdldENvbnRleHQoJ3dlYmdsJyk7XG5leHBvcnQgY29uc3QgRkVBVFVSRVMgPSB7XG4gICAgU0hBREVSX0lOVEVSUE9MQVRJT046IGhhc0V4dGVuc2lvbignRVhUX2ZyYWdfZGVwdGgnKSAmJiBoYXNNaW5WYXJ5aW5nVmVjdG9ycyg4KSxcbiAgICBTSEFERVJfU1BMQVRTOiBoYXNFeHRlbnNpb24oJ0VYVF9mcmFnX2RlcHRoJykgJiYgaGFzRXh0ZW5zaW9uKCdPRVNfdGV4dHVyZV9mbG9hdCcpICYmIGhhc01pblZhcnlpbmdWZWN0b3JzKDgpLFxuICAgIFNIQURFUl9FREw6IGhhc0V4dGVuc2lvbignT0VTX3RleHR1cmVfZmxvYXQnKSAmJiBoYXNNaW5WYXJ5aW5nVmVjdG9ycyg4KSxcbiAgICBwcmVjaXNpb246IGdldFByZWNpc2lvbigpLFxufTtcbmZ1bmN0aW9uIGhhc0V4dGVuc2lvbihleHQpIHtcbiAgICByZXR1cm4gZ2wgIT09IG51bGwgJiYgQm9vbGVhbihnbC5nZXRFeHRlbnNpb24oZXh0KSk7XG59XG5mdW5jdGlvbiBoYXNNaW5WYXJ5aW5nVmVjdG9ycyh2YWx1ZSkge1xuICAgIHJldHVybiBnbCAhPT0gbnVsbCAmJiBnbC5nZXRQYXJhbWV0ZXIoZ2wuTUFYX1ZBUllJTkdfVkVDVE9SUykgPj0gdmFsdWU7XG59XG5mdW5jdGlvbiBnZXRQcmVjaXNpb24oKSB7XG4gICAgaWYgKGdsID09PSBudWxsKSB7XG4gICAgICAgIHJldHVybiAnJztcbiAgICB9XG4gICAgY29uc3QgdnNIaWdocEZsb2F0ID0gZ2wuZ2V0U2hhZGVyUHJlY2lzaW9uRm9ybWF0KGdsLlZFUlRFWF9TSEFERVIsIGdsLkhJR0hfRkxPQVQpO1xuICAgIGNvbnN0IHZzTWVkaXVtcEZsb2F0ID0gZ2wuZ2V0U2hhZGVyUHJlY2lzaW9uRm9ybWF0KGdsLlZFUlRFWF9TSEFERVIsIGdsLk1FRElVTV9GTE9BVCk7XG4gICAgY29uc3QgZnNIaWdocEZsb2F0ID0gZ2wuZ2V0U2hhZGVyUHJlY2lzaW9uRm9ybWF0KGdsLkZSQUdNRU5UX1NIQURFUiwgZ2wuSElHSF9GTE9BVCk7XG4gICAgY29uc3QgZnNNZWRpdW1wRmxvYXQgPSBnbC5nZXRTaGFkZXJQcmVjaXNpb25Gb3JtYXQoZ2wuRlJBR01FTlRfU0hBREVSLCBnbC5NRURJVU1fRkxPQVQpO1xuICAgIGNvbnN0IGhpZ2hwQXZhaWxhYmxlID0gdnNIaWdocEZsb2F0ICYmIGZzSGlnaHBGbG9hdCAmJiB2c0hpZ2hwRmxvYXQucHJlY2lzaW9uID4gMCAmJiBmc0hpZ2hwRmxvYXQucHJlY2lzaW9uID4gMDtcbiAgICBjb25zdCBtZWRpdW1wQXZhaWxhYmxlID0gdnNNZWRpdW1wRmxvYXQgJiZcbiAgICAgICAgZnNNZWRpdW1wRmxvYXQgJiZcbiAgICAgICAgdnNNZWRpdW1wRmxvYXQucHJlY2lzaW9uID4gMCAmJlxuICAgICAgICBmc01lZGl1bXBGbG9hdC5wcmVjaXNpb24gPiAwO1xuICAgIHJldHVybiBoaWdocEF2YWlsYWJsZSA/ICdoaWdocCcgOiBtZWRpdW1wQXZhaWxhYmxlID8gJ21lZGl1bXAnIDogJ2xvd3AnO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/features.ts\n");

/***/ }),

/***/ "./src/index.ts":
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BlurMaterial: () => (/* reexport safe */ _materials__WEBPACK_IMPORTED_MODULE_0__.BlurMaterial),\n/* harmony export */   ClipMode: () => (/* reexport safe */ _materials__WEBPACK_IMPORTED_MODULE_0__.ClipMode),\n/* harmony export */   GRAYSCALE: () => (/* reexport safe */ _materials__WEBPACK_IMPORTED_MODULE_0__.GRAYSCALE),\n/* harmony export */   INFERNO: () => (/* reexport safe */ _materials__WEBPACK_IMPORTED_MODULE_0__.INFERNO),\n/* harmony export */   NormalFilteringMode: () => (/* reexport safe */ _materials__WEBPACK_IMPORTED_MODULE_0__.NormalFilteringMode),\n/* harmony export */   PLASMA: () => (/* reexport safe */ _materials__WEBPACK_IMPORTED_MODULE_0__.PLASMA),\n/* harmony export */   POINT_ATTRIBUTES: () => (/* reexport safe */ _point_attributes__WEBPACK_IMPORTED_MODULE_1__.POINT_ATTRIBUTES),\n/* harmony export */   POINT_ATTRIBUTE_TYPES: () => (/* reexport safe */ _point_attributes__WEBPACK_IMPORTED_MODULE_1__.POINT_ATTRIBUTE_TYPES),\n/* harmony export */   PointAttributeName: () => (/* reexport safe */ _point_attributes__WEBPACK_IMPORTED_MODULE_1__.PointAttributeName),\n/* harmony export */   PointAttributes: () => (/* reexport safe */ _point_attributes__WEBPACK_IMPORTED_MODULE_1__.PointAttributes),\n/* harmony export */   PointCloudMaterial: () => (/* reexport safe */ _materials__WEBPACK_IMPORTED_MODULE_0__.PointCloudMaterial),\n/* harmony export */   PointCloudMixingMode: () => (/* reexport safe */ _materials__WEBPACK_IMPORTED_MODULE_0__.PointCloudMixingMode),\n/* harmony export */   PointCloudOctree: () => (/* reexport safe */ _point_cloud_octree__WEBPACK_IMPORTED_MODULE_6__.PointCloudOctree),\n/* harmony export */   PointCloudOctreeGeometry: () => (/* reexport safe */ _point_cloud_octree_geometry__WEBPACK_IMPORTED_MODULE_3__.PointCloudOctreeGeometry),\n/* harmony export */   PointCloudOctreeGeometryNode: () => (/* reexport safe */ _point_cloud_octree_geometry_node__WEBPACK_IMPORTED_MODULE_2__.PointCloudOctreeGeometryNode),\n/* harmony export */   PointCloudOctreeNode: () => (/* reexport safe */ _point_cloud_octree_node__WEBPACK_IMPORTED_MODULE_4__.PointCloudOctreeNode),\n/* harmony export */   PointCloudOctreePicker: () => (/* reexport safe */ _point_cloud_octree_picker__WEBPACK_IMPORTED_MODULE_5__.PointCloudOctreePicker),\n/* harmony export */   PointCloudTree: () => (/* reexport safe */ _point_cloud_tree__WEBPACK_IMPORTED_MODULE_7__.PointCloudTree),\n/* harmony export */   PointColorType: () => (/* reexport safe */ _materials__WEBPACK_IMPORTED_MODULE_0__.PointColorType),\n/* harmony export */   PointOpacityType: () => (/* reexport safe */ _materials__WEBPACK_IMPORTED_MODULE_0__.PointOpacityType),\n/* harmony export */   PointShape: () => (/* reexport safe */ _materials__WEBPACK_IMPORTED_MODULE_0__.PointShape),\n/* harmony export */   PointSizeType: () => (/* reexport safe */ _materials__WEBPACK_IMPORTED_MODULE_0__.PointSizeType),\n/* harmony export */   Potree: () => (/* reexport safe */ _potree__WEBPACK_IMPORTED_MODULE_8__.Potree),\n/* harmony export */   QueueItem: () => (/* reexport safe */ _potree__WEBPACK_IMPORTED_MODULE_8__.QueueItem),\n/* harmony export */   RAINBOW: () => (/* reexport safe */ _materials__WEBPACK_IMPORTED_MODULE_0__.RAINBOW),\n/* harmony export */   SPECTRAL: () => (/* reexport safe */ _materials__WEBPACK_IMPORTED_MODULE_0__.SPECTRAL),\n/* harmony export */   TreeType: () => (/* reexport safe */ _materials__WEBPACK_IMPORTED_MODULE_0__.TreeType),\n/* harmony export */   V1_LOADER: () => (/* reexport safe */ _loading__WEBPACK_IMPORTED_MODULE_11__.loadPOC),\n/* harmony export */   V2_LOADER: () => (/* reexport safe */ _loading2__WEBPACK_IMPORTED_MODULE_12__.loadOctree),\n/* harmony export */   VIRIDIS: () => (/* reexport safe */ _materials__WEBPACK_IMPORTED_MODULE_0__.VIRIDIS),\n/* harmony export */   Version: () => (/* reexport safe */ _version__WEBPACK_IMPORTED_MODULE_10__.Version),\n/* harmony export */   YELLOW_GREEN: () => (/* reexport safe */ _materials__WEBPACK_IMPORTED_MODULE_0__.YELLOW_GREEN),\n/* harmony export */   generateClassificationTexture: () => (/* reexport safe */ _materials__WEBPACK_IMPORTED_MODULE_0__.generateClassificationTexture),\n/* harmony export */   generateDataTexture: () => (/* reexport safe */ _materials__WEBPACK_IMPORTED_MODULE_0__.generateDataTexture),\n/* harmony export */   generateGradientTexture: () => (/* reexport safe */ _materials__WEBPACK_IMPORTED_MODULE_0__.generateGradientTexture)\n/* harmony export */ });\n/* harmony import */ var _materials__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./materials */ \"./src/materials/index.ts\");\n/* harmony import */ var _point_attributes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./point-attributes */ \"./src/point-attributes.ts\");\n/* harmony import */ var _point_cloud_octree_geometry_node__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./point-cloud-octree-geometry-node */ \"./src/point-cloud-octree-geometry-node.ts\");\n/* harmony import */ var _point_cloud_octree_geometry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./point-cloud-octree-geometry */ \"./src/point-cloud-octree-geometry.ts\");\n/* harmony import */ var _point_cloud_octree_node__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./point-cloud-octree-node */ \"./src/point-cloud-octree-node.ts\");\n/* harmony import */ var _point_cloud_octree_picker__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./point-cloud-octree-picker */ \"./src/point-cloud-octree-picker.ts\");\n/* harmony import */ var _point_cloud_octree__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./point-cloud-octree */ \"./src/point-cloud-octree.ts\");\n/* harmony import */ var _point_cloud_tree__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./point-cloud-tree */ \"./src/point-cloud-tree.ts\");\n/* harmony import */ var _potree__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./potree */ \"./src/potree.ts\");\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./types */ \"./src/types.ts\");\n/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./version */ \"./src/version.ts\");\n/* harmony import */ var _loading__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./loading */ \"./src/loading/index.ts\");\n/* harmony import */ var _loading2__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./loading2 */ \"./src/loading2/index.ts\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXgudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3RyZWUvLi9zcmMvaW5kZXgudHM/ZTk0ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tICcuL21hdGVyaWFscyc7XG5leHBvcnQgKiBmcm9tICcuL3BvaW50LWF0dHJpYnV0ZXMnO1xuZXhwb3J0ICogZnJvbSAnLi9wb2ludC1jbG91ZC1vY3RyZWUtZ2VvbWV0cnktbm9kZSc7XG5leHBvcnQgKiBmcm9tICcuL3BvaW50LWNsb3VkLW9jdHJlZS1nZW9tZXRyeSc7XG5leHBvcnQgKiBmcm9tICcuL3BvaW50LWNsb3VkLW9jdHJlZS1ub2RlJztcbmV4cG9ydCAqIGZyb20gJy4vcG9pbnQtY2xvdWQtb2N0cmVlLXBpY2tlcic7XG5leHBvcnQgKiBmcm9tICcuL3BvaW50LWNsb3VkLW9jdHJlZSc7XG5leHBvcnQgKiBmcm9tICcuL3BvaW50LWNsb3VkLXRyZWUnO1xuZXhwb3J0ICogZnJvbSAnLi9wb3RyZWUnO1xuZXhwb3J0ICogZnJvbSAnLi90eXBlcyc7XG5leHBvcnQgKiBmcm9tICcuL3ZlcnNpb24nO1xuZXhwb3J0IHsgbG9hZFBPQyBhcyBWMV9MT0FERVIgfSBmcm9tICcuL2xvYWRpbmcnO1xuZXhwb3J0IHsgbG9hZE9jdHJlZSBhcyBWMl9MT0FERVIgfSBmcm9tICcuL2xvYWRpbmcyJztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/index.ts\n");

/***/ }),

/***/ "./src/loading/binary-loader.ts":
/*!**************************************!*\
  !*** ./src/loading/binary-loader.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BinaryLoader: () => (/* binding */ BinaryLoader)\n/* harmony export */ });\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ \"three\");\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(three__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _point_attributes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../point-attributes */ \"./src/point-attributes.ts\");\n/* harmony import */ var _utils_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/utils */ \"./src/utils/utils.ts\");\n/* harmony import */ var _utils_worker_pool__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/worker-pool */ \"./src/utils/worker-pool.ts\");\n/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../version */ \"./src/version.ts\");\n// -------------------------------------------------------------------------------------------------\n// Converted to Typescript and adapted from https://github.com/potree/potree\n// -------------------------------------------------------------------------------------------------\n\n\n\n\n\nclass BinaryLoader {\n    constructor({ getUrl = s => Promise.resolve(s), version, boundingBox, scale, xhrRequest, }) {\n        this.disposed = false;\n        if (typeof version === 'string') {\n            this.version = new _version__WEBPACK_IMPORTED_MODULE_4__.Version(version);\n        }\n        else {\n            this.version = version;\n        }\n        this.xhrRequest = xhrRequest;\n        this.getUrl = getUrl;\n        this.boundingBox = boundingBox;\n        this.scale = scale;\n        this.callbacks = [];\n    }\n    dispose() {\n        this.disposed = true;\n    }\n    load(node) {\n        if (node.loaded || this.disposed) {\n            return Promise.resolve();\n        }\n        return Promise.resolve(this.getUrl(this.getNodeUrl(node)))\n            .then(url => this.xhrRequest(url, { mode: 'cors' }))\n            .then(res => (0,_utils_utils__WEBPACK_IMPORTED_MODULE_2__.handleFailedRequest)(res))\n            .then(okRes => okRes.arrayBuffer())\n            .then(buffer => (0,_utils_utils__WEBPACK_IMPORTED_MODULE_2__.handleEmptyBuffer)(buffer))\n            .then(okBuffer => {\n            return new Promise(resolve => this.parse(node, okBuffer, resolve));\n        });\n    }\n    getNodeUrl(node) {\n        let url = node.getUrl();\n        if (this.version.equalOrHigher('1.4')) {\n            url += '.bin';\n        }\n        return url;\n    }\n    parse(node, buffer, resolve) {\n        if (this.disposed) {\n            resolve();\n            return;\n        }\n        BinaryLoader.WORKER_POOL.getWorker().then(autoTerminatingWorker => {\n            const pointAttributes = node.pcoGeometry.pointAttributes;\n            const numPoints = buffer.byteLength / pointAttributes.byteSize;\n            if (this.version.upTo('1.5')) {\n                node.numPoints = numPoints;\n            }\n            autoTerminatingWorker.worker.onmessage = (e) => {\n                if (this.disposed) {\n                    resolve();\n                    BinaryLoader.WORKER_POOL.releaseWorker(autoTerminatingWorker);\n                    return;\n                }\n                const data = e.data;\n                const geometry = (node.geometry = node.geometry || new three__WEBPACK_IMPORTED_MODULE_0__.BufferGeometry());\n                geometry.boundingBox = node.boundingBox;\n                this.addBufferAttributes(geometry, data.attributeBuffers);\n                this.addIndices(geometry, data.indices);\n                this.addNormalAttribute(geometry, numPoints);\n                node.mean = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3().fromArray(data.mean);\n                node.tightBoundingBox = this.getTightBoundingBox(data.tightBoundingBox);\n                node.loaded = true;\n                node.loading = false;\n                node.failed = false;\n                node.pcoGeometry.numNodesLoading--;\n                node.pcoGeometry.needsUpdate = true;\n                this.callbacks.forEach(callback => callback(node));\n                resolve();\n                BinaryLoader.WORKER_POOL.releaseWorker(autoTerminatingWorker);\n            };\n            const message = {\n                buffer,\n                pointAttributes,\n                version: this.version.version,\n                min: node.boundingBox.min.toArray(),\n                offset: node.pcoGeometry.offset.toArray(),\n                scale: this.scale,\n                spacing: node.spacing,\n                hasChildren: node.hasChildren,\n            };\n            autoTerminatingWorker.worker.postMessage(message, [message.buffer]);\n        });\n    }\n    getTightBoundingBox({ min, max }) {\n        const box = new three__WEBPACK_IMPORTED_MODULE_0__.Box3(new three__WEBPACK_IMPORTED_MODULE_0__.Vector3().fromArray(min), new three__WEBPACK_IMPORTED_MODULE_0__.Vector3().fromArray(max));\n        box.max.sub(box.min);\n        box.min.set(0, 0, 0);\n        return box;\n    }\n    addBufferAttributes(geometry, buffers) {\n        Object.keys(buffers).forEach(property => {\n            const buffer = buffers[property].buffer;\n            if (this.isAttribute(property, _point_attributes__WEBPACK_IMPORTED_MODULE_1__.PointAttributeName.POSITION_CARTESIAN)) {\n                geometry.setAttribute('position', new three__WEBPACK_IMPORTED_MODULE_0__.BufferAttribute(new Float32Array(buffer), 3));\n            }\n            else if (this.isAttribute(property, _point_attributes__WEBPACK_IMPORTED_MODULE_1__.PointAttributeName.COLOR_PACKED)) {\n                geometry.setAttribute('color', new three__WEBPACK_IMPORTED_MODULE_0__.BufferAttribute(new Uint8Array(buffer), 3, true));\n            }\n            else if (this.isAttribute(property, _point_attributes__WEBPACK_IMPORTED_MODULE_1__.PointAttributeName.INTENSITY)) {\n                geometry.setAttribute('intensity', new three__WEBPACK_IMPORTED_MODULE_0__.BufferAttribute(new Float32Array(buffer), 1));\n            }\n            else if (this.isAttribute(property, _point_attributes__WEBPACK_IMPORTED_MODULE_1__.PointAttributeName.CLASSIFICATION)) {\n                geometry.setAttribute('classification', new three__WEBPACK_IMPORTED_MODULE_0__.BufferAttribute(new Uint8Array(buffer), 1));\n            }\n            else if (this.isAttribute(property, _point_attributes__WEBPACK_IMPORTED_MODULE_1__.PointAttributeName.NORMAL_SPHEREMAPPED)) {\n                geometry.setAttribute('normal', new three__WEBPACK_IMPORTED_MODULE_0__.BufferAttribute(new Float32Array(buffer), 3));\n            }\n            else if (this.isAttribute(property, _point_attributes__WEBPACK_IMPORTED_MODULE_1__.PointAttributeName.NORMAL_OCT16)) {\n                geometry.setAttribute('normal', new three__WEBPACK_IMPORTED_MODULE_0__.BufferAttribute(new Float32Array(buffer), 3));\n            }\n            else if (this.isAttribute(property, _point_attributes__WEBPACK_IMPORTED_MODULE_1__.PointAttributeName.NORMAL)) {\n                geometry.setAttribute('normal', new three__WEBPACK_IMPORTED_MODULE_0__.BufferAttribute(new Float32Array(buffer), 3));\n            }\n        });\n    }\n    addIndices(geometry, indices) {\n        const indicesAttribute = new three__WEBPACK_IMPORTED_MODULE_0__.Uint8BufferAttribute(indices, 4);\n        indicesAttribute.normalized = true;\n        geometry.setAttribute('indices', indicesAttribute);\n    }\n    addNormalAttribute(geometry, numPoints) {\n        if (!geometry.getAttribute('normal')) {\n            const buffer = new Float32Array(numPoints * 3);\n            geometry.setAttribute('normal', new three__WEBPACK_IMPORTED_MODULE_0__.BufferAttribute(new Float32Array(buffer), 3));\n        }\n    }\n    isAttribute(property, name) {\n        return parseInt(property, 10) === name;\n    }\n}\nBinaryLoader.WORKER_POOL = new _utils_worker_pool__WEBPACK_IMPORTED_MODULE_3__.WorkerPool(32, (__webpack_require__(/*! ../workers/binary-decoder.worker.js */ \"./src/workers/binary-decoder.worker.js\")[\"default\"]));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/loading/binary-loader.ts\n");

/***/ }),

/***/ "./src/loading/index.ts":
/*!******************************!*\
  !*** ./src/loading/index.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BinaryLoader: () => (/* reexport safe */ _binary_loader__WEBPACK_IMPORTED_MODULE_0__.BinaryLoader),\n/* harmony export */   loadPOC: () => (/* reexport safe */ _load_poc__WEBPACK_IMPORTED_MODULE_1__.loadPOC)\n/* harmony export */ });\n/* harmony import */ var _binary_loader__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./binary-loader */ \"./src/loading/binary-loader.ts\");\n/* harmony import */ var _load_poc__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./load-poc */ \"./src/loading/load-poc.ts\");\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./types */ \"./src/loading/types.ts\");\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbG9hZGluZy9pbmRleC50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3BvdHJlZS8uL3NyYy9sb2FkaW5nL2luZGV4LnRzPzFhNGIiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSAnLi9iaW5hcnktbG9hZGVyJztcbmV4cG9ydCAqIGZyb20gJy4vbG9hZC1wb2MnO1xuZXhwb3J0ICogZnJvbSAnLi90eXBlcyc7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/loading/index.ts\n");

/***/ }),

/***/ "./src/loading/load-poc.ts":
/*!*********************************!*\
  !*** ./src/loading/load-poc.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   loadPOC: () => (/* binding */ loadPOC)\n/* harmony export */ });\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ \"three\");\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(three__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _point_attributes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../point-attributes */ \"./src/point-attributes.ts\");\n/* harmony import */ var _point_cloud_octree_geometry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../point-cloud-octree-geometry */ \"./src/point-cloud-octree-geometry.ts\");\n/* harmony import */ var _point_cloud_octree_geometry_node__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../point-cloud-octree-geometry-node */ \"./src/point-cloud-octree-geometry-node.ts\");\n/* harmony import */ var _utils_bounds__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/bounds */ \"./src/utils/bounds.ts\");\n/* harmony import */ var _utils_utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/utils */ \"./src/utils/utils.ts\");\n/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../version */ \"./src/version.ts\");\n/* harmony import */ var _binary_loader__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./binary-loader */ \"./src/loading/binary-loader.ts\");\n// -------------------------------------------------------------------------------------------------\n// Converted to Typescript and adapted from https://github.com/potree/potree\n// -------------------------------------------------------------------------------------------------\n\n\n\n\n\n\n\n\n/**\n *\n * @param url\n *    The url of the point cloud file (usually cloud.js).\n * @param getUrl\n *    Function which receives the relative URL of a point cloud chunk file which is to be loaded\n *    and shoud return a new url (e.g. signed) in the form of a string or a promise.\n * @param xhrRequest An arrow function for a fetch request\n * @returns\n *    An observable which emits once when the first LOD of the point cloud is loaded.\n */\nfunction loadPOC(url, getUrl, xhrRequest) {\n    return Promise.resolve(getUrl(url)).then(transformedUrl => {\n        return xhrRequest(transformedUrl, { mode: 'cors' })\n            .then(res => (0,_utils_utils__WEBPACK_IMPORTED_MODULE_5__.handleFailedRequest)(res))\n            .then(okRes => okRes.json())\n            .then(parse(transformedUrl, getUrl, xhrRequest));\n    });\n}\nfunction parse(url, getUrl, xhrRequest) {\n    return (data) => {\n        const { offset, boundingBox, tightBoundingBox } = getBoundingBoxes(data);\n        const loader = new _binary_loader__WEBPACK_IMPORTED_MODULE_7__.BinaryLoader({\n            getUrl,\n            version: data.version,\n            boundingBox,\n            scale: data.scale,\n            xhrRequest,\n        });\n        const pco = new _point_cloud_octree_geometry__WEBPACK_IMPORTED_MODULE_2__.PointCloudOctreeGeometry(loader, boundingBox, tightBoundingBox, offset, xhrRequest);\n        pco.url = url;\n        pco.octreeDir = data.octreeDir;\n        pco.needsUpdate = true;\n        pco.spacing = data.spacing;\n        pco.hierarchyStepSize = data.hierarchyStepSize;\n        pco.projection = data.projection;\n        pco.offset = offset;\n        pco.pointAttributes = new _point_attributes__WEBPACK_IMPORTED_MODULE_1__.PointAttributes(data.pointAttributes);\n        const nodes = {};\n        const version = new _version__WEBPACK_IMPORTED_MODULE_6__.Version(data.version);\n        return loadRoot(pco, data, nodes, version).then(() => {\n            if (version.upTo('1.4')) {\n                loadRemainingHierarchy(pco, data, nodes);\n            }\n            pco.nodes = nodes;\n            return pco;\n        });\n    };\n}\nfunction getBoundingBoxes(data) {\n    const min = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3(data.boundingBox.lx, data.boundingBox.ly, data.boundingBox.lz);\n    const max = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3(data.boundingBox.ux, data.boundingBox.uy, data.boundingBox.uz);\n    const boundingBox = new three__WEBPACK_IMPORTED_MODULE_0__.Box3(min, max);\n    const tightBoundingBox = boundingBox.clone();\n    const offset = min.clone();\n    if (data.tightBoundingBox) {\n        const { lx, ly, lz, ux, uy, uz } = data.tightBoundingBox;\n        tightBoundingBox.min.set(lx, ly, lz);\n        tightBoundingBox.max.set(ux, uy, uz);\n    }\n    boundingBox.min.sub(offset);\n    boundingBox.max.sub(offset);\n    tightBoundingBox.min.sub(offset);\n    tightBoundingBox.max.sub(offset);\n    return { offset, boundingBox, tightBoundingBox };\n}\nfunction loadRoot(pco, data, nodes, version) {\n    const name = 'r';\n    const root = new _point_cloud_octree_geometry_node__WEBPACK_IMPORTED_MODULE_3__.PointCloudOctreeGeometryNode(name, pco, pco.boundingBox);\n    root.hasChildren = true;\n    root.spacing = pco.spacing;\n    if (version.upTo('1.5')) {\n        root.numPoints = data.hierarchy[0][1];\n    }\n    else {\n        root.numPoints = 0;\n    }\n    pco.root = root;\n    nodes[name] = root;\n    return pco.root.load();\n}\nfunction loadRemainingHierarchy(pco, data, nodes) {\n    for (let i = 1; i < data.hierarchy.length; i++) {\n        const [name, numPoints] = data.hierarchy[i];\n        const { index, parentName, level } = parseName(name);\n        const parentNode = nodes[parentName];\n        const boundingBox = (0,_utils_bounds__WEBPACK_IMPORTED_MODULE_4__.createChildAABB)(parentNode.boundingBox, index);\n        const node = new _point_cloud_octree_geometry_node__WEBPACK_IMPORTED_MODULE_3__.PointCloudOctreeGeometryNode(name, pco, boundingBox);\n        node.level = level;\n        node.numPoints = numPoints;\n        node.spacing = pco.spacing / Math.pow(2, node.level);\n        nodes[name] = node;\n        parentNode.addChild(node);\n    }\n}\nfunction parseName(name) {\n    return {\n        index: (0,_utils_utils__WEBPACK_IMPORTED_MODULE_5__.getIndexFromName)(name),\n        parentName: name.substring(0, name.length - 1),\n        level: name.length - 1,\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbG9hZGluZy9sb2FkLXBvYy50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3BvdHJlZS8uL3NyYy9sb2FkaW5nL2xvYWQtcG9jLnRzPzNkNjIiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuLy8gQ29udmVydGVkIHRvIFR5cGVzY3JpcHQgYW5kIGFkYXB0ZWQgZnJvbSBodHRwczovL2dpdGh1Yi5jb20vcG90cmVlL3BvdHJlZVxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuaW1wb3J0IHsgQm94MywgVmVjdG9yMyB9IGZyb20gJ3RocmVlJztcbmltcG9ydCB7IFBvaW50QXR0cmlidXRlcyB9IGZyb20gJy4uL3BvaW50LWF0dHJpYnV0ZXMnO1xuaW1wb3J0IHsgUG9pbnRDbG91ZE9jdHJlZUdlb21ldHJ5IH0gZnJvbSAnLi4vcG9pbnQtY2xvdWQtb2N0cmVlLWdlb21ldHJ5JztcbmltcG9ydCB7IFBvaW50Q2xvdWRPY3RyZWVHZW9tZXRyeU5vZGUgfSBmcm9tICcuLi9wb2ludC1jbG91ZC1vY3RyZWUtZ2VvbWV0cnktbm9kZSc7XG5pbXBvcnQgeyBjcmVhdGVDaGlsZEFBQkIgfSBmcm9tICcuLi91dGlscy9ib3VuZHMnO1xuaW1wb3J0IHsgZ2V0SW5kZXhGcm9tTmFtZSwgaGFuZGxlRmFpbGVkUmVxdWVzdCB9IGZyb20gJy4uL3V0aWxzL3V0aWxzJztcbmltcG9ydCB7IFZlcnNpb24gfSBmcm9tICcuLi92ZXJzaW9uJztcbmltcG9ydCB7IEJpbmFyeUxvYWRlciB9IGZyb20gJy4vYmluYXJ5LWxvYWRlcic7XG4vKipcbiAqXG4gKiBAcGFyYW0gdXJsXG4gKiAgICBUaGUgdXJsIG9mIHRoZSBwb2ludCBjbG91ZCBmaWxlICh1c3VhbGx5IGNsb3VkLmpzKS5cbiAqIEBwYXJhbSBnZXRVcmxcbiAqICAgIEZ1bmN0aW9uIHdoaWNoIHJlY2VpdmVzIHRoZSByZWxhdGl2ZSBVUkwgb2YgYSBwb2ludCBjbG91ZCBjaHVuayBmaWxlIHdoaWNoIGlzIHRvIGJlIGxvYWRlZFxuICogICAgYW5kIHNob3VkIHJldHVybiBhIG5ldyB1cmwgKGUuZy4gc2lnbmVkKSBpbiB0aGUgZm9ybSBvZiBhIHN0cmluZyBvciBhIHByb21pc2UuXG4gKiBAcGFyYW0geGhyUmVxdWVzdCBBbiBhcnJvdyBmdW5jdGlvbiBmb3IgYSBmZXRjaCByZXF1ZXN0XG4gKiBAcmV0dXJuc1xuICogICAgQW4gb2JzZXJ2YWJsZSB3aGljaCBlbWl0cyBvbmNlIHdoZW4gdGhlIGZpcnN0IExPRCBvZiB0aGUgcG9pbnQgY2xvdWQgaXMgbG9hZGVkLlxuICovXG5leHBvcnQgZnVuY3Rpb24gbG9hZFBPQyh1cmwsIGdldFVybCwgeGhyUmVxdWVzdCkge1xuICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoZ2V0VXJsKHVybCkpLnRoZW4odHJhbnNmb3JtZWRVcmwgPT4ge1xuICAgICAgICByZXR1cm4geGhyUmVxdWVzdCh0cmFuc2Zvcm1lZFVybCwgeyBtb2RlOiAnY29ycycgfSlcbiAgICAgICAgICAgIC50aGVuKHJlcyA9PiBoYW5kbGVGYWlsZWRSZXF1ZXN0KHJlcykpXG4gICAgICAgICAgICAudGhlbihva1JlcyA9PiBva1Jlcy5qc29uKCkpXG4gICAgICAgICAgICAudGhlbihwYXJzZSh0cmFuc2Zvcm1lZFVybCwgZ2V0VXJsLCB4aHJSZXF1ZXN0KSk7XG4gICAgfSk7XG59XG5mdW5jdGlvbiBwYXJzZSh1cmwsIGdldFVybCwgeGhyUmVxdWVzdCkge1xuICAgIHJldHVybiAoZGF0YSkgPT4ge1xuICAgICAgICBjb25zdCB7IG9mZnNldCwgYm91bmRpbmdCb3gsIHRpZ2h0Qm91bmRpbmdCb3ggfSA9IGdldEJvdW5kaW5nQm94ZXMoZGF0YSk7XG4gICAgICAgIGNvbnN0IGxvYWRlciA9IG5ldyBCaW5hcnlMb2FkZXIoe1xuICAgICAgICAgICAgZ2V0VXJsLFxuICAgICAgICAgICAgdmVyc2lvbjogZGF0YS52ZXJzaW9uLFxuICAgICAgICAgICAgYm91bmRpbmdCb3gsXG4gICAgICAgICAgICBzY2FsZTogZGF0YS5zY2FsZSxcbiAgICAgICAgICAgIHhoclJlcXVlc3QsXG4gICAgICAgIH0pO1xuICAgICAgICBjb25zdCBwY28gPSBuZXcgUG9pbnRDbG91ZE9jdHJlZUdlb21ldHJ5KGxvYWRlciwgYm91bmRpbmdCb3gsIHRpZ2h0Qm91bmRpbmdCb3gsIG9mZnNldCwgeGhyUmVxdWVzdCk7XG4gICAgICAgIHBjby51cmwgPSB1cmw7XG4gICAgICAgIHBjby5vY3RyZWVEaXIgPSBkYXRhLm9jdHJlZURpcjtcbiAgICAgICAgcGNvLm5lZWRzVXBkYXRlID0gdHJ1ZTtcbiAgICAgICAgcGNvLnNwYWNpbmcgPSBkYXRhLnNwYWNpbmc7XG4gICAgICAgIHBjby5oaWVyYXJjaHlTdGVwU2l6ZSA9IGRhdGEuaGllcmFyY2h5U3RlcFNpemU7XG4gICAgICAgIHBjby5wcm9qZWN0aW9uID0gZGF0YS5wcm9qZWN0aW9uO1xuICAgICAgICBwY28ub2Zmc2V0ID0gb2Zmc2V0O1xuICAgICAgICBwY28ucG9pbnRBdHRyaWJ1dGVzID0gbmV3IFBvaW50QXR0cmlidXRlcyhkYXRhLnBvaW50QXR0cmlidXRlcyk7XG4gICAgICAgIGNvbnN0IG5vZGVzID0ge307XG4gICAgICAgIGNvbnN0IHZlcnNpb24gPSBuZXcgVmVyc2lvbihkYXRhLnZlcnNpb24pO1xuICAgICAgICByZXR1cm4gbG9hZFJvb3QocGNvLCBkYXRhLCBub2RlcywgdmVyc2lvbikudGhlbigoKSA9PiB7XG4gICAgICAgICAgICBpZiAodmVyc2lvbi51cFRvKCcxLjQnKSkge1xuICAgICAgICAgICAgICAgIGxvYWRSZW1haW5pbmdIaWVyYXJjaHkocGNvLCBkYXRhLCBub2Rlcyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBwY28ubm9kZXMgPSBub2RlcztcbiAgICAgICAgICAgIHJldHVybiBwY287XG4gICAgICAgIH0pO1xuICAgIH07XG59XG5mdW5jdGlvbiBnZXRCb3VuZGluZ0JveGVzKGRhdGEpIHtcbiAgICBjb25zdCBtaW4gPSBuZXcgVmVjdG9yMyhkYXRhLmJvdW5kaW5nQm94Lmx4LCBkYXRhLmJvdW5kaW5nQm94Lmx5LCBkYXRhLmJvdW5kaW5nQm94Lmx6KTtcbiAgICBjb25zdCBtYXggPSBuZXcgVmVjdG9yMyhkYXRhLmJvdW5kaW5nQm94LnV4LCBkYXRhLmJvdW5kaW5nQm94LnV5LCBkYXRhLmJvdW5kaW5nQm94LnV6KTtcbiAgICBjb25zdCBib3VuZGluZ0JveCA9IG5ldyBCb3gzKG1pbiwgbWF4KTtcbiAgICBjb25zdCB0aWdodEJvdW5kaW5nQm94ID0gYm91bmRpbmdCb3guY2xvbmUoKTtcbiAgICBjb25zdCBvZmZzZXQgPSBtaW4uY2xvbmUoKTtcbiAgICBpZiAoZGF0YS50aWdodEJvdW5kaW5nQm94KSB7XG4gICAgICAgIGNvbnN0IHsgbHgsIGx5LCBseiwgdXgsIHV5LCB1eiB9ID0gZGF0YS50aWdodEJvdW5kaW5nQm94O1xuICAgICAgICB0aWdodEJvdW5kaW5nQm94Lm1pbi5zZXQobHgsIGx5LCBseik7XG4gICAgICAgIHRpZ2h0Qm91bmRpbmdCb3gubWF4LnNldCh1eCwgdXksIHV6KTtcbiAgICB9XG4gICAgYm91bmRpbmdCb3gubWluLnN1YihvZmZzZXQpO1xuICAgIGJvdW5kaW5nQm94Lm1heC5zdWIob2Zmc2V0KTtcbiAgICB0aWdodEJvdW5kaW5nQm94Lm1pbi5zdWIob2Zmc2V0KTtcbiAgICB0aWdodEJvdW5kaW5nQm94Lm1heC5zdWIob2Zmc2V0KTtcbiAgICByZXR1cm4geyBvZmZzZXQsIGJvdW5kaW5nQm94LCB0aWdodEJvdW5kaW5nQm94IH07XG59XG5mdW5jdGlvbiBsb2FkUm9vdChwY28sIGRhdGEsIG5vZGVzLCB2ZXJzaW9uKSB7XG4gICAgY29uc3QgbmFtZSA9ICdyJztcbiAgICBjb25zdCByb290ID0gbmV3IFBvaW50Q2xvdWRPY3RyZWVHZW9tZXRyeU5vZGUobmFtZSwgcGNvLCBwY28uYm91bmRpbmdCb3gpO1xuICAgIHJvb3QuaGFzQ2hpbGRyZW4gPSB0cnVlO1xuICAgIHJvb3Quc3BhY2luZyA9IHBjby5zcGFjaW5nO1xuICAgIGlmICh2ZXJzaW9uLnVwVG8oJzEuNScpKSB7XG4gICAgICAgIHJvb3QubnVtUG9pbnRzID0gZGF0YS5oaWVyYXJjaHlbMF1bMV07XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICByb290Lm51bVBvaW50cyA9IDA7XG4gICAgfVxuICAgIHBjby5yb290ID0gcm9vdDtcbiAgICBub2Rlc1tuYW1lXSA9IHJvb3Q7XG4gICAgcmV0dXJuIHBjby5yb290LmxvYWQoKTtcbn1cbmZ1bmN0aW9uIGxvYWRSZW1haW5pbmdIaWVyYXJjaHkocGNvLCBkYXRhLCBub2Rlcykge1xuICAgIGZvciAobGV0IGkgPSAxOyBpIDwgZGF0YS5oaWVyYXJjaHkubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgY29uc3QgW25hbWUsIG51bVBvaW50c10gPSBkYXRhLmhpZXJhcmNoeVtpXTtcbiAgICAgICAgY29uc3QgeyBpbmRleCwgcGFyZW50TmFtZSwgbGV2ZWwgfSA9IHBhcnNlTmFtZShuYW1lKTtcbiAgICAgICAgY29uc3QgcGFyZW50Tm9kZSA9IG5vZGVzW3BhcmVudE5hbWVdO1xuICAgICAgICBjb25zdCBib3VuZGluZ0JveCA9IGNyZWF0ZUNoaWxkQUFCQihwYXJlbnROb2RlLmJvdW5kaW5nQm94LCBpbmRleCk7XG4gICAgICAgIGNvbnN0IG5vZGUgPSBuZXcgUG9pbnRDbG91ZE9jdHJlZUdlb21ldHJ5Tm9kZShuYW1lLCBwY28sIGJvdW5kaW5nQm94KTtcbiAgICAgICAgbm9kZS5sZXZlbCA9IGxldmVsO1xuICAgICAgICBub2RlLm51bVBvaW50cyA9IG51bVBvaW50cztcbiAgICAgICAgbm9kZS5zcGFjaW5nID0gcGNvLnNwYWNpbmcgLyBNYXRoLnBvdygyLCBub2RlLmxldmVsKTtcbiAgICAgICAgbm9kZXNbbmFtZV0gPSBub2RlO1xuICAgICAgICBwYXJlbnROb2RlLmFkZENoaWxkKG5vZGUpO1xuICAgIH1cbn1cbmZ1bmN0aW9uIHBhcnNlTmFtZShuYW1lKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgaW5kZXg6IGdldEluZGV4RnJvbU5hbWUobmFtZSksXG4gICAgICAgIHBhcmVudE5hbWU6IG5hbWUuc3Vic3RyaW5nKDAsIG5hbWUubGVuZ3RoIC0gMSksXG4gICAgICAgIGxldmVsOiBuYW1lLmxlbmd0aCAtIDEsXG4gICAgfTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/loading/load-poc.ts\n");

/***/ }),

/***/ "./src/loading/types.ts":
/*!******************************!*\
  !*** ./src/loading/types.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbG9hZGluZy90eXBlcy50cyIsIm1hcHBpbmdzIjoiO0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3RyZWUvLi9zcmMvbG9hZGluZy90eXBlcy50cz9iNWNiIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7fTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/loading/types.ts\n");

/***/ }),

/***/ "./src/loading2/index.ts":
/*!*******************************!*\
  !*** ./src/loading2/index.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   loadOctree: () => (/* reexport safe */ _load_octree__WEBPACK_IMPORTED_MODULE_0__.loadOctree)\n/* harmony export */ });\n/* harmony import */ var _load_octree__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./load-octree */ \"./src/loading2/load-octree.ts\");\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbG9hZGluZzIvaW5kZXgudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovL3BvdHJlZS8uL3NyYy9sb2FkaW5nMi9pbmRleC50cz8wZWVhIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gJy4vbG9hZC1vY3RyZWUnO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/loading2/index.ts\n");

/***/ }),

/***/ "./src/loading2/load-octree.ts":
/*!*************************************!*\
  !*** ./src/loading2/load-octree.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   loadOctree: () => (/* binding */ loadOctree)\n/* harmony export */ });\n/* harmony import */ var _octree_loader__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./octree-loader */ \"./src/loading2/octree-loader.ts\");\n\nasync function loadOctree(url, getUrl, xhrRequest) {\n    const trueUrl = await getUrl(url);\n    const loader = new _octree_loader__WEBPACK_IMPORTED_MODULE_0__.OctreeLoader(getUrl, url);\n    const { geometry } = await loader.load(trueUrl, xhrRequest);\n    return geometry;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbG9hZGluZzIvbG9hZC1vY3RyZWUudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3BvdHJlZS8uL3NyYy9sb2FkaW5nMi9sb2FkLW9jdHJlZS50cz80MzEwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE9jdHJlZUxvYWRlciB9IGZyb20gJy4vb2N0cmVlLWxvYWRlcic7XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbG9hZE9jdHJlZSh1cmwsIGdldFVybCwgeGhyUmVxdWVzdCkge1xuICAgIGNvbnN0IHRydWVVcmwgPSBhd2FpdCBnZXRVcmwodXJsKTtcbiAgICBjb25zdCBsb2FkZXIgPSBuZXcgT2N0cmVlTG9hZGVyKGdldFVybCwgdXJsKTtcbiAgICBjb25zdCB7IGdlb21ldHJ5IH0gPSBhd2FpdCBsb2FkZXIubG9hZCh0cnVlVXJsLCB4aHJSZXF1ZXN0KTtcbiAgICByZXR1cm4gZ2VvbWV0cnk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/loading2/load-octree.ts\n");

/***/ }),

/***/ "./src/loading2/octree-geometry-node.ts":
/*!**********************************************!*\
  !*** ./src/loading2/octree-geometry-node.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OctreeGeometryNode: () => (/* binding */ OctreeGeometryNode)\n/* harmony export */ });\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ \"three\");\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(three__WEBPACK_IMPORTED_MODULE_0__);\n\nclass OctreeGeometryNode {\n    constructor(name, octreeGeometry, boundingBox) {\n        this.name = name;\n        this.octreeGeometry = octreeGeometry;\n        this.boundingBox = boundingBox;\n        this.loaded = false;\n        this.loading = false;\n        this.failed = false;\n        this.parent = null;\n        this.hasChildren = false;\n        this.isLeafNode = true;\n        this.isTreeNode = false;\n        this.isGeometryNode = true;\n        this.children = [\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null\n        ];\n        this.id = OctreeGeometryNode.IDCount++;\n        this.index = parseInt(name.charAt(name.length - 1));\n        this.boundingSphere = boundingBox.getBoundingSphere(new three__WEBPACK_IMPORTED_MODULE_0__.Sphere());\n        this.tightBoundingBox = boundingBox.clone();\n        this.numPoints = 0;\n        this.oneTimeDisposeHandlers = [];\n    }\n    getLevel() {\n        return this.level;\n    }\n    isLoaded() {\n        return this.loaded;\n    }\n    getBoundingSphere() {\n        return this.boundingSphere;\n    }\n    getBoundingBox() {\n        return this.boundingBox;\n    }\n    load() {\n        if (this.octreeGeometry.numNodesLoading >= this.octreeGeometry.maxNumNodesLoading) {\n            return Promise.resolve();\n        }\n        if (!this.octreeGeometry.loader) {\n            this.loading = false;\n            this.failed = true;\n            return Promise.reject(`Loader not initialized for ${this.name}`);\n        }\n        return this.octreeGeometry.loader.load(this);\n    }\n    getNumPoints() {\n        return this.numPoints;\n    }\n    dispose() {\n        if (this.geometry && this.parent != null) {\n            this.geometry.dispose();\n            this.geometry = undefined;\n            this.loaded = false;\n            for (let i = 0; i < this.oneTimeDisposeHandlers.length; i++) {\n                const handler = this.oneTimeDisposeHandlers[i];\n                handler();\n            }\n            this.oneTimeDisposeHandlers = [];\n        }\n    }\n    traverse(cb, includeSelf = true) {\n        const stack = includeSelf ? [this] : [];\n        let current;\n        while ((current = stack.pop()) !== undefined) {\n            cb(current);\n            for (const child of current.children) {\n                if (child !== null) {\n                    stack.push(child);\n                }\n            }\n        }\n    }\n}\nOctreeGeometryNode.IDCount = 0;\nOctreeGeometryNode.IDCount = 0;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbG9hZGluZzIvb2N0cmVlLWdlb21ldHJ5LW5vZGUudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG90cmVlLy4vc3JjL2xvYWRpbmcyL29jdHJlZS1nZW9tZXRyeS1ub2RlLnRzPzM5YzAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU3BoZXJlIH0gZnJvbSAndGhyZWUnO1xuZXhwb3J0IGNsYXNzIE9jdHJlZUdlb21ldHJ5Tm9kZSB7XG4gICAgY29uc3RydWN0b3IobmFtZSwgb2N0cmVlR2VvbWV0cnksIGJvdW5kaW5nQm94KSB7XG4gICAgICAgIHRoaXMubmFtZSA9IG5hbWU7XG4gICAgICAgIHRoaXMub2N0cmVlR2VvbWV0cnkgPSBvY3RyZWVHZW9tZXRyeTtcbiAgICAgICAgdGhpcy5ib3VuZGluZ0JveCA9IGJvdW5kaW5nQm94O1xuICAgICAgICB0aGlzLmxvYWRlZCA9IGZhbHNlO1xuICAgICAgICB0aGlzLmxvYWRpbmcgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5mYWlsZWQgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5wYXJlbnQgPSBudWxsO1xuICAgICAgICB0aGlzLmhhc0NoaWxkcmVuID0gZmFsc2U7XG4gICAgICAgIHRoaXMuaXNMZWFmTm9kZSA9IHRydWU7XG4gICAgICAgIHRoaXMuaXNUcmVlTm9kZSA9IGZhbHNlO1xuICAgICAgICB0aGlzLmlzR2VvbWV0cnlOb2RlID0gdHJ1ZTtcbiAgICAgICAgdGhpcy5jaGlsZHJlbiA9IFtcbiAgICAgICAgICAgIG51bGwsXG4gICAgICAgICAgICBudWxsLFxuICAgICAgICAgICAgbnVsbCxcbiAgICAgICAgICAgIG51bGwsXG4gICAgICAgICAgICBudWxsLFxuICAgICAgICAgICAgbnVsbCxcbiAgICAgICAgICAgIG51bGwsXG4gICAgICAgICAgICBudWxsXG4gICAgICAgIF07XG4gICAgICAgIHRoaXMuaWQgPSBPY3RyZWVHZW9tZXRyeU5vZGUuSURDb3VudCsrO1xuICAgICAgICB0aGlzLmluZGV4ID0gcGFyc2VJbnQobmFtZS5jaGFyQXQobmFtZS5sZW5ndGggLSAxKSk7XG4gICAgICAgIHRoaXMuYm91bmRpbmdTcGhlcmUgPSBib3VuZGluZ0JveC5nZXRCb3VuZGluZ1NwaGVyZShuZXcgU3BoZXJlKCkpO1xuICAgICAgICB0aGlzLnRpZ2h0Qm91bmRpbmdCb3ggPSBib3VuZGluZ0JveC5jbG9uZSgpO1xuICAgICAgICB0aGlzLm51bVBvaW50cyA9IDA7XG4gICAgICAgIHRoaXMub25lVGltZURpc3Bvc2VIYW5kbGVycyA9IFtdO1xuICAgIH1cbiAgICBnZXRMZXZlbCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMubGV2ZWw7XG4gICAgfVxuICAgIGlzTG9hZGVkKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5sb2FkZWQ7XG4gICAgfVxuICAgIGdldEJvdW5kaW5nU3BoZXJlKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5ib3VuZGluZ1NwaGVyZTtcbiAgICB9XG4gICAgZ2V0Qm91bmRpbmdCb3goKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmJvdW5kaW5nQm94O1xuICAgIH1cbiAgICBsb2FkKCkge1xuICAgICAgICBpZiAodGhpcy5vY3RyZWVHZW9tZXRyeS5udW1Ob2Rlc0xvYWRpbmcgPj0gdGhpcy5vY3RyZWVHZW9tZXRyeS5tYXhOdW1Ob2Rlc0xvYWRpbmcpIHtcbiAgICAgICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIXRoaXMub2N0cmVlR2VvbWV0cnkubG9hZGVyKSB7XG4gICAgICAgICAgICB0aGlzLmxvYWRpbmcgPSBmYWxzZTtcbiAgICAgICAgICAgIHRoaXMuZmFpbGVkID0gdHJ1ZTtcbiAgICAgICAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChgTG9hZGVyIG5vdCBpbml0aWFsaXplZCBmb3IgJHt0aGlzLm5hbWV9YCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMub2N0cmVlR2VvbWV0cnkubG9hZGVyLmxvYWQodGhpcyk7XG4gICAgfVxuICAgIGdldE51bVBvaW50cygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMubnVtUG9pbnRzO1xuICAgIH1cbiAgICBkaXNwb3NlKCkge1xuICAgICAgICBpZiAodGhpcy5nZW9tZXRyeSAmJiB0aGlzLnBhcmVudCAhPSBudWxsKSB7XG4gICAgICAgICAgICB0aGlzLmdlb21ldHJ5LmRpc3Bvc2UoKTtcbiAgICAgICAgICAgIHRoaXMuZ2VvbWV0cnkgPSB1bmRlZmluZWQ7XG4gICAgICAgICAgICB0aGlzLmxvYWRlZCA9IGZhbHNlO1xuICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLm9uZVRpbWVEaXNwb3NlSGFuZGxlcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgICBjb25zdCBoYW5kbGVyID0gdGhpcy5vbmVUaW1lRGlzcG9zZUhhbmRsZXJzW2ldO1xuICAgICAgICAgICAgICAgIGhhbmRsZXIoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHRoaXMub25lVGltZURpc3Bvc2VIYW5kbGVycyA9IFtdO1xuICAgICAgICB9XG4gICAgfVxuICAgIHRyYXZlcnNlKGNiLCBpbmNsdWRlU2VsZiA9IHRydWUpIHtcbiAgICAgICAgY29uc3Qgc3RhY2sgPSBpbmNsdWRlU2VsZiA/IFt0aGlzXSA6IFtdO1xuICAgICAgICBsZXQgY3VycmVudDtcbiAgICAgICAgd2hpbGUgKChjdXJyZW50ID0gc3RhY2sucG9wKCkpICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIGNiKGN1cnJlbnQpO1xuICAgICAgICAgICAgZm9yIChjb25zdCBjaGlsZCBvZiBjdXJyZW50LmNoaWxkcmVuKSB7XG4gICAgICAgICAgICAgICAgaWYgKGNoaWxkICE9PSBudWxsKSB7XG4gICAgICAgICAgICAgICAgICAgIHN0YWNrLnB1c2goY2hpbGQpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbn1cbk9jdHJlZUdlb21ldHJ5Tm9kZS5JRENvdW50ID0gMDtcbk9jdHJlZUdlb21ldHJ5Tm9kZS5JRENvdW50ID0gMDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/loading2/octree-geometry-node.ts\n");

/***/ }),

/***/ "./src/loading2/octree-geometry.ts":
/*!*****************************************!*\
  !*** ./src/loading2/octree-geometry.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OctreeGeometry: () => (/* binding */ OctreeGeometry)\n/* harmony export */ });\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ \"three\");\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(three__WEBPACK_IMPORTED_MODULE_0__);\n\nclass OctreeGeometry {\n    constructor(loader, boundingBox) {\n        this.loader = loader;\n        this.boundingBox = boundingBox;\n        this.maxNumNodesLoading = 3;\n        this.numNodesLoading = 0;\n        this.needsUpdate = true;\n        this.disposed = false;\n        this.pointAttributes = null;\n        this.spacing = 0;\n        this.url = null;\n        this.tightBoundingBox = this.boundingBox.clone();\n        this.boundingSphere = this.boundingBox.getBoundingSphere(new three__WEBPACK_IMPORTED_MODULE_0__.Sphere());\n        this.tightBoundingSphere = this.boundingSphere.clone();\n    }\n    dispose() {\n        this.root.traverse((node) => node.dispose());\n        this.disposed = true;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbG9hZGluZzIvb2N0cmVlLWdlb21ldHJ5LnRzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3BvdHJlZS8uL3NyYy9sb2FkaW5nMi9vY3RyZWUtZ2VvbWV0cnkudHM/MmE1NSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTcGhlcmUgfSBmcm9tICd0aHJlZSc7XG5leHBvcnQgY2xhc3MgT2N0cmVlR2VvbWV0cnkge1xuICAgIGNvbnN0cnVjdG9yKGxvYWRlciwgYm91bmRpbmdCb3gpIHtcbiAgICAgICAgdGhpcy5sb2FkZXIgPSBsb2FkZXI7XG4gICAgICAgIHRoaXMuYm91bmRpbmdCb3ggPSBib3VuZGluZ0JveDtcbiAgICAgICAgdGhpcy5tYXhOdW1Ob2Rlc0xvYWRpbmcgPSAzO1xuICAgICAgICB0aGlzLm51bU5vZGVzTG9hZGluZyA9IDA7XG4gICAgICAgIHRoaXMubmVlZHNVcGRhdGUgPSB0cnVlO1xuICAgICAgICB0aGlzLmRpc3Bvc2VkID0gZmFsc2U7XG4gICAgICAgIHRoaXMucG9pbnRBdHRyaWJ1dGVzID0gbnVsbDtcbiAgICAgICAgdGhpcy5zcGFjaW5nID0gMDtcbiAgICAgICAgdGhpcy51cmwgPSBudWxsO1xuICAgICAgICB0aGlzLnRpZ2h0Qm91bmRpbmdCb3ggPSB0aGlzLmJvdW5kaW5nQm94LmNsb25lKCk7XG4gICAgICAgIHRoaXMuYm91bmRpbmdTcGhlcmUgPSB0aGlzLmJvdW5kaW5nQm94LmdldEJvdW5kaW5nU3BoZXJlKG5ldyBTcGhlcmUoKSk7XG4gICAgICAgIHRoaXMudGlnaHRCb3VuZGluZ1NwaGVyZSA9IHRoaXMuYm91bmRpbmdTcGhlcmUuY2xvbmUoKTtcbiAgICB9XG4gICAgZGlzcG9zZSgpIHtcbiAgICAgICAgdGhpcy5yb290LnRyYXZlcnNlKChub2RlKSA9PiBub2RlLmRpc3Bvc2UoKSk7XG4gICAgICAgIHRoaXMuZGlzcG9zZWQgPSB0cnVlO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/loading2/octree-geometry.ts\n");

/***/ }),

/***/ "./src/loading2/octree-loader.ts":
/*!***************************************!*\
  !*** ./src/loading2/octree-loader.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GLTF_COLORS_FILE: () => (/* binding */ GLTF_COLORS_FILE),\n/* harmony export */   GLTF_POSITIONS_FILE: () => (/* binding */ GLTF_POSITIONS_FILE),\n/* harmony export */   HIERARCHY_FILE: () => (/* binding */ HIERARCHY_FILE),\n/* harmony export */   NodeLoader: () => (/* binding */ NodeLoader),\n/* harmony export */   OCTREE_FILE: () => (/* binding */ OCTREE_FILE),\n/* harmony export */   OctreeLoader: () => (/* binding */ OctreeLoader)\n/* harmony export */ });\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ \"three\");\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(three__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _octree_geometry__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./octree-geometry */ \"./src/loading2/octree-geometry.ts\");\n/* harmony import */ var _octree_geometry_node__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./octree-geometry-node */ \"./src/loading2/octree-geometry-node.ts\");\n/* harmony import */ var _point_attributes__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./point-attributes */ \"./src/loading2/point-attributes.ts\");\n/* harmony import */ var _worker_pool__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./worker-pool */ \"./src/loading2/worker-pool.ts\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils */ \"./src/loading2/utils.ts\");\n\n\n\n\n\n\n\n// Buffer files for DEFAULT encoding\nconst HIERARCHY_FILE = 'hierarchy.bin';\nconst OCTREE_FILE = 'octree.bin';\n// Default buffer files for GLTF encoding\nconst GLTF_COLORS_FILE = 'colors.glbin';\nconst GLTF_POSITIONS_FILE = 'positions.glbin';\nclass NodeLoader {\n    constructor(getUrl, url, workerPool, metadata) {\n        this.getUrl = getUrl;\n        this.url = url;\n        this.workerPool = workerPool;\n        this.metadata = metadata;\n        this.hierarchyPath = '';\n        this.octreePath = '';\n        this.gltfColorsPath = '';\n        this.gltfPositionsPath = '';\n    }\n    async load(node) {\n        if (node.loaded || node.loading) {\n            return;\n        }\n        node.loading = true;\n        node.octreeGeometry.numNodesLoading++;\n        try {\n            if (node.nodeType === 2) {\n                await this.loadHierarchy(node);\n            }\n            const { byteOffset, byteSize } = node;\n            if (byteOffset === undefined || byteSize === undefined) {\n                throw new Error('byteOffset and byteSize are required');\n            }\n            let buffer;\n            if (this.metadata.encoding === \"GLTF\") {\n                const urlColors = await this.getUrl(this.gltfColorsPath);\n                const urlPositions = await this.getUrl(this.gltfPositionsPath);\n                if (byteSize === BigInt(0)) {\n                    buffer = new ArrayBuffer(0);\n                    console.warn(`loaded node with 0 bytes: ${node.name}`);\n                }\n                else {\n                    const firstPositions = byteOffset * 4n * 3n;\n                    const lastPositions = byteOffset * 4n * 3n + byteSize * 4n * 3n - 1n;\n                    const headersPositions = { Range: `bytes=${firstPositions}-${lastPositions}` };\n                    const responsePositions = await fetch(urlPositions, { headers: headersPositions });\n                    const bufferPositions = await responsePositions.arrayBuffer();\n                    const firstColors = byteOffset * 4n;\n                    const lastColors = byteOffset * 4n + byteSize * 4n - 1n;\n                    const headersColors = { Range: `bytes=${firstColors}-${lastColors}` };\n                    const responseColors = await fetch(urlColors, { headers: headersColors });\n                    const bufferColors = await responseColors.arrayBuffer();\n                    buffer = appendBuffer(bufferPositions, bufferColors);\n                }\n            }\n            else {\n                const urlOctree = await this.getUrl(this.octreePath);\n                const first = byteOffset;\n                const last = byteOffset + byteSize - BigInt(1);\n                if (byteSize === BigInt(0)) {\n                    buffer = new ArrayBuffer(0);\n                    console.warn(`loaded node with 0 bytes: ${node.name}`);\n                }\n                else {\n                    const headers = { Range: `bytes=${first}-${last}` };\n                    const response = await fetch(urlOctree, { headers });\n                    buffer = await response.arrayBuffer();\n                }\n            }\n            const workerType = this.metadata.encoding === 'GLTF' ? _worker_pool__WEBPACK_IMPORTED_MODULE_4__.WorkerType.DECODER_WORKER_GLTF : _worker_pool__WEBPACK_IMPORTED_MODULE_4__.WorkerType.DECODER_WORKER;\n            const worker = this.workerPool.getWorker(workerType);\n            worker.onmessage = (e) => {\n                const data = e.data;\n                const buffers = data.attributeBuffers;\n                this.workerPool.returnWorker(workerType, worker);\n                const geometry = new three__WEBPACK_IMPORTED_MODULE_0__.BufferGeometry();\n                for (const property in buffers) {\n                    const buffer = buffers[property].buffer;\n                    if (property === 'position') {\n                        geometry.setAttribute('position', new three__WEBPACK_IMPORTED_MODULE_0__.BufferAttribute(new Float32Array(buffer), 3));\n                    }\n                    else if (property === 'rgba') {\n                        geometry.setAttribute('rgba', new three__WEBPACK_IMPORTED_MODULE_0__.BufferAttribute(new Uint8Array(buffer), 4, true));\n                    }\n                    else if (property === 'NORMAL') {\n                        geometry.setAttribute('normal', new three__WEBPACK_IMPORTED_MODULE_0__.BufferAttribute(new Float32Array(buffer), 3));\n                    }\n                    else if (property === 'INDICES') {\n                        const bufferAttribute = new three__WEBPACK_IMPORTED_MODULE_0__.BufferAttribute(new Uint8Array(buffer), 4);\n                        bufferAttribute.normalized = true;\n                        geometry.setAttribute('indices', bufferAttribute);\n                    }\n                    else {\n                        const bufferAttribute = new three__WEBPACK_IMPORTED_MODULE_0__.BufferAttribute(new Float32Array(buffer), 1);\n                        const batchAttribute = buffers[property].attribute;\n                        bufferAttribute.potree = {\n                            offset: buffers[property].offset,\n                            scale: buffers[property].scale,\n                            preciseBuffer: buffers[property].preciseBuffer,\n                            range: batchAttribute.range\n                        };\n                        geometry.setAttribute(property, bufferAttribute);\n                    }\n                }\n                node.density = data.density;\n                node.geometry = geometry;\n                node.loaded = true;\n                node.loading = false;\n                node.octreeGeometry.numNodesLoading--;\n                node.octreeGeometry.needsUpdate = true;\n                node.tightBoundingBox = this.getTightBoundingBox(data.tightBoundingBox);\n            };\n            const pointAttributes = node.octreeGeometry.pointAttributes;\n            const scale = node.octreeGeometry.scale;\n            const box = node.boundingBox;\n            const min = node.octreeGeometry.offset.clone().add(box.min);\n            const size = box.max.clone().sub(box.min);\n            const max = min.clone().add(size);\n            const numPoints = node.numPoints;\n            const offset = node.octreeGeometry.loader.offset;\n            const message = {\n                name: node.name,\n                buffer: buffer,\n                pointAttributes: pointAttributes,\n                scale: scale,\n                min: min,\n                max: max,\n                size: size,\n                offset: offset,\n                numPoints: numPoints\n            };\n            worker.postMessage(message, [message.buffer]);\n        }\n        catch (e) {\n            node.loaded = false;\n            node.loading = false;\n            node.octreeGeometry.numNodesLoading--;\n        }\n    }\n    parseHierarchy(node, buffer) {\n        const view = new DataView(buffer);\n        const bytesPerNode = 22;\n        const numNodes = buffer.byteLength / bytesPerNode;\n        const octree = node.octreeGeometry;\n        const nodes = new Array(numNodes);\n        nodes[0] = node;\n        let nodePos = 1;\n        for (let i = 0; i < numNodes; i++) {\n            const current = nodes[i];\n            const type = view.getUint8(i * bytesPerNode + 0);\n            const childMask = view.getUint8(i * bytesPerNode + 1);\n            const numPoints = view.getUint32(i * bytesPerNode + 2, true);\n            const byteOffset = view.getBigInt64(i * bytesPerNode + 6, true);\n            const byteSize = view.getBigInt64(i * bytesPerNode + 14, true);\n            if (current.nodeType === 2) {\n                // replace proxy with real node\n                current.byteOffset = byteOffset;\n                current.byteSize = byteSize;\n                current.numPoints = numPoints;\n            }\n            else if (type === 2) {\n                // load proxy\n                current.hierarchyByteOffset = byteOffset;\n                current.hierarchyByteSize = byteSize;\n                current.numPoints = numPoints;\n            }\n            else {\n                // load real node\n                current.byteOffset = byteOffset;\n                current.byteSize = byteSize;\n                current.numPoints = numPoints;\n            }\n            current.nodeType = type;\n            if (current.nodeType === 2) {\n                continue;\n            }\n            for (let childIndex = 0; childIndex < 8; childIndex++) {\n                const childExists = (1 << childIndex & childMask) !== 0;\n                if (!childExists) {\n                    continue;\n                }\n                const childName = current.name + childIndex;\n                const childAABB = createChildAABB(current.boundingBox, childIndex);\n                const child = new _octree_geometry_node__WEBPACK_IMPORTED_MODULE_2__.OctreeGeometryNode(childName, octree, childAABB);\n                child.name = childName;\n                child.spacing = current.spacing / 2;\n                child.level = current.level + 1;\n                current.children[childIndex] = child;\n                child.parent = current;\n                nodes[nodePos] = child;\n                nodePos++;\n            }\n        }\n    }\n    async loadHierarchy(node) {\n        const { hierarchyByteOffset, hierarchyByteSize } = node;\n        if (hierarchyByteOffset === undefined || hierarchyByteSize === undefined) {\n            throw new Error(`hierarchyByteOffset and hierarchyByteSize are undefined for node ${node.name}`);\n        }\n        const hierarchyUrl = await this.getUrl(this.hierarchyPath);\n        const first = hierarchyByteOffset;\n        const last = first + hierarchyByteSize - BigInt(1);\n        const headers = { Range: `bytes=${first}-${last}` };\n        const response = await fetch(hierarchyUrl, { headers });\n        const buffer = await response.arrayBuffer();\n        this.parseHierarchy(node, buffer);\n    }\n    getTightBoundingBox({ min, max }) {\n        const box = new three__WEBPACK_IMPORTED_MODULE_0__.Box3(new three__WEBPACK_IMPORTED_MODULE_0__.Vector3().fromArray(min), new three__WEBPACK_IMPORTED_MODULE_0__.Vector3().fromArray(max));\n        box.max.sub(box.min);\n        box.min.set(0, 0, 0);\n        return box;\n    }\n}\nconst tmpVec3 = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3();\nfunction createChildAABB(aabb, index) {\n    const min = aabb.min.clone();\n    const max = aabb.max.clone();\n    const size = tmpVec3.subVectors(max, min);\n    if ((index & 0b0001) > 0) {\n        min.z += size.z / 2;\n    }\n    else {\n        max.z -= size.z / 2;\n    }\n    if ((index & 0b0010) > 0) {\n        min.y += size.y / 2;\n    }\n    else {\n        max.y -= size.y / 2;\n    }\n    if ((index & 0b0100) > 0) {\n        min.x += size.x / 2;\n    }\n    else {\n        max.x -= size.x / 2;\n    }\n    return new three__WEBPACK_IMPORTED_MODULE_0__.Box3(min, max);\n}\nfunction appendBuffer(buffer1, buffer2) {\n    var tmp = new Uint8Array(buffer1.byteLength + buffer2.byteLength);\n    tmp.set(new Uint8Array(buffer1), 0);\n    tmp.set(new Uint8Array(buffer2), buffer1.byteLength);\n    return tmp.buffer;\n}\nconst typenameTypeattributeMap = {\n    double: _point_attributes__WEBPACK_IMPORTED_MODULE_3__.PointAttributeTypes.DATA_TYPE_DOUBLE,\n    float: _point_attributes__WEBPACK_IMPORTED_MODULE_3__.PointAttributeTypes.DATA_TYPE_FLOAT,\n    int8: _point_attributes__WEBPACK_IMPORTED_MODULE_3__.PointAttributeTypes.DATA_TYPE_INT8,\n    uint8: _point_attributes__WEBPACK_IMPORTED_MODULE_3__.PointAttributeTypes.DATA_TYPE_UINT8,\n    int16: _point_attributes__WEBPACK_IMPORTED_MODULE_3__.PointAttributeTypes.DATA_TYPE_INT16,\n    uint16: _point_attributes__WEBPACK_IMPORTED_MODULE_3__.PointAttributeTypes.DATA_TYPE_UINT16,\n    int32: _point_attributes__WEBPACK_IMPORTED_MODULE_3__.PointAttributeTypes.DATA_TYPE_INT32,\n    uint32: _point_attributes__WEBPACK_IMPORTED_MODULE_3__.PointAttributeTypes.DATA_TYPE_UINT32,\n    int64: _point_attributes__WEBPACK_IMPORTED_MODULE_3__.PointAttributeTypes.DATA_TYPE_INT64,\n    uint64: _point_attributes__WEBPACK_IMPORTED_MODULE_3__.PointAttributeTypes.DATA_TYPE_UINT64\n};\nclass OctreeLoader {\n    constructor(getUrl, url) {\n        this.workerPool = new _worker_pool__WEBPACK_IMPORTED_MODULE_4__.WorkerPool();\n        this.basePath = '';\n        this.hierarchyPath = '';\n        this.octreePath = '';\n        this.gltfColorsPath = '';\n        this.gltfPositionsPath = '';\n        this.getUrl = getUrl;\n        this.basePath = (0,_utils__WEBPACK_IMPORTED_MODULE_5__.extractBasePath)(url);\n        this.hierarchyPath = (0,_utils__WEBPACK_IMPORTED_MODULE_5__.buildUrl)(this.basePath, HIERARCHY_FILE);\n        this.octreePath = (0,_utils__WEBPACK_IMPORTED_MODULE_5__.buildUrl)(this.basePath, OCTREE_FILE);\n        // We default to the known naming convention for glTF datasets\n        this.gltfColorsPath = (0,_utils__WEBPACK_IMPORTED_MODULE_5__.buildUrl)(this.basePath, GLTF_COLORS_FILE);\n        this.gltfPositionsPath = (0,_utils__WEBPACK_IMPORTED_MODULE_5__.buildUrl)(this.basePath, GLTF_POSITIONS_FILE);\n    }\n    static parseAttributes(jsonAttributes) {\n        const attributes = new _point_attributes__WEBPACK_IMPORTED_MODULE_3__.PointAttributes();\n        const replacements = { rgb: 'rgba' };\n        for (const jsonAttribute of jsonAttributes) {\n            const { name, numElements, min, max, bufferView } = jsonAttribute;\n            const type = typenameTypeattributeMap[jsonAttribute.type];\n            const potreeAttributeName = replacements[name] ? replacements[name] : name;\n            const attribute = new _point_attributes__WEBPACK_IMPORTED_MODULE_3__.PointAttribute(potreeAttributeName, type, numElements);\n            if (bufferView) {\n                attribute.uri = bufferView.uri;\n            }\n            if (numElements === 1 && min && max) {\n                attribute.range = [min[0], max[0]];\n            }\n            else {\n                attribute.range = [min, max];\n            }\n            if (name === 'gps-time') { // HACK: Guard against bad gpsTime range in metadata, see potree/potree#909\n                if (typeof attribute.range[0] === 'number' && attribute.range[0] === attribute.range[1]) {\n                    attribute.range[1] += 1;\n                }\n            }\n            attribute.initialRange = attribute.range;\n            attributes.add(attribute);\n        }\n        {\n            const hasNormals = attributes.attributes.find((a) => a.name === 'NormalX') !== undefined &&\n                attributes.attributes.find((a) => a.name === 'NormalY') !== undefined &&\n                attributes.attributes.find((a) => a.name === 'NormalZ') !== undefined;\n            if (hasNormals) {\n                const vector = {\n                    name: 'NORMAL',\n                    attributes: ['NormalX', 'NormalY', 'NormalZ']\n                };\n                attributes.addVector(vector);\n            }\n        }\n        return attributes;\n    }\n    async load(url, xhrRequest) {\n        const metadata = await this.fetchMetadata(url, xhrRequest);\n        const attributes = OctreeLoader.parseAttributes(metadata.attributes);\n        this.applyCustomBufferURI(metadata.encoding, attributes);\n        const loader = this.createLoader(url, metadata, attributes);\n        const boundingBox = this.createBoundingBox(metadata);\n        const offset = this.getOffset(boundingBox);\n        const octree = this.initializeOctree(loader, url, metadata, boundingBox, offset, attributes);\n        const root = this.initializeRootNode(octree, boundingBox, metadata);\n        octree.root = root;\n        loader.load(root);\n        return { geometry: octree };\n    }\n    async fetchMetadata(url, xhrRequest) {\n        const response = await xhrRequest(url);\n        return response.json();\n    }\n    applyCustomBufferURI(encoding, attributes) {\n        // Only datasets with GLTF encoding support custom buffer URIs -\n        // as opposed to datasets with DEFAULT encoding coming from PotreeConverter\n        if (encoding === 'GLTF') {\n            this.gltfPositionsPath = attributes.getAttribute(\"position\")?.uri ?? this.gltfPositionsPath;\n            this.gltfColorsPath = attributes.getAttribute(\"rgba\")?.uri ?? this.gltfColorsPath;\n        }\n    }\n    createLoader(url, metadata, attributes) {\n        const loader = new NodeLoader(this.getUrl, url, this.workerPool, metadata);\n        loader.attributes = attributes;\n        loader.scale = metadata.scale;\n        loader.offset = metadata.offset;\n        loader.hierarchyPath = this.hierarchyPath;\n        loader.octreePath = this.octreePath;\n        loader.gltfColorsPath = this.gltfColorsPath;\n        loader.gltfPositionsPath = this.gltfPositionsPath;\n        return loader;\n    }\n    createBoundingBox(metadata) {\n        const min = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3(...metadata.boundingBox.min);\n        const max = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3(...metadata.boundingBox.max);\n        const boundingBox = new three__WEBPACK_IMPORTED_MODULE_0__.Box3(min, max);\n        return boundingBox;\n    }\n    getOffset(boundingBox) {\n        const offset = boundingBox.min.clone();\n        boundingBox.min.sub(offset);\n        boundingBox.max.sub(offset);\n        return offset;\n    }\n    initializeOctree(loader, url, metadata, boundingBox, offset, attributes) {\n        const octree = new _octree_geometry__WEBPACK_IMPORTED_MODULE_1__.OctreeGeometry(loader, boundingBox);\n        octree.url = url;\n        octree.spacing = metadata.spacing;\n        octree.scale = metadata.scale;\n        octree.projection = metadata.projection;\n        octree.boundingBox = boundingBox;\n        octree.boundingSphere = boundingBox.getBoundingSphere(new three__WEBPACK_IMPORTED_MODULE_0__.Sphere());\n        octree.tightBoundingSphere = boundingBox.getBoundingSphere(new three__WEBPACK_IMPORTED_MODULE_0__.Sphere());\n        octree.tightBoundingBox = this.getTightBoundingBox(metadata);\n        octree.offset = offset;\n        octree.pointAttributes = attributes;\n        return octree;\n    }\n    initializeRootNode(octree, boundingBox, metadata) {\n        const root = new _octree_geometry_node__WEBPACK_IMPORTED_MODULE_2__.OctreeGeometryNode('r', octree, boundingBox);\n        root.level = 0;\n        root.nodeType = 2;\n        root.hierarchyByteOffset = BigInt(0);\n        root.hierarchyByteSize = BigInt(metadata.hierarchy.firstChunkSize);\n        root.spacing = octree.spacing;\n        root.byteOffset = BigInt(0);\n        return root;\n    }\n    getTightBoundingBox(metadata) {\n        const positionAttribute = metadata.attributes.find((attr) => attr.name === 'position');\n        if (!positionAttribute || !positionAttribute.min || !positionAttribute.max) {\n            console.warn('Position attribute (min, max) not found. Falling back to boundingBox for tightBoundingBox');\n            return new three__WEBPACK_IMPORTED_MODULE_0__.Box3(new three__WEBPACK_IMPORTED_MODULE_0__.Vector3(...metadata.boundingBox.min), new three__WEBPACK_IMPORTED_MODULE_0__.Vector3(...metadata.boundingBox.max));\n        }\n        const offset = metadata.boundingBox.min;\n        const tightBoundingBox = new three__WEBPACK_IMPORTED_MODULE_0__.Box3(new three__WEBPACK_IMPORTED_MODULE_0__.Vector3(positionAttribute.min[0] - offset[0], positionAttribute.min[1] - offset[1], positionAttribute.min[2] - offset[2]), new three__WEBPACK_IMPORTED_MODULE_0__.Vector3(positionAttribute.max[0] - offset[0], positionAttribute.max[1] - offset[1], positionAttribute.max[2] - offset[2]));\n        return tightBoundingBox;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/loading2/octree-loader.ts\n");

/***/ }),

/***/ "./src/loading2/point-attributes.ts":
/*!******************************************!*\
  !*** ./src/loading2/point-attributes.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   POINT_ATTRIBUTES: () => (/* binding */ POINT_ATTRIBUTES),\n/* harmony export */   PointAttribute: () => (/* binding */ PointAttribute),\n/* harmony export */   PointAttributeTypes: () => (/* binding */ PointAttributeTypes),\n/* harmony export */   PointAttributes: () => (/* binding */ PointAttributes)\n/* harmony export */ });\n/**\n * Some types of possible point attribute data formats\n *\n * @class\n */\nconst PointAttributeTypes = {\n    DATA_TYPE_DOUBLE: { ordinal: 0, name: 'double', size: 8 },\n    DATA_TYPE_FLOAT: { ordinal: 1, name: 'float', size: 4 },\n    DATA_TYPE_INT8: { ordinal: 2, name: 'int8', size: 1 },\n    DATA_TYPE_UINT8: { ordinal: 3, name: 'uint8', size: 1 },\n    DATA_TYPE_INT16: { ordinal: 4, name: 'int16', size: 2 },\n    DATA_TYPE_UINT16: { ordinal: 5, name: 'uint16', size: 2 },\n    DATA_TYPE_INT32: { ordinal: 6, name: 'int32', size: 4 },\n    DATA_TYPE_UINT32: { ordinal: 7, name: 'uint32', size: 4 },\n    DATA_TYPE_INT64: { ordinal: 8, name: 'int64', size: 8 },\n    DATA_TYPE_UINT64: { ordinal: 9, name: 'uint64', size: 8 }\n};\nlet i = 0;\nfor (const obj in PointAttributeTypes) {\n    PointAttributeTypes[i] = PointAttributeTypes[obj];\n    i++;\n}\n\nclass PointAttribute {\n    constructor(name, type, numElements, range = [Infinity, -Infinity], uri = undefined) {\n        this.name = name;\n        this.type = type;\n        this.numElements = numElements;\n        this.range = range;\n        this.uri = uri;\n        this.byteSize = this.numElements * this.type.size;\n        this.description = '';\n    }\n}\n\nconst POINT_ATTRIBUTES = {\n    POSITION_CARTESIAN: new PointAttribute('POSITION_CARTESIAN', PointAttributeTypes.DATA_TYPE_FLOAT, 3),\n    RGBA_PACKED: new PointAttribute('COLOR_PACKED', PointAttributeTypes.DATA_TYPE_INT8, 4),\n    COLOR_PACKED: new PointAttribute('COLOR_PACKED', PointAttributeTypes.DATA_TYPE_INT8, 4),\n    RGB_PACKED: new PointAttribute('COLOR_PACKED', PointAttributeTypes.DATA_TYPE_INT8, 3),\n    NORMAL_FLOATS: new PointAttribute('NORMAL_FLOATS', PointAttributeTypes.DATA_TYPE_FLOAT, 3),\n    INTENSITY: new PointAttribute('INTENSITY', PointAttributeTypes.DATA_TYPE_UINT16, 1),\n    CLASSIFICATION: new PointAttribute('CLASSIFICATION', PointAttributeTypes.DATA_TYPE_UINT8, 1),\n    NORMAL_SPHEREMAPPED: new PointAttribute('NORMAL_SPHEREMAPPED', PointAttributeTypes.DATA_TYPE_UINT8, 2),\n    NORMAL_OCT16: new PointAttribute('NORMAL_OCT16', PointAttributeTypes.DATA_TYPE_UINT8, 2),\n    NORMAL: new PointAttribute('NORMAL', PointAttributeTypes.DATA_TYPE_FLOAT, 3),\n    RETURN_NUMBER: new PointAttribute('RETURN_NUMBER', PointAttributeTypes.DATA_TYPE_UINT8, 1),\n    NUMBER_OF_RETURNS: new PointAttribute('NUMBER_OF_RETURNS', PointAttributeTypes.DATA_TYPE_UINT8, 1),\n    SOURCE_ID: new PointAttribute('SOURCE_ID', PointAttributeTypes.DATA_TYPE_UINT16, 1),\n    INDICES: new PointAttribute('INDICES', PointAttributeTypes.DATA_TYPE_UINT32, 1),\n    SPACING: new PointAttribute('SPACING', PointAttributeTypes.DATA_TYPE_FLOAT, 1),\n    GPS_TIME: new PointAttribute('GPS_TIME', PointAttributeTypes.DATA_TYPE_DOUBLE, 1)\n};\nclass PointAttributes {\n    constructor(pointAttributes, attributes = [], byteSize = 0, size = 0, vectors = []) {\n        this.attributes = attributes;\n        this.byteSize = byteSize;\n        this.size = size;\n        this.vectors = vectors;\n        if (pointAttributes != null) {\n            for (let i = 0; i < pointAttributes.length; i++) {\n                const pointAttributeName = pointAttributes[i];\n                const pointAttribute = POINT_ATTRIBUTES[pointAttributeName];\n                this.attributes.push(pointAttribute);\n                this.byteSize += pointAttribute.byteSize;\n                this.size++;\n            }\n        }\n    }\n    add(pointAttribute) {\n        this.attributes.push(pointAttribute);\n        this.byteSize += pointAttribute.byteSize;\n        this.size++;\n    }\n    addVector(vector) {\n        this.vectors.push(vector);\n    }\n    hasNormals() {\n        for (const name in this.attributes) {\n            const pointAttribute = this.attributes[name];\n            if (pointAttribute === POINT_ATTRIBUTES.NORMAL_SPHEREMAPPED ||\n                pointAttribute === POINT_ATTRIBUTES.NORMAL_FLOATS ||\n                pointAttribute === POINT_ATTRIBUTES.NORMAL ||\n                pointAttribute === POINT_ATTRIBUTES.NORMAL_OCT16) {\n                return true;\n            }\n        }\n        return false;\n    }\n    getAttribute(attributeName) {\n        return this.attributes.find(attr => attr.name === attributeName);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbG9hZGluZzIvcG9pbnQtYXR0cmlidXRlcy50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG90cmVlLy4vc3JjL2xvYWRpbmcyL3BvaW50LWF0dHJpYnV0ZXMudHM/ZGNlMCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFNvbWUgdHlwZXMgb2YgcG9zc2libGUgcG9pbnQgYXR0cmlidXRlIGRhdGEgZm9ybWF0c1xuICpcbiAqIEBjbGFzc1xuICovXG5jb25zdCBQb2ludEF0dHJpYnV0ZVR5cGVzID0ge1xuICAgIERBVEFfVFlQRV9ET1VCTEU6IHsgb3JkaW5hbDogMCwgbmFtZTogJ2RvdWJsZScsIHNpemU6IDggfSxcbiAgICBEQVRBX1RZUEVfRkxPQVQ6IHsgb3JkaW5hbDogMSwgbmFtZTogJ2Zsb2F0Jywgc2l6ZTogNCB9LFxuICAgIERBVEFfVFlQRV9JTlQ4OiB7IG9yZGluYWw6IDIsIG5hbWU6ICdpbnQ4Jywgc2l6ZTogMSB9LFxuICAgIERBVEFfVFlQRV9VSU5UODogeyBvcmRpbmFsOiAzLCBuYW1lOiAndWludDgnLCBzaXplOiAxIH0sXG4gICAgREFUQV9UWVBFX0lOVDE2OiB7IG9yZGluYWw6IDQsIG5hbWU6ICdpbnQxNicsIHNpemU6IDIgfSxcbiAgICBEQVRBX1RZUEVfVUlOVDE2OiB7IG9yZGluYWw6IDUsIG5hbWU6ICd1aW50MTYnLCBzaXplOiAyIH0sXG4gICAgREFUQV9UWVBFX0lOVDMyOiB7IG9yZGluYWw6IDYsIG5hbWU6ICdpbnQzMicsIHNpemU6IDQgfSxcbiAgICBEQVRBX1RZUEVfVUlOVDMyOiB7IG9yZGluYWw6IDcsIG5hbWU6ICd1aW50MzInLCBzaXplOiA0IH0sXG4gICAgREFUQV9UWVBFX0lOVDY0OiB7IG9yZGluYWw6IDgsIG5hbWU6ICdpbnQ2NCcsIHNpemU6IDggfSxcbiAgICBEQVRBX1RZUEVfVUlOVDY0OiB7IG9yZGluYWw6IDksIG5hbWU6ICd1aW50NjQnLCBzaXplOiA4IH1cbn07XG5sZXQgaSA9IDA7XG5mb3IgKGNvbnN0IG9iaiBpbiBQb2ludEF0dHJpYnV0ZVR5cGVzKSB7XG4gICAgUG9pbnRBdHRyaWJ1dGVUeXBlc1tpXSA9IFBvaW50QXR0cmlidXRlVHlwZXNbb2JqXTtcbiAgICBpKys7XG59XG5leHBvcnQgeyBQb2ludEF0dHJpYnV0ZVR5cGVzIH07XG5jbGFzcyBQb2ludEF0dHJpYnV0ZSB7XG4gICAgY29uc3RydWN0b3IobmFtZSwgdHlwZSwgbnVtRWxlbWVudHMsIHJhbmdlID0gW0luZmluaXR5LCAtSW5maW5pdHldLCB1cmkgPSB1bmRlZmluZWQpIHtcbiAgICAgICAgdGhpcy5uYW1lID0gbmFtZTtcbiAgICAgICAgdGhpcy50eXBlID0gdHlwZTtcbiAgICAgICAgdGhpcy5udW1FbGVtZW50cyA9IG51bUVsZW1lbnRzO1xuICAgICAgICB0aGlzLnJhbmdlID0gcmFuZ2U7XG4gICAgICAgIHRoaXMudXJpID0gdXJpO1xuICAgICAgICB0aGlzLmJ5dGVTaXplID0gdGhpcy5udW1FbGVtZW50cyAqIHRoaXMudHlwZS5zaXplO1xuICAgICAgICB0aGlzLmRlc2NyaXB0aW9uID0gJyc7XG4gICAgfVxufVxuZXhwb3J0IHsgUG9pbnRBdHRyaWJ1dGUgfTtcbmV4cG9ydCBjb25zdCBQT0lOVF9BVFRSSUJVVEVTID0ge1xuICAgIFBPU0lUSU9OX0NBUlRFU0lBTjogbmV3IFBvaW50QXR0cmlidXRlKCdQT1NJVElPTl9DQVJURVNJQU4nLCBQb2ludEF0dHJpYnV0ZVR5cGVzLkRBVEFfVFlQRV9GTE9BVCwgMyksXG4gICAgUkdCQV9QQUNLRUQ6IG5ldyBQb2ludEF0dHJpYnV0ZSgnQ09MT1JfUEFDS0VEJywgUG9pbnRBdHRyaWJ1dGVUeXBlcy5EQVRBX1RZUEVfSU5UOCwgNCksXG4gICAgQ09MT1JfUEFDS0VEOiBuZXcgUG9pbnRBdHRyaWJ1dGUoJ0NPTE9SX1BBQ0tFRCcsIFBvaW50QXR0cmlidXRlVHlwZXMuREFUQV9UWVBFX0lOVDgsIDQpLFxuICAgIFJHQl9QQUNLRUQ6IG5ldyBQb2ludEF0dHJpYnV0ZSgnQ09MT1JfUEFDS0VEJywgUG9pbnRBdHRyaWJ1dGVUeXBlcy5EQVRBX1RZUEVfSU5UOCwgMyksXG4gICAgTk9STUFMX0ZMT0FUUzogbmV3IFBvaW50QXR0cmlidXRlKCdOT1JNQUxfRkxPQVRTJywgUG9pbnRBdHRyaWJ1dGVUeXBlcy5EQVRBX1RZUEVfRkxPQVQsIDMpLFxuICAgIElOVEVOU0lUWTogbmV3IFBvaW50QXR0cmlidXRlKCdJTlRFTlNJVFknLCBQb2ludEF0dHJpYnV0ZVR5cGVzLkRBVEFfVFlQRV9VSU5UMTYsIDEpLFxuICAgIENMQVNTSUZJQ0FUSU9OOiBuZXcgUG9pbnRBdHRyaWJ1dGUoJ0NMQVNTSUZJQ0FUSU9OJywgUG9pbnRBdHRyaWJ1dGVUeXBlcy5EQVRBX1RZUEVfVUlOVDgsIDEpLFxuICAgIE5PUk1BTF9TUEhFUkVNQVBQRUQ6IG5ldyBQb2ludEF0dHJpYnV0ZSgnTk9STUFMX1NQSEVSRU1BUFBFRCcsIFBvaW50QXR0cmlidXRlVHlwZXMuREFUQV9UWVBFX1VJTlQ4LCAyKSxcbiAgICBOT1JNQUxfT0NUMTY6IG5ldyBQb2ludEF0dHJpYnV0ZSgnTk9STUFMX09DVDE2JywgUG9pbnRBdHRyaWJ1dGVUeXBlcy5EQVRBX1RZUEVfVUlOVDgsIDIpLFxuICAgIE5PUk1BTDogbmV3IFBvaW50QXR0cmlidXRlKCdOT1JNQUwnLCBQb2ludEF0dHJpYnV0ZVR5cGVzLkRBVEFfVFlQRV9GTE9BVCwgMyksXG4gICAgUkVUVVJOX05VTUJFUjogbmV3IFBvaW50QXR0cmlidXRlKCdSRVRVUk5fTlVNQkVSJywgUG9pbnRBdHRyaWJ1dGVUeXBlcy5EQVRBX1RZUEVfVUlOVDgsIDEpLFxuICAgIE5VTUJFUl9PRl9SRVRVUk5TOiBuZXcgUG9pbnRBdHRyaWJ1dGUoJ05VTUJFUl9PRl9SRVRVUk5TJywgUG9pbnRBdHRyaWJ1dGVUeXBlcy5EQVRBX1RZUEVfVUlOVDgsIDEpLFxuICAgIFNPVVJDRV9JRDogbmV3IFBvaW50QXR0cmlidXRlKCdTT1VSQ0VfSUQnLCBQb2ludEF0dHJpYnV0ZVR5cGVzLkRBVEFfVFlQRV9VSU5UMTYsIDEpLFxuICAgIElORElDRVM6IG5ldyBQb2ludEF0dHJpYnV0ZSgnSU5ESUNFUycsIFBvaW50QXR0cmlidXRlVHlwZXMuREFUQV9UWVBFX1VJTlQzMiwgMSksXG4gICAgU1BBQ0lORzogbmV3IFBvaW50QXR0cmlidXRlKCdTUEFDSU5HJywgUG9pbnRBdHRyaWJ1dGVUeXBlcy5EQVRBX1RZUEVfRkxPQVQsIDEpLFxuICAgIEdQU19USU1FOiBuZXcgUG9pbnRBdHRyaWJ1dGUoJ0dQU19USU1FJywgUG9pbnRBdHRyaWJ1dGVUeXBlcy5EQVRBX1RZUEVfRE9VQkxFLCAxKVxufTtcbmV4cG9ydCBjbGFzcyBQb2ludEF0dHJpYnV0ZXMge1xuICAgIGNvbnN0cnVjdG9yKHBvaW50QXR0cmlidXRlcywgYXR0cmlidXRlcyA9IFtdLCBieXRlU2l6ZSA9IDAsIHNpemUgPSAwLCB2ZWN0b3JzID0gW10pIHtcbiAgICAgICAgdGhpcy5hdHRyaWJ1dGVzID0gYXR0cmlidXRlcztcbiAgICAgICAgdGhpcy5ieXRlU2l6ZSA9IGJ5dGVTaXplO1xuICAgICAgICB0aGlzLnNpemUgPSBzaXplO1xuICAgICAgICB0aGlzLnZlY3RvcnMgPSB2ZWN0b3JzO1xuICAgICAgICBpZiAocG9pbnRBdHRyaWJ1dGVzICE9IG51bGwpIHtcbiAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgcG9pbnRBdHRyaWJ1dGVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgcG9pbnRBdHRyaWJ1dGVOYW1lID0gcG9pbnRBdHRyaWJ1dGVzW2ldO1xuICAgICAgICAgICAgICAgIGNvbnN0IHBvaW50QXR0cmlidXRlID0gUE9JTlRfQVRUUklCVVRFU1twb2ludEF0dHJpYnV0ZU5hbWVdO1xuICAgICAgICAgICAgICAgIHRoaXMuYXR0cmlidXRlcy5wdXNoKHBvaW50QXR0cmlidXRlKTtcbiAgICAgICAgICAgICAgICB0aGlzLmJ5dGVTaXplICs9IHBvaW50QXR0cmlidXRlLmJ5dGVTaXplO1xuICAgICAgICAgICAgICAgIHRoaXMuc2l6ZSsrO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIGFkZChwb2ludEF0dHJpYnV0ZSkge1xuICAgICAgICB0aGlzLmF0dHJpYnV0ZXMucHVzaChwb2ludEF0dHJpYnV0ZSk7XG4gICAgICAgIHRoaXMuYnl0ZVNpemUgKz0gcG9pbnRBdHRyaWJ1dGUuYnl0ZVNpemU7XG4gICAgICAgIHRoaXMuc2l6ZSsrO1xuICAgIH1cbiAgICBhZGRWZWN0b3IodmVjdG9yKSB7XG4gICAgICAgIHRoaXMudmVjdG9ycy5wdXNoKHZlY3Rvcik7XG4gICAgfVxuICAgIGhhc05vcm1hbHMoKSB7XG4gICAgICAgIGZvciAoY29uc3QgbmFtZSBpbiB0aGlzLmF0dHJpYnV0ZXMpIHtcbiAgICAgICAgICAgIGNvbnN0IHBvaW50QXR0cmlidXRlID0gdGhpcy5hdHRyaWJ1dGVzW25hbWVdO1xuICAgICAgICAgICAgaWYgKHBvaW50QXR0cmlidXRlID09PSBQT0lOVF9BVFRSSUJVVEVTLk5PUk1BTF9TUEhFUkVNQVBQRUQgfHxcbiAgICAgICAgICAgICAgICBwb2ludEF0dHJpYnV0ZSA9PT0gUE9JTlRfQVRUUklCVVRFUy5OT1JNQUxfRkxPQVRTIHx8XG4gICAgICAgICAgICAgICAgcG9pbnRBdHRyaWJ1dGUgPT09IFBPSU5UX0FUVFJJQlVURVMuTk9STUFMIHx8XG4gICAgICAgICAgICAgICAgcG9pbnRBdHRyaWJ1dGUgPT09IFBPSU5UX0FUVFJJQlVURVMuTk9STUFMX09DVDE2KSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBnZXRBdHRyaWJ1dGUoYXR0cmlidXRlTmFtZSkge1xuICAgICAgICByZXR1cm4gdGhpcy5hdHRyaWJ1dGVzLmZpbmQoYXR0ciA9PiBhdHRyLm5hbWUgPT09IGF0dHJpYnV0ZU5hbWUpO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/loading2/point-attributes.ts\n");

/***/ }),

/***/ "./src/loading2/utils.ts":
/*!*******************************!*\
  !*** ./src/loading2/utils.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   buildUrl: () => (/* binding */ buildUrl),\n/* harmony export */   extractBasePath: () => (/* binding */ extractBasePath)\n/* harmony export */ });\nfunction extractBasePath(url) {\n    return url.substring(0, url.lastIndexOf('/') + 1);\n}\nfunction buildUrl(basePath, fileName) {\n    return `${basePath}${fileName}`;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbG9hZGluZzIvdXRpbHMudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3RyZWUvLi9zcmMvbG9hZGluZzIvdXRpbHMudHM/YmNlMSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gZXh0cmFjdEJhc2VQYXRoKHVybCkge1xuICAgIHJldHVybiB1cmwuc3Vic3RyaW5nKDAsIHVybC5sYXN0SW5kZXhPZignLycpICsgMSk7XG59XG5leHBvcnQgZnVuY3Rpb24gYnVpbGRVcmwoYmFzZVBhdGgsIGZpbGVOYW1lKSB7XG4gICAgcmV0dXJuIGAke2Jhc2VQYXRofSR7ZmlsZU5hbWV9YDtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/loading2/utils.ts\n");

/***/ }),

/***/ "./src/loading2/worker-pool.ts":
/*!*************************************!*\
  !*** ./src/loading2/worker-pool.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WorkerPool: () => (/* binding */ WorkerPool),\n/* harmony export */   WorkerType: () => (/* binding */ WorkerType)\n/* harmony export */ });\n// Create enums for different types of workers\nvar WorkerType;\n(function (WorkerType) {\n    WorkerType[\"DECODER_WORKER\"] = \"DECODER_WORKER\";\n    WorkerType[\"DECODER_WORKER_GLTF\"] = \"DECODER_WORKER_GLTF\";\n})(WorkerType || (WorkerType = {}));\n// Worker JS names: 'BinaryDecoderWorker.js', 'DEMWorker.js', 'EptBinaryDecoderWorker.js', 'EptLaszipDecoderWorker.js',\n// EptZstandardDecoder_preamble.js', 'EptZstandardDecoderWorker.js', 'LASDecoderWorker.js', 'LASLAZWorker.js', 'LazLoaderWorker.js'\nfunction createWorker(type) {\n    // console.log(type)\n    switch (type) {\n        case WorkerType.DECODER_WORKER: {\n            const DecoderWorker = (__webpack_require__(/*! ./decoder.worker.js */ \"./src/loading2/decoder.worker.js\")[\"default\"]);\n            return new DecoderWorker();\n        }\n        case WorkerType.DECODER_WORKER_GLTF: {\n            const DecoderWorker_GLTF = (__webpack_require__(/*! ./gltf-decoder.worker.js */ \"./src/loading2/gltf-decoder.worker.js\")[\"default\"]);\n            return new DecoderWorker_GLTF();\n        }\n        default:\n            throw new Error('Unknown worker type');\n    }\n}\nclass WorkerPool {\n    constructor() {\n        // Workers will be an object that has a key for each worker type and the value is an array of Workers that can be empty\n        this.workers = { DECODER_WORKER: [], DECODER_WORKER_GLTF: [] };\n    }\n    getWorker(workerType) {\n        // Throw error if workerType is not recognized\n        if (this.workers[workerType] === undefined) {\n            throw new Error('Unknown worker type');\n        }\n        // Given a worker URL, if URL does not exist in the worker object, create a new array with the URL as a key\n        if (this.workers[workerType].length === 0) {\n            const worker = createWorker(workerType);\n            this.workers[workerType].push(worker);\n        }\n        const worker = this.workers[workerType].pop();\n        if (worker === undefined) { // Typescript needs this\n            throw new Error('No workers available');\n        }\n        // Return the last worker in the array and remove it from the array\n        return worker;\n    }\n    returnWorker(workerType, worker) {\n        this.workers[workerType].push(worker);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbG9hZGluZzIvd29ya2VyLXBvb2wudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3BvdHJlZS8uL3NyYy9sb2FkaW5nMi93b3JrZXItcG9vbC50cz8wZmFmIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIENyZWF0ZSBlbnVtcyBmb3IgZGlmZmVyZW50IHR5cGVzIG9mIHdvcmtlcnNcbmV4cG9ydCB2YXIgV29ya2VyVHlwZTtcbihmdW5jdGlvbiAoV29ya2VyVHlwZSkge1xuICAgIFdvcmtlclR5cGVbXCJERUNPREVSX1dPUktFUlwiXSA9IFwiREVDT0RFUl9XT1JLRVJcIjtcbiAgICBXb3JrZXJUeXBlW1wiREVDT0RFUl9XT1JLRVJfR0xURlwiXSA9IFwiREVDT0RFUl9XT1JLRVJfR0xURlwiO1xufSkoV29ya2VyVHlwZSB8fCAoV29ya2VyVHlwZSA9IHt9KSk7XG4vLyBXb3JrZXIgSlMgbmFtZXM6ICdCaW5hcnlEZWNvZGVyV29ya2VyLmpzJywgJ0RFTVdvcmtlci5qcycsICdFcHRCaW5hcnlEZWNvZGVyV29ya2VyLmpzJywgJ0VwdExhc3ppcERlY29kZXJXb3JrZXIuanMnLFxuLy8gRXB0WnN0YW5kYXJkRGVjb2Rlcl9wcmVhbWJsZS5qcycsICdFcHRac3RhbmRhcmREZWNvZGVyV29ya2VyLmpzJywgJ0xBU0RlY29kZXJXb3JrZXIuanMnLCAnTEFTTEFaV29ya2VyLmpzJywgJ0xhekxvYWRlcldvcmtlci5qcydcbmZ1bmN0aW9uIGNyZWF0ZVdvcmtlcih0eXBlKSB7XG4gICAgLy8gY29uc29sZS5sb2codHlwZSlcbiAgICBzd2l0Y2ggKHR5cGUpIHtcbiAgICAgICAgY2FzZSBXb3JrZXJUeXBlLkRFQ09ERVJfV09SS0VSOiB7XG4gICAgICAgICAgICBjb25zdCBEZWNvZGVyV29ya2VyID0gcmVxdWlyZSgnLi9kZWNvZGVyLndvcmtlci5qcycpLmRlZmF1bHQ7XG4gICAgICAgICAgICByZXR1cm4gbmV3IERlY29kZXJXb3JrZXIoKTtcbiAgICAgICAgfVxuICAgICAgICBjYXNlIFdvcmtlclR5cGUuREVDT0RFUl9XT1JLRVJfR0xURjoge1xuICAgICAgICAgICAgY29uc3QgRGVjb2Rlcldvcmtlcl9HTFRGID0gcmVxdWlyZSgnLi9nbHRmLWRlY29kZXIud29ya2VyLmpzJykuZGVmYXVsdDtcbiAgICAgICAgICAgIHJldHVybiBuZXcgRGVjb2Rlcldvcmtlcl9HTFRGKCk7XG4gICAgICAgIH1cbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignVW5rbm93biB3b3JrZXIgdHlwZScpO1xuICAgIH1cbn1cbmV4cG9ydCBjbGFzcyBXb3JrZXJQb29sIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgLy8gV29ya2VycyB3aWxsIGJlIGFuIG9iamVjdCB0aGF0IGhhcyBhIGtleSBmb3IgZWFjaCB3b3JrZXIgdHlwZSBhbmQgdGhlIHZhbHVlIGlzIGFuIGFycmF5IG9mIFdvcmtlcnMgdGhhdCBjYW4gYmUgZW1wdHlcbiAgICAgICAgdGhpcy53b3JrZXJzID0geyBERUNPREVSX1dPUktFUjogW10sIERFQ09ERVJfV09SS0VSX0dMVEY6IFtdIH07XG4gICAgfVxuICAgIGdldFdvcmtlcih3b3JrZXJUeXBlKSB7XG4gICAgICAgIC8vIFRocm93IGVycm9yIGlmIHdvcmtlclR5cGUgaXMgbm90IHJlY29nbml6ZWRcbiAgICAgICAgaWYgKHRoaXMud29ya2Vyc1t3b3JrZXJUeXBlXSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1Vua25vd24gd29ya2VyIHR5cGUnKTtcbiAgICAgICAgfVxuICAgICAgICAvLyBHaXZlbiBhIHdvcmtlciBVUkwsIGlmIFVSTCBkb2VzIG5vdCBleGlzdCBpbiB0aGUgd29ya2VyIG9iamVjdCwgY3JlYXRlIGEgbmV3IGFycmF5IHdpdGggdGhlIFVSTCBhcyBhIGtleVxuICAgICAgICBpZiAodGhpcy53b3JrZXJzW3dvcmtlclR5cGVdLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgICAgY29uc3Qgd29ya2VyID0gY3JlYXRlV29ya2VyKHdvcmtlclR5cGUpO1xuICAgICAgICAgICAgdGhpcy53b3JrZXJzW3dvcmtlclR5cGVdLnB1c2god29ya2VyKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCB3b3JrZXIgPSB0aGlzLndvcmtlcnNbd29ya2VyVHlwZV0ucG9wKCk7XG4gICAgICAgIGlmICh3b3JrZXIgPT09IHVuZGVmaW5lZCkgeyAvLyBUeXBlc2NyaXB0IG5lZWRzIHRoaXNcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignTm8gd29ya2VycyBhdmFpbGFibGUnKTtcbiAgICAgICAgfVxuICAgICAgICAvLyBSZXR1cm4gdGhlIGxhc3Qgd29ya2VyIGluIHRoZSBhcnJheSBhbmQgcmVtb3ZlIGl0IGZyb20gdGhlIGFycmF5XG4gICAgICAgIHJldHVybiB3b3JrZXI7XG4gICAgfVxuICAgIHJldHVybldvcmtlcih3b3JrZXJUeXBlLCB3b3JrZXIpIHtcbiAgICAgICAgdGhpcy53b3JrZXJzW3dvcmtlclR5cGVdLnB1c2god29ya2VyKTtcbiAgICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/loading2/worker-pool.ts\n");

/***/ }),

/***/ "./src/materials/blur-material.ts":
/*!****************************************!*\
  !*** ./src/materials/blur-material.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BlurMaterial: () => (/* binding */ BlurMaterial)\n/* harmony export */ });\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ \"three\");\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(three__WEBPACK_IMPORTED_MODULE_0__);\n\nclass BlurMaterial extends three__WEBPACK_IMPORTED_MODULE_0__.ShaderMaterial {\n    constructor() {\n        super(...arguments);\n        this.vertexShader = __webpack_require__(/*! ./shaders/blur.vert */ \"./src/materials/shaders/blur.vert\");\n        this.fragmentShader = __webpack_require__(/*! ./shaders/blur.frag */ \"./src/materials/shaders/blur.frag\");\n        this.uniforms = {\n            screenWidth: { type: 'f', value: 0 },\n            screenHeight: { type: 'f', value: 0 },\n            map: { type: 't', value: null },\n        };\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbWF0ZXJpYWxzL2JsdXItbWF0ZXJpYWwudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3RyZWUvLi9zcmMvbWF0ZXJpYWxzL2JsdXItbWF0ZXJpYWwudHM/NTczOSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTaGFkZXJNYXRlcmlhbCB9IGZyb20gJ3RocmVlJztcbmV4cG9ydCBjbGFzcyBCbHVyTWF0ZXJpYWwgZXh0ZW5kcyBTaGFkZXJNYXRlcmlhbCB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKC4uLmFyZ3VtZW50cyk7XG4gICAgICAgIHRoaXMudmVydGV4U2hhZGVyID0gcmVxdWlyZSgnLi9zaGFkZXJzL2JsdXIudmVydCcpO1xuICAgICAgICB0aGlzLmZyYWdtZW50U2hhZGVyID0gcmVxdWlyZSgnLi9zaGFkZXJzL2JsdXIuZnJhZycpO1xuICAgICAgICB0aGlzLnVuaWZvcm1zID0ge1xuICAgICAgICAgICAgc2NyZWVuV2lkdGg6IHsgdHlwZTogJ2YnLCB2YWx1ZTogMCB9LFxuICAgICAgICAgICAgc2NyZWVuSGVpZ2h0OiB7IHR5cGU6ICdmJywgdmFsdWU6IDAgfSxcbiAgICAgICAgICAgIG1hcDogeyB0eXBlOiAndCcsIHZhbHVlOiBudWxsIH0sXG4gICAgICAgIH07XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/materials/blur-material.ts\n");

/***/ }),

/***/ "./src/materials/classification.ts":
/*!*****************************************!*\
  !*** ./src/materials/classification.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_CLASSIFICATION: () => (/* binding */ DEFAULT_CLASSIFICATION)\n/* harmony export */ });\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ \"three\");\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(three__WEBPACK_IMPORTED_MODULE_0__);\n\nconst DEFAULT_CLASSIFICATION = {\n    0: new three__WEBPACK_IMPORTED_MODULE_0__.Vector4(0.5, 0.5, 0.5, 1.0),\n    1: new three__WEBPACK_IMPORTED_MODULE_0__.Vector4(0.5, 0.5, 0.5, 1.0),\n    2: new three__WEBPACK_IMPORTED_MODULE_0__.Vector4(0.63, 0.32, 0.18, 1.0),\n    3: new three__WEBPACK_IMPORTED_MODULE_0__.Vector4(0.0, 1.0, 0.0, 1.0),\n    4: new three__WEBPACK_IMPORTED_MODULE_0__.Vector4(0.0, 0.8, 0.0, 1.0),\n    5: new three__WEBPACK_IMPORTED_MODULE_0__.Vector4(0.0, 0.6, 0.0, 1.0),\n    6: new three__WEBPACK_IMPORTED_MODULE_0__.Vector4(1.0, 0.66, 0.0, 1.0),\n    7: new three__WEBPACK_IMPORTED_MODULE_0__.Vector4(1.0, 0, 1.0, 1.0),\n    8: new three__WEBPACK_IMPORTED_MODULE_0__.Vector4(1.0, 0, 0.0, 1.0),\n    9: new three__WEBPACK_IMPORTED_MODULE_0__.Vector4(0.0, 0.0, 1.0, 1.0),\n    12: new three__WEBPACK_IMPORTED_MODULE_0__.Vector4(1.0, 1.0, 0.0, 1.0),\n    DEFAULT: new three__WEBPACK_IMPORTED_MODULE_0__.Vector4(0.3, 0.6, 0.6, 0.5),\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbWF0ZXJpYWxzL2NsYXNzaWZpY2F0aW9uLnRzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3BvdHJlZS8uL3NyYy9tYXRlcmlhbHMvY2xhc3NpZmljYXRpb24udHM/ZmEzYyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBWZWN0b3I0IH0gZnJvbSAndGhyZWUnO1xuZXhwb3J0IGNvbnN0IERFRkFVTFRfQ0xBU1NJRklDQVRJT04gPSB7XG4gICAgMDogbmV3IFZlY3RvcjQoMC41LCAwLjUsIDAuNSwgMS4wKSxcbiAgICAxOiBuZXcgVmVjdG9yNCgwLjUsIDAuNSwgMC41LCAxLjApLFxuICAgIDI6IG5ldyBWZWN0b3I0KDAuNjMsIDAuMzIsIDAuMTgsIDEuMCksXG4gICAgMzogbmV3IFZlY3RvcjQoMC4wLCAxLjAsIDAuMCwgMS4wKSxcbiAgICA0OiBuZXcgVmVjdG9yNCgwLjAsIDAuOCwgMC4wLCAxLjApLFxuICAgIDU6IG5ldyBWZWN0b3I0KDAuMCwgMC42LCAwLjAsIDEuMCksXG4gICAgNjogbmV3IFZlY3RvcjQoMS4wLCAwLjY2LCAwLjAsIDEuMCksXG4gICAgNzogbmV3IFZlY3RvcjQoMS4wLCAwLCAxLjAsIDEuMCksXG4gICAgODogbmV3IFZlY3RvcjQoMS4wLCAwLCAwLjAsIDEuMCksXG4gICAgOTogbmV3IFZlY3RvcjQoMC4wLCAwLjAsIDEuMCwgMS4wKSxcbiAgICAxMjogbmV3IFZlY3RvcjQoMS4wLCAxLjAsIDAuMCwgMS4wKSxcbiAgICBERUZBVUxUOiBuZXcgVmVjdG9yNCgwLjMsIDAuNiwgMC42LCAwLjUpLFxufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/materials/classification.ts\n");

/***/ }),

/***/ "./src/materials/clipping.ts":
/*!***********************************!*\
  !*** ./src/materials/clipping.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ClipMode: () => (/* binding */ ClipMode)\n/* harmony export */ });\nvar ClipMode;\n(function (ClipMode) {\n    ClipMode[ClipMode[\"DISABLED\"] = 0] = \"DISABLED\";\n    ClipMode[ClipMode[\"CLIP_OUTSIDE\"] = 1] = \"CLIP_OUTSIDE\";\n    ClipMode[ClipMode[\"HIGHLIGHT_INSIDE\"] = 2] = \"HIGHLIGHT_INSIDE\";\n    ClipMode[ClipMode[\"CLIP_HORIZONTALLY\"] = 3] = \"CLIP_HORIZONTALLY\";\n    ClipMode[ClipMode[\"CLIP_VERTICALLY\"] = 4] = \"CLIP_VERTICALLY\";\n})(ClipMode || (ClipMode = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbWF0ZXJpYWxzL2NsaXBwaW5nLnRzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG90cmVlLy4vc3JjL21hdGVyaWFscy9jbGlwcGluZy50cz8xZjk2Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB2YXIgQ2xpcE1vZGU7XG4oZnVuY3Rpb24gKENsaXBNb2RlKSB7XG4gICAgQ2xpcE1vZGVbQ2xpcE1vZGVbXCJESVNBQkxFRFwiXSA9IDBdID0gXCJESVNBQkxFRFwiO1xuICAgIENsaXBNb2RlW0NsaXBNb2RlW1wiQ0xJUF9PVVRTSURFXCJdID0gMV0gPSBcIkNMSVBfT1VUU0lERVwiO1xuICAgIENsaXBNb2RlW0NsaXBNb2RlW1wiSElHSExJR0hUX0lOU0lERVwiXSA9IDJdID0gXCJISUdITElHSFRfSU5TSURFXCI7XG4gICAgQ2xpcE1vZGVbQ2xpcE1vZGVbXCJDTElQX0hPUklaT05UQUxMWVwiXSA9IDNdID0gXCJDTElQX0hPUklaT05UQUxMWVwiO1xuICAgIENsaXBNb2RlW0NsaXBNb2RlW1wiQ0xJUF9WRVJUSUNBTExZXCJdID0gNF0gPSBcIkNMSVBfVkVSVElDQUxMWVwiO1xufSkoQ2xpcE1vZGUgfHwgKENsaXBNb2RlID0ge30pKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/materials/clipping.ts\n");

/***/ }),

/***/ "./src/materials/enums.ts":
/*!********************************!*\
  !*** ./src/materials/enums.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NormalFilteringMode: () => (/* binding */ NormalFilteringMode),\n/* harmony export */   PointCloudMixingMode: () => (/* binding */ PointCloudMixingMode),\n/* harmony export */   PointColorType: () => (/* binding */ PointColorType),\n/* harmony export */   PointOpacityType: () => (/* binding */ PointOpacityType),\n/* harmony export */   PointShape: () => (/* binding */ PointShape),\n/* harmony export */   PointSizeType: () => (/* binding */ PointSizeType),\n/* harmony export */   TreeType: () => (/* binding */ TreeType)\n/* harmony export */ });\nvar PointSizeType;\n(function (PointSizeType) {\n    PointSizeType[PointSizeType[\"FIXED\"] = 0] = \"FIXED\";\n    PointSizeType[PointSizeType[\"ATTENUATED\"] = 1] = \"ATTENUATED\";\n    PointSizeType[PointSizeType[\"ADAPTIVE\"] = 2] = \"ADAPTIVE\";\n})(PointSizeType || (PointSizeType = {}));\nvar PointShape;\n(function (PointShape) {\n    PointShape[PointShape[\"SQUARE\"] = 0] = \"SQUARE\";\n    PointShape[PointShape[\"CIRCLE\"] = 1] = \"CIRCLE\";\n    PointShape[PointShape[\"PARABOLOID\"] = 2] = \"PARABOLOID\";\n})(PointShape || (PointShape = {}));\nvar TreeType;\n(function (TreeType) {\n    TreeType[TreeType[\"OCTREE\"] = 0] = \"OCTREE\";\n    TreeType[TreeType[\"KDTREE\"] = 1] = \"KDTREE\";\n})(TreeType || (TreeType = {}));\nvar PointOpacityType;\n(function (PointOpacityType) {\n    PointOpacityType[PointOpacityType[\"FIXED\"] = 0] = \"FIXED\";\n    PointOpacityType[PointOpacityType[\"ATTENUATED\"] = 1] = \"ATTENUATED\";\n})(PointOpacityType || (PointOpacityType = {}));\nvar PointColorType;\n(function (PointColorType) {\n    PointColorType[PointColorType[\"RGB\"] = 0] = \"RGB\";\n    PointColorType[PointColorType[\"COLOR\"] = 1] = \"COLOR\";\n    PointColorType[PointColorType[\"DEPTH\"] = 2] = \"DEPTH\";\n    PointColorType[PointColorType[\"HEIGHT\"] = 3] = \"HEIGHT\";\n    PointColorType[PointColorType[\"ELEVATION\"] = 3] = \"ELEVATION\";\n    PointColorType[PointColorType[\"INTENSITY\"] = 4] = \"INTENSITY\";\n    PointColorType[PointColorType[\"INTENSITY_GRADIENT\"] = 5] = \"INTENSITY_GRADIENT\";\n    PointColorType[PointColorType[\"LOD\"] = 6] = \"LOD\";\n    PointColorType[PointColorType[\"LEVEL_OF_DETAIL\"] = 6] = \"LEVEL_OF_DETAIL\";\n    PointColorType[PointColorType[\"POINT_INDEX\"] = 7] = \"POINT_INDEX\";\n    PointColorType[PointColorType[\"CLASSIFICATION\"] = 8] = \"CLASSIFICATION\";\n    PointColorType[PointColorType[\"RETURN_NUMBER\"] = 9] = \"RETURN_NUMBER\";\n    PointColorType[PointColorType[\"SOURCE\"] = 10] = \"SOURCE\";\n    PointColorType[PointColorType[\"NORMAL\"] = 11] = \"NORMAL\";\n    PointColorType[PointColorType[\"PHONG\"] = 12] = \"PHONG\";\n    PointColorType[PointColorType[\"RGB_HEIGHT\"] = 13] = \"RGB_HEIGHT\";\n    PointColorType[PointColorType[\"COMPOSITE\"] = 50] = \"COMPOSITE\";\n})(PointColorType || (PointColorType = {}));\nvar NormalFilteringMode;\n(function (NormalFilteringMode) {\n    NormalFilteringMode[NormalFilteringMode[\"ABSOLUTE_NORMAL_FILTERING_MODE\"] = 1] = \"ABSOLUTE_NORMAL_FILTERING_MODE\";\n    NormalFilteringMode[NormalFilteringMode[\"LESS_EQUAL_NORMAL_FILTERING_MODE\"] = 2] = \"LESS_EQUAL_NORMAL_FILTERING_MODE\";\n    NormalFilteringMode[NormalFilteringMode[\"GREATER_NORMAL_FILTERING_MODE\"] = 3] = \"GREATER_NORMAL_FILTERING_MODE\";\n})(NormalFilteringMode || (NormalFilteringMode = {}));\nvar PointCloudMixingMode;\n(function (PointCloudMixingMode) {\n    PointCloudMixingMode[PointCloudMixingMode[\"CHECKBOARD\"] = 1] = \"CHECKBOARD\";\n    PointCloudMixingMode[PointCloudMixingMode[\"STRIPES\"] = 2] = \"STRIPES\";\n})(PointCloudMixingMode || (PointCloudMixingMode = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbWF0ZXJpYWxzL2VudW1zLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG90cmVlLy4vc3JjL21hdGVyaWFscy9lbnVtcy50cz85NjQyIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB2YXIgUG9pbnRTaXplVHlwZTtcbihmdW5jdGlvbiAoUG9pbnRTaXplVHlwZSkge1xuICAgIFBvaW50U2l6ZVR5cGVbUG9pbnRTaXplVHlwZVtcIkZJWEVEXCJdID0gMF0gPSBcIkZJWEVEXCI7XG4gICAgUG9pbnRTaXplVHlwZVtQb2ludFNpemVUeXBlW1wiQVRURU5VQVRFRFwiXSA9IDFdID0gXCJBVFRFTlVBVEVEXCI7XG4gICAgUG9pbnRTaXplVHlwZVtQb2ludFNpemVUeXBlW1wiQURBUFRJVkVcIl0gPSAyXSA9IFwiQURBUFRJVkVcIjtcbn0pKFBvaW50U2l6ZVR5cGUgfHwgKFBvaW50U2l6ZVR5cGUgPSB7fSkpO1xuZXhwb3J0IHZhciBQb2ludFNoYXBlO1xuKGZ1bmN0aW9uIChQb2ludFNoYXBlKSB7XG4gICAgUG9pbnRTaGFwZVtQb2ludFNoYXBlW1wiU1FVQVJFXCJdID0gMF0gPSBcIlNRVUFSRVwiO1xuICAgIFBvaW50U2hhcGVbUG9pbnRTaGFwZVtcIkNJUkNMRVwiXSA9IDFdID0gXCJDSVJDTEVcIjtcbiAgICBQb2ludFNoYXBlW1BvaW50U2hhcGVbXCJQQVJBQk9MT0lEXCJdID0gMl0gPSBcIlBBUkFCT0xPSURcIjtcbn0pKFBvaW50U2hhcGUgfHwgKFBvaW50U2hhcGUgPSB7fSkpO1xuZXhwb3J0IHZhciBUcmVlVHlwZTtcbihmdW5jdGlvbiAoVHJlZVR5cGUpIHtcbiAgICBUcmVlVHlwZVtUcmVlVHlwZVtcIk9DVFJFRVwiXSA9IDBdID0gXCJPQ1RSRUVcIjtcbiAgICBUcmVlVHlwZVtUcmVlVHlwZVtcIktEVFJFRVwiXSA9IDFdID0gXCJLRFRSRUVcIjtcbn0pKFRyZWVUeXBlIHx8IChUcmVlVHlwZSA9IHt9KSk7XG5leHBvcnQgdmFyIFBvaW50T3BhY2l0eVR5cGU7XG4oZnVuY3Rpb24gKFBvaW50T3BhY2l0eVR5cGUpIHtcbiAgICBQb2ludE9wYWNpdHlUeXBlW1BvaW50T3BhY2l0eVR5cGVbXCJGSVhFRFwiXSA9IDBdID0gXCJGSVhFRFwiO1xuICAgIFBvaW50T3BhY2l0eVR5cGVbUG9pbnRPcGFjaXR5VHlwZVtcIkFUVEVOVUFURURcIl0gPSAxXSA9IFwiQVRURU5VQVRFRFwiO1xufSkoUG9pbnRPcGFjaXR5VHlwZSB8fCAoUG9pbnRPcGFjaXR5VHlwZSA9IHt9KSk7XG5leHBvcnQgdmFyIFBvaW50Q29sb3JUeXBlO1xuKGZ1bmN0aW9uIChQb2ludENvbG9yVHlwZSkge1xuICAgIFBvaW50Q29sb3JUeXBlW1BvaW50Q29sb3JUeXBlW1wiUkdCXCJdID0gMF0gPSBcIlJHQlwiO1xuICAgIFBvaW50Q29sb3JUeXBlW1BvaW50Q29sb3JUeXBlW1wiQ09MT1JcIl0gPSAxXSA9IFwiQ09MT1JcIjtcbiAgICBQb2ludENvbG9yVHlwZVtQb2ludENvbG9yVHlwZVtcIkRFUFRIXCJdID0gMl0gPSBcIkRFUFRIXCI7XG4gICAgUG9pbnRDb2xvclR5cGVbUG9pbnRDb2xvclR5cGVbXCJIRUlHSFRcIl0gPSAzXSA9IFwiSEVJR0hUXCI7XG4gICAgUG9pbnRDb2xvclR5cGVbUG9pbnRDb2xvclR5cGVbXCJFTEVWQVRJT05cIl0gPSAzXSA9IFwiRUxFVkFUSU9OXCI7XG4gICAgUG9pbnRDb2xvclR5cGVbUG9pbnRDb2xvclR5cGVbXCJJTlRFTlNJVFlcIl0gPSA0XSA9IFwiSU5URU5TSVRZXCI7XG4gICAgUG9pbnRDb2xvclR5cGVbUG9pbnRDb2xvclR5cGVbXCJJTlRFTlNJVFlfR1JBRElFTlRcIl0gPSA1XSA9IFwiSU5URU5TSVRZX0dSQURJRU5UXCI7XG4gICAgUG9pbnRDb2xvclR5cGVbUG9pbnRDb2xvclR5cGVbXCJMT0RcIl0gPSA2XSA9IFwiTE9EXCI7XG4gICAgUG9pbnRDb2xvclR5cGVbUG9pbnRDb2xvclR5cGVbXCJMRVZFTF9PRl9ERVRBSUxcIl0gPSA2XSA9IFwiTEVWRUxfT0ZfREVUQUlMXCI7XG4gICAgUG9pbnRDb2xvclR5cGVbUG9pbnRDb2xvclR5cGVbXCJQT0lOVF9JTkRFWFwiXSA9IDddID0gXCJQT0lOVF9JTkRFWFwiO1xuICAgIFBvaW50Q29sb3JUeXBlW1BvaW50Q29sb3JUeXBlW1wiQ0xBU1NJRklDQVRJT05cIl0gPSA4XSA9IFwiQ0xBU1NJRklDQVRJT05cIjtcbiAgICBQb2ludENvbG9yVHlwZVtQb2ludENvbG9yVHlwZVtcIlJFVFVSTl9OVU1CRVJcIl0gPSA5XSA9IFwiUkVUVVJOX05VTUJFUlwiO1xuICAgIFBvaW50Q29sb3JUeXBlW1BvaW50Q29sb3JUeXBlW1wiU09VUkNFXCJdID0gMTBdID0gXCJTT1VSQ0VcIjtcbiAgICBQb2ludENvbG9yVHlwZVtQb2ludENvbG9yVHlwZVtcIk5PUk1BTFwiXSA9IDExXSA9IFwiTk9STUFMXCI7XG4gICAgUG9pbnRDb2xvclR5cGVbUG9pbnRDb2xvclR5cGVbXCJQSE9OR1wiXSA9IDEyXSA9IFwiUEhPTkdcIjtcbiAgICBQb2ludENvbG9yVHlwZVtQb2ludENvbG9yVHlwZVtcIlJHQl9IRUlHSFRcIl0gPSAxM10gPSBcIlJHQl9IRUlHSFRcIjtcbiAgICBQb2ludENvbG9yVHlwZVtQb2ludENvbG9yVHlwZVtcIkNPTVBPU0lURVwiXSA9IDUwXSA9IFwiQ09NUE9TSVRFXCI7XG59KShQb2ludENvbG9yVHlwZSB8fCAoUG9pbnRDb2xvclR5cGUgPSB7fSkpO1xuZXhwb3J0IHZhciBOb3JtYWxGaWx0ZXJpbmdNb2RlO1xuKGZ1bmN0aW9uIChOb3JtYWxGaWx0ZXJpbmdNb2RlKSB7XG4gICAgTm9ybWFsRmlsdGVyaW5nTW9kZVtOb3JtYWxGaWx0ZXJpbmdNb2RlW1wiQUJTT0xVVEVfTk9STUFMX0ZJTFRFUklOR19NT0RFXCJdID0gMV0gPSBcIkFCU09MVVRFX05PUk1BTF9GSUxURVJJTkdfTU9ERVwiO1xuICAgIE5vcm1hbEZpbHRlcmluZ01vZGVbTm9ybWFsRmlsdGVyaW5nTW9kZVtcIkxFU1NfRVFVQUxfTk9STUFMX0ZJTFRFUklOR19NT0RFXCJdID0gMl0gPSBcIkxFU1NfRVFVQUxfTk9STUFMX0ZJTFRFUklOR19NT0RFXCI7XG4gICAgTm9ybWFsRmlsdGVyaW5nTW9kZVtOb3JtYWxGaWx0ZXJpbmdNb2RlW1wiR1JFQVRFUl9OT1JNQUxfRklMVEVSSU5HX01PREVcIl0gPSAzXSA9IFwiR1JFQVRFUl9OT1JNQUxfRklMVEVSSU5HX01PREVcIjtcbn0pKE5vcm1hbEZpbHRlcmluZ01vZGUgfHwgKE5vcm1hbEZpbHRlcmluZ01vZGUgPSB7fSkpO1xuZXhwb3J0IHZhciBQb2ludENsb3VkTWl4aW5nTW9kZTtcbihmdW5jdGlvbiAoUG9pbnRDbG91ZE1peGluZ01vZGUpIHtcbiAgICBQb2ludENsb3VkTWl4aW5nTW9kZVtQb2ludENsb3VkTWl4aW5nTW9kZVtcIkNIRUNLQk9BUkRcIl0gPSAxXSA9IFwiQ0hFQ0tCT0FSRFwiO1xuICAgIFBvaW50Q2xvdWRNaXhpbmdNb2RlW1BvaW50Q2xvdWRNaXhpbmdNb2RlW1wiU1RSSVBFU1wiXSA9IDJdID0gXCJTVFJJUEVTXCI7XG59KShQb2ludENsb3VkTWl4aW5nTW9kZSB8fCAoUG9pbnRDbG91ZE1peGluZ01vZGUgPSB7fSkpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/materials/enums.ts\n");

/***/ }),

/***/ "./src/materials/gradients/grayscale.ts":
/*!**********************************************!*\
  !*** ./src/materials/gradients/grayscale.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GRAYSCALE: () => (/* binding */ GRAYSCALE)\n/* harmony export */ });\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ \"three\");\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(three__WEBPACK_IMPORTED_MODULE_0__);\n\nconst GRAYSCALE = [\n    [0, new three__WEBPACK_IMPORTED_MODULE_0__.Color(0, 0, 0)],\n    [1, new three__WEBPACK_IMPORTED_MODULE_0__.Color(1, 1, 1)],\n];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbWF0ZXJpYWxzL2dyYWRpZW50cy9ncmF5c2NhbGUudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3BvdHJlZS8uL3NyYy9tYXRlcmlhbHMvZ3JhZGllbnRzL2dyYXlzY2FsZS50cz85MmQ4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbG9yIH0gZnJvbSAndGhyZWUnO1xuZXhwb3J0IGNvbnN0IEdSQVlTQ0FMRSA9IFtcbiAgICBbMCwgbmV3IENvbG9yKDAsIDAsIDApXSxcbiAgICBbMSwgbmV3IENvbG9yKDEsIDEsIDEpXSxcbl07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/materials/gradients/grayscale.ts\n");

/***/ }),

/***/ "./src/materials/gradients/index.ts":
/*!******************************************!*\
  !*** ./src/materials/gradients/index.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GRAYSCALE: () => (/* reexport safe */ _grayscale__WEBPACK_IMPORTED_MODULE_0__.GRAYSCALE),\n/* harmony export */   INFERNO: () => (/* reexport safe */ _inferno__WEBPACK_IMPORTED_MODULE_1__.INFERNO),\n/* harmony export */   PLASMA: () => (/* reexport safe */ _plasma__WEBPACK_IMPORTED_MODULE_2__.PLASMA),\n/* harmony export */   RAINBOW: () => (/* reexport safe */ _rainbow__WEBPACK_IMPORTED_MODULE_3__.RAINBOW),\n/* harmony export */   SPECTRAL: () => (/* reexport safe */ _spectral__WEBPACK_IMPORTED_MODULE_4__.SPECTRAL),\n/* harmony export */   VIRIDIS: () => (/* reexport safe */ _vidris__WEBPACK_IMPORTED_MODULE_5__.VIRIDIS),\n/* harmony export */   YELLOW_GREEN: () => (/* reexport safe */ _yellow_green__WEBPACK_IMPORTED_MODULE_6__.YELLOW_GREEN)\n/* harmony export */ });\n/* harmony import */ var _grayscale__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./grayscale */ \"./src/materials/gradients/grayscale.ts\");\n/* harmony import */ var _inferno__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./inferno */ \"./src/materials/gradients/inferno.ts\");\n/* harmony import */ var _plasma__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./plasma */ \"./src/materials/gradients/plasma.ts\");\n/* harmony import */ var _rainbow__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./rainbow */ \"./src/materials/gradients/rainbow.ts\");\n/* harmony import */ var _spectral__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./spectral */ \"./src/materials/gradients/spectral.ts\");\n/* harmony import */ var _vidris__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./vidris */ \"./src/materials/gradients/vidris.ts\");\n/* harmony import */ var _yellow_green__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./yellow-green */ \"./src/materials/gradients/yellow-green.ts\");\n\n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbWF0ZXJpYWxzL2dyYWRpZW50cy9pbmRleC50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG90cmVlLy4vc3JjL21hdGVyaWFscy9ncmFkaWVudHMvaW5kZXgudHM/MmM4ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tICcuL2dyYXlzY2FsZSc7XG5leHBvcnQgKiBmcm9tICcuL2luZmVybm8nO1xuZXhwb3J0ICogZnJvbSAnLi9wbGFzbWEnO1xuZXhwb3J0ICogZnJvbSAnLi9yYWluYm93JztcbmV4cG9ydCAqIGZyb20gJy4vc3BlY3RyYWwnO1xuZXhwb3J0ICogZnJvbSAnLi92aWRyaXMnO1xuZXhwb3J0ICogZnJvbSAnLi95ZWxsb3ctZ3JlZW4nO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/materials/gradients/index.ts\n");

/***/ }),

/***/ "./src/materials/gradients/inferno.ts":
/*!********************************************!*\
  !*** ./src/materials/gradients/inferno.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   INFERNO: () => (/* binding */ INFERNO)\n/* harmony export */ });\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ \"three\");\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(three__WEBPACK_IMPORTED_MODULE_0__);\n\nconst INFERNO = [\n    [0.0, new three__WEBPACK_IMPORTED_MODULE_0__.Color(0.077, 0.042, 0.206)],\n    [0.1, new three__WEBPACK_IMPORTED_MODULE_0__.Color(0.225, 0.036, 0.388)],\n    [0.2, new three__WEBPACK_IMPORTED_MODULE_0__.Color(0.373, 0.074, 0.432)],\n    [0.3, new three__WEBPACK_IMPORTED_MODULE_0__.Color(0.522, 0.128, 0.42)],\n    [0.4, new three__WEBPACK_IMPORTED_MODULE_0__.Color(0.665, 0.182, 0.37)],\n    [0.5, new three__WEBPACK_IMPORTED_MODULE_0__.Color(0.797, 0.255, 0.287)],\n    [0.6, new three__WEBPACK_IMPORTED_MODULE_0__.Color(0.902, 0.364, 0.184)],\n    [0.7, new three__WEBPACK_IMPORTED_MODULE_0__.Color(0.969, 0.516, 0.063)],\n    [0.8, new three__WEBPACK_IMPORTED_MODULE_0__.Color(0.988, 0.683, 0.072)],\n    [0.9, new three__WEBPACK_IMPORTED_MODULE_0__.Color(0.961, 0.859, 0.298)],\n    [1.0, new three__WEBPACK_IMPORTED_MODULE_0__.Color(0.988, 0.998, 0.645)],\n];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbWF0ZXJpYWxzL2dyYWRpZW50cy9pbmZlcm5vLnRzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3RyZWUvLi9zcmMvbWF0ZXJpYWxzL2dyYWRpZW50cy9pbmZlcm5vLnRzPzkwMzMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29sb3IgfSBmcm9tICd0aHJlZSc7XG5leHBvcnQgY29uc3QgSU5GRVJOTyA9IFtcbiAgICBbMC4wLCBuZXcgQ29sb3IoMC4wNzcsIDAuMDQyLCAwLjIwNildLFxuICAgIFswLjEsIG5ldyBDb2xvcigwLjIyNSwgMC4wMzYsIDAuMzg4KV0sXG4gICAgWzAuMiwgbmV3IENvbG9yKDAuMzczLCAwLjA3NCwgMC40MzIpXSxcbiAgICBbMC4zLCBuZXcgQ29sb3IoMC41MjIsIDAuMTI4LCAwLjQyKV0sXG4gICAgWzAuNCwgbmV3IENvbG9yKDAuNjY1LCAwLjE4MiwgMC4zNyldLFxuICAgIFswLjUsIG5ldyBDb2xvcigwLjc5NywgMC4yNTUsIDAuMjg3KV0sXG4gICAgWzAuNiwgbmV3IENvbG9yKDAuOTAyLCAwLjM2NCwgMC4xODQpXSxcbiAgICBbMC43LCBuZXcgQ29sb3IoMC45NjksIDAuNTE2LCAwLjA2MyldLFxuICAgIFswLjgsIG5ldyBDb2xvcigwLjk4OCwgMC42ODMsIDAuMDcyKV0sXG4gICAgWzAuOSwgbmV3IENvbG9yKDAuOTYxLCAwLjg1OSwgMC4yOTgpXSxcbiAgICBbMS4wLCBuZXcgQ29sb3IoMC45ODgsIDAuOTk4LCAwLjY0NSldLFxuXTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/materials/gradients/inferno.ts\n");

/***/ }),

/***/ "./src/materials/gradients/plasma.ts":
/*!*******************************************!*\
  !*** ./src/materials/gradients/plasma.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PLASMA: () => (/* binding */ PLASMA)\n/* harmony export */ });\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ \"three\");\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(three__WEBPACK_IMPORTED_MODULE_0__);\n\nconst PLASMA = [\n    [0.0, new three__WEBPACK_IMPORTED_MODULE_0__.Color(0.241, 0.015, 0.61)],\n    [0.1, new three__WEBPACK_IMPORTED_MODULE_0__.Color(0.387, 0.001, 0.654)],\n    [0.2, new three__WEBPACK_IMPORTED_MODULE_0__.Color(0.524, 0.025, 0.653)],\n    [0.3, new three__WEBPACK_IMPORTED_MODULE_0__.Color(0.651, 0.125, 0.596)],\n    [0.4, new three__WEBPACK_IMPORTED_MODULE_0__.Color(0.752, 0.227, 0.513)],\n    [0.5, new three__WEBPACK_IMPORTED_MODULE_0__.Color(0.837, 0.329, 0.431)],\n    [0.6, new three__WEBPACK_IMPORTED_MODULE_0__.Color(0.907, 0.435, 0.353)],\n    [0.7, new three__WEBPACK_IMPORTED_MODULE_0__.Color(0.963, 0.554, 0.272)],\n    [0.8, new three__WEBPACK_IMPORTED_MODULE_0__.Color(0.992, 0.681, 0.195)],\n    [0.9, new three__WEBPACK_IMPORTED_MODULE_0__.Color(0.987, 0.822, 0.144)],\n    [1.0, new three__WEBPACK_IMPORTED_MODULE_0__.Color(0.94, 0.975, 0.131)],\n];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbWF0ZXJpYWxzL2dyYWRpZW50cy9wbGFzbWEudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3BvdHJlZS8uL3NyYy9tYXRlcmlhbHMvZ3JhZGllbnRzL3BsYXNtYS50cz9jZWJmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbG9yIH0gZnJvbSAndGhyZWUnO1xuZXhwb3J0IGNvbnN0IFBMQVNNQSA9IFtcbiAgICBbMC4wLCBuZXcgQ29sb3IoMC4yNDEsIDAuMDE1LCAwLjYxKV0sXG4gICAgWzAuMSwgbmV3IENvbG9yKDAuMzg3LCAwLjAwMSwgMC42NTQpXSxcbiAgICBbMC4yLCBuZXcgQ29sb3IoMC41MjQsIDAuMDI1LCAwLjY1MyldLFxuICAgIFswLjMsIG5ldyBDb2xvcigwLjY1MSwgMC4xMjUsIDAuNTk2KV0sXG4gICAgWzAuNCwgbmV3IENvbG9yKDAuNzUyLCAwLjIyNywgMC41MTMpXSxcbiAgICBbMC41LCBuZXcgQ29sb3IoMC44MzcsIDAuMzI5LCAwLjQzMSldLFxuICAgIFswLjYsIG5ldyBDb2xvcigwLjkwNywgMC40MzUsIDAuMzUzKV0sXG4gICAgWzAuNywgbmV3IENvbG9yKDAuOTYzLCAwLjU1NCwgMC4yNzIpXSxcbiAgICBbMC44LCBuZXcgQ29sb3IoMC45OTIsIDAuNjgxLCAwLjE5NSldLFxuICAgIFswLjksIG5ldyBDb2xvcigwLjk4NywgMC44MjIsIDAuMTQ0KV0sXG4gICAgWzEuMCwgbmV3IENvbG9yKDAuOTQsIDAuOTc1LCAwLjEzMSldLFxuXTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/materials/gradients/plasma.ts\n");

/***/ }),

/***/ "./src/materials/gradients/rainbow.ts":
/*!********************************************!*\
  !*** ./src/materials/gradients/rainbow.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RAINBOW: () => (/* binding */ RAINBOW)\n/* harmony export */ });\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ \"three\");\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(three__WEBPACK_IMPORTED_MODULE_0__);\n\nconst RAINBOW = [\n    [0, new three__WEBPACK_IMPORTED_MODULE_0__.Color(0.278, 0, 0.714)],\n    [1 / 6, new three__WEBPACK_IMPORTED_MODULE_0__.Color(0, 0, 1)],\n    [2 / 6, new three__WEBPACK_IMPORTED_MODULE_0__.Color(0, 1, 1)],\n    [3 / 6, new three__WEBPACK_IMPORTED_MODULE_0__.Color(0, 1, 0)],\n    [4 / 6, new three__WEBPACK_IMPORTED_MODULE_0__.Color(1, 1, 0)],\n    [5 / 6, new three__WEBPACK_IMPORTED_MODULE_0__.Color(1, 0.64, 0)],\n    [1, new three__WEBPACK_IMPORTED_MODULE_0__.Color(1, 0, 0)],\n];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbWF0ZXJpYWxzL2dyYWRpZW50cy9yYWluYm93LnRzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG90cmVlLy4vc3JjL21hdGVyaWFscy9ncmFkaWVudHMvcmFpbmJvdy50cz9iMTJhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbG9yIH0gZnJvbSAndGhyZWUnO1xuZXhwb3J0IGNvbnN0IFJBSU5CT1cgPSBbXG4gICAgWzAsIG5ldyBDb2xvcigwLjI3OCwgMCwgMC43MTQpXSxcbiAgICBbMSAvIDYsIG5ldyBDb2xvcigwLCAwLCAxKV0sXG4gICAgWzIgLyA2LCBuZXcgQ29sb3IoMCwgMSwgMSldLFxuICAgIFszIC8gNiwgbmV3IENvbG9yKDAsIDEsIDApXSxcbiAgICBbNCAvIDYsIG5ldyBDb2xvcigxLCAxLCAwKV0sXG4gICAgWzUgLyA2LCBuZXcgQ29sb3IoMSwgMC42NCwgMCldLFxuICAgIFsxLCBuZXcgQ29sb3IoMSwgMCwgMCldLFxuXTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/materials/gradients/rainbow.ts\n");

/***/ }),

/***/ "./src/materials/gradients/spectral.ts":
/*!*********************************************!*\
  !*** ./src/materials/gradients/spectral.ts ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SPECTRAL: () => (/* binding */ SPECTRAL)\n/* harmony export */ });\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ \"three\");\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(three__WEBPACK_IMPORTED_MODULE_0__);\n\n// From chroma spectral http://gka.github.io/chroma.js/\nconst SPECTRAL = [\n    [0, new three__WEBPACK_IMPORTED_MODULE_0__.Color(0.3686, 0.3098, 0.6353)],\n    [0.1, new three__WEBPACK_IMPORTED_MODULE_0__.Color(0.1961, 0.5333, 0.7412)],\n    [0.2, new three__WEBPACK_IMPORTED_MODULE_0__.Color(0.4, 0.7608, 0.6471)],\n    [0.3, new three__WEBPACK_IMPORTED_MODULE_0__.Color(0.6706, 0.8667, 0.6431)],\n    [0.4, new three__WEBPACK_IMPORTED_MODULE_0__.Color(0.902, 0.9608, 0.5961)],\n    [0.5, new three__WEBPACK_IMPORTED_MODULE_0__.Color(1.0, 1.0, 0.749)],\n    [0.6, new three__WEBPACK_IMPORTED_MODULE_0__.Color(0.9961, 0.8784, 0.5451)],\n    [0.7, new three__WEBPACK_IMPORTED_MODULE_0__.Color(0.9922, 0.6824, 0.3804)],\n    [0.8, new three__WEBPACK_IMPORTED_MODULE_0__.Color(0.9569, 0.4275, 0.2627)],\n    [0.9, new three__WEBPACK_IMPORTED_MODULE_0__.Color(0.8353, 0.2431, 0.3098)],\n    [1, new three__WEBPACK_IMPORTED_MODULE_0__.Color(0.6196, 0.0039, 0.2588)],\n];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbWF0ZXJpYWxzL2dyYWRpZW50cy9zcGVjdHJhbC50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3RyZWUvLi9zcmMvbWF0ZXJpYWxzL2dyYWRpZW50cy9zcGVjdHJhbC50cz9iMGEyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbG9yIH0gZnJvbSAndGhyZWUnO1xuLy8gRnJvbSBjaHJvbWEgc3BlY3RyYWwgaHR0cDovL2drYS5naXRodWIuaW8vY2hyb21hLmpzL1xuZXhwb3J0IGNvbnN0IFNQRUNUUkFMID0gW1xuICAgIFswLCBuZXcgQ29sb3IoMC4zNjg2LCAwLjMwOTgsIDAuNjM1MyldLFxuICAgIFswLjEsIG5ldyBDb2xvcigwLjE5NjEsIDAuNTMzMywgMC43NDEyKV0sXG4gICAgWzAuMiwgbmV3IENvbG9yKDAuNCwgMC43NjA4LCAwLjY0NzEpXSxcbiAgICBbMC4zLCBuZXcgQ29sb3IoMC42NzA2LCAwLjg2NjcsIDAuNjQzMSldLFxuICAgIFswLjQsIG5ldyBDb2xvcigwLjkwMiwgMC45NjA4LCAwLjU5NjEpXSxcbiAgICBbMC41LCBuZXcgQ29sb3IoMS4wLCAxLjAsIDAuNzQ5KV0sXG4gICAgWzAuNiwgbmV3IENvbG9yKDAuOTk2MSwgMC44Nzg0LCAwLjU0NTEpXSxcbiAgICBbMC43LCBuZXcgQ29sb3IoMC45OTIyLCAwLjY4MjQsIDAuMzgwNCldLFxuICAgIFswLjgsIG5ldyBDb2xvcigwLjk1NjksIDAuNDI3NSwgMC4yNjI3KV0sXG4gICAgWzAuOSwgbmV3IENvbG9yKDAuODM1MywgMC4yNDMxLCAwLjMwOTgpXSxcbiAgICBbMSwgbmV3IENvbG9yKDAuNjE5NiwgMC4wMDM5LCAwLjI1ODgpXSxcbl07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/materials/gradients/spectral.ts\n");

/***/ }),

/***/ "./src/materials/gradients/vidris.ts":
/*!*******************************************!*\
  !*** ./src/materials/gradients/vidris.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   VIRIDIS: () => (/* binding */ VIRIDIS)\n/* harmony export */ });\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ \"three\");\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(three__WEBPACK_IMPORTED_MODULE_0__);\n\nconst VIRIDIS = [\n    [0.0, new three__WEBPACK_IMPORTED_MODULE_0__.Color(0.267, 0.005, 0.329)],\n    [0.1, new three__WEBPACK_IMPORTED_MODULE_0__.Color(0.283, 0.141, 0.458)],\n    [0.2, new three__WEBPACK_IMPORTED_MODULE_0__.Color(0.254, 0.265, 0.53)],\n    [0.3, new three__WEBPACK_IMPORTED_MODULE_0__.Color(0.207, 0.372, 0.553)],\n    [0.4, new three__WEBPACK_IMPORTED_MODULE_0__.Color(0.164, 0.471, 0.558)],\n    [0.5, new three__WEBPACK_IMPORTED_MODULE_0__.Color(0.128, 0.567, 0.551)],\n    [0.6, new three__WEBPACK_IMPORTED_MODULE_0__.Color(0.135, 0.659, 0.518)],\n    [0.7, new three__WEBPACK_IMPORTED_MODULE_0__.Color(0.267, 0.749, 0.441)],\n    [0.8, new three__WEBPACK_IMPORTED_MODULE_0__.Color(0.478, 0.821, 0.318)],\n    [0.9, new three__WEBPACK_IMPORTED_MODULE_0__.Color(0.741, 0.873, 0.15)],\n    [1.0, new three__WEBPACK_IMPORTED_MODULE_0__.Color(0.993, 0.906, 0.144)],\n];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbWF0ZXJpYWxzL2dyYWRpZW50cy92aWRyaXMudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3BvdHJlZS8uL3NyYy9tYXRlcmlhbHMvZ3JhZGllbnRzL3ZpZHJpcy50cz83Y2ZkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbG9yIH0gZnJvbSAndGhyZWUnO1xuZXhwb3J0IGNvbnN0IFZJUklESVMgPSBbXG4gICAgWzAuMCwgbmV3IENvbG9yKDAuMjY3LCAwLjAwNSwgMC4zMjkpXSxcbiAgICBbMC4xLCBuZXcgQ29sb3IoMC4yODMsIDAuMTQxLCAwLjQ1OCldLFxuICAgIFswLjIsIG5ldyBDb2xvcigwLjI1NCwgMC4yNjUsIDAuNTMpXSxcbiAgICBbMC4zLCBuZXcgQ29sb3IoMC4yMDcsIDAuMzcyLCAwLjU1MyldLFxuICAgIFswLjQsIG5ldyBDb2xvcigwLjE2NCwgMC40NzEsIDAuNTU4KV0sXG4gICAgWzAuNSwgbmV3IENvbG9yKDAuMTI4LCAwLjU2NywgMC41NTEpXSxcbiAgICBbMC42LCBuZXcgQ29sb3IoMC4xMzUsIDAuNjU5LCAwLjUxOCldLFxuICAgIFswLjcsIG5ldyBDb2xvcigwLjI2NywgMC43NDksIDAuNDQxKV0sXG4gICAgWzAuOCwgbmV3IENvbG9yKDAuNDc4LCAwLjgyMSwgMC4zMTgpXSxcbiAgICBbMC45LCBuZXcgQ29sb3IoMC43NDEsIDAuODczLCAwLjE1KV0sXG4gICAgWzEuMCwgbmV3IENvbG9yKDAuOTkzLCAwLjkwNiwgMC4xNDQpXSxcbl07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/materials/gradients/vidris.ts\n");

/***/ }),

/***/ "./src/materials/gradients/yellow-green.ts":
/*!*************************************************!*\
  !*** ./src/materials/gradients/yellow-green.ts ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   YELLOW_GREEN: () => (/* binding */ YELLOW_GREEN)\n/* harmony export */ });\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ \"three\");\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(three__WEBPACK_IMPORTED_MODULE_0__);\n\nconst YELLOW_GREEN = [\n    [0, new three__WEBPACK_IMPORTED_MODULE_0__.Color(0.1647, 0.2824, 0.3451)],\n    [0.1, new three__WEBPACK_IMPORTED_MODULE_0__.Color(0.1338, 0.3555, 0.4227)],\n    [0.2, new three__WEBPACK_IMPORTED_MODULE_0__.Color(0.061, 0.4319, 0.4864)],\n    [0.3, new three__WEBPACK_IMPORTED_MODULE_0__.Color(0.0, 0.5099, 0.5319)],\n    [0.4, new three__WEBPACK_IMPORTED_MODULE_0__.Color(0.0, 0.5881, 0.5569)],\n    [0.5, new three__WEBPACK_IMPORTED_MODULE_0__.Color(0.137, 0.665, 0.5614)],\n    [0.6, new three__WEBPACK_IMPORTED_MODULE_0__.Color(0.2906, 0.7395, 0.5477)],\n    [0.7, new three__WEBPACK_IMPORTED_MODULE_0__.Color(0.4453, 0.8099, 0.5201)],\n    [0.8, new three__WEBPACK_IMPORTED_MODULE_0__.Color(0.6102, 0.8748, 0.485)],\n    [0.9, new three__WEBPACK_IMPORTED_MODULE_0__.Color(0.7883, 0.9323, 0.4514)],\n    [1, new three__WEBPACK_IMPORTED_MODULE_0__.Color(0.9804, 0.9804, 0.4314)],\n];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbWF0ZXJpYWxzL2dyYWRpZW50cy95ZWxsb3ctZ3JlZW4udHMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3BvdHJlZS8uL3NyYy9tYXRlcmlhbHMvZ3JhZGllbnRzL3llbGxvdy1ncmVlbi50cz9kMjA3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbG9yIH0gZnJvbSAndGhyZWUnO1xuZXhwb3J0IGNvbnN0IFlFTExPV19HUkVFTiA9IFtcbiAgICBbMCwgbmV3IENvbG9yKDAuMTY0NywgMC4yODI0LCAwLjM0NTEpXSxcbiAgICBbMC4xLCBuZXcgQ29sb3IoMC4xMzM4LCAwLjM1NTUsIDAuNDIyNyldLFxuICAgIFswLjIsIG5ldyBDb2xvcigwLjA2MSwgMC40MzE5LCAwLjQ4NjQpXSxcbiAgICBbMC4zLCBuZXcgQ29sb3IoMC4wLCAwLjUwOTksIDAuNTMxOSldLFxuICAgIFswLjQsIG5ldyBDb2xvcigwLjAsIDAuNTg4MSwgMC41NTY5KV0sXG4gICAgWzAuNSwgbmV3IENvbG9yKDAuMTM3LCAwLjY2NSwgMC41NjE0KV0sXG4gICAgWzAuNiwgbmV3IENvbG9yKDAuMjkwNiwgMC43Mzk1LCAwLjU0NzcpXSxcbiAgICBbMC43LCBuZXcgQ29sb3IoMC40NDUzLCAwLjgwOTksIDAuNTIwMSldLFxuICAgIFswLjgsIG5ldyBDb2xvcigwLjYxMDIsIDAuODc0OCwgMC40ODUpXSxcbiAgICBbMC45LCBuZXcgQ29sb3IoMC43ODgzLCAwLjkzMjMsIDAuNDUxNCldLFxuICAgIFsxLCBuZXcgQ29sb3IoMC45ODA0LCAwLjk4MDQsIDAuNDMxNCldLFxuXTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/materials/gradients/yellow-green.ts\n");

/***/ }),

/***/ "./src/materials/index.ts":
/*!********************************!*\
  !*** ./src/materials/index.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BlurMaterial: () => (/* reexport safe */ _blur_material__WEBPACK_IMPORTED_MODULE_0__.BlurMaterial),\n/* harmony export */   ClipMode: () => (/* reexport safe */ _clipping__WEBPACK_IMPORTED_MODULE_1__.ClipMode),\n/* harmony export */   GRAYSCALE: () => (/* reexport safe */ _gradients__WEBPACK_IMPORTED_MODULE_6__.GRAYSCALE),\n/* harmony export */   INFERNO: () => (/* reexport safe */ _gradients__WEBPACK_IMPORTED_MODULE_6__.INFERNO),\n/* harmony export */   NormalFilteringMode: () => (/* reexport safe */ _enums__WEBPACK_IMPORTED_MODULE_2__.NormalFilteringMode),\n/* harmony export */   PLASMA: () => (/* reexport safe */ _gradients__WEBPACK_IMPORTED_MODULE_6__.PLASMA),\n/* harmony export */   PointCloudMaterial: () => (/* reexport safe */ _point_cloud_material__WEBPACK_IMPORTED_MODULE_3__.PointCloudMaterial),\n/* harmony export */   PointCloudMixingMode: () => (/* reexport safe */ _enums__WEBPACK_IMPORTED_MODULE_2__.PointCloudMixingMode),\n/* harmony export */   PointColorType: () => (/* reexport safe */ _enums__WEBPACK_IMPORTED_MODULE_2__.PointColorType),\n/* harmony export */   PointOpacityType: () => (/* reexport safe */ _enums__WEBPACK_IMPORTED_MODULE_2__.PointOpacityType),\n/* harmony export */   PointShape: () => (/* reexport safe */ _enums__WEBPACK_IMPORTED_MODULE_2__.PointShape),\n/* harmony export */   PointSizeType: () => (/* reexport safe */ _enums__WEBPACK_IMPORTED_MODULE_2__.PointSizeType),\n/* harmony export */   RAINBOW: () => (/* reexport safe */ _gradients__WEBPACK_IMPORTED_MODULE_6__.RAINBOW),\n/* harmony export */   SPECTRAL: () => (/* reexport safe */ _gradients__WEBPACK_IMPORTED_MODULE_6__.SPECTRAL),\n/* harmony export */   TreeType: () => (/* reexport safe */ _enums__WEBPACK_IMPORTED_MODULE_2__.TreeType),\n/* harmony export */   VIRIDIS: () => (/* reexport safe */ _gradients__WEBPACK_IMPORTED_MODULE_6__.VIRIDIS),\n/* harmony export */   YELLOW_GREEN: () => (/* reexport safe */ _gradients__WEBPACK_IMPORTED_MODULE_6__.YELLOW_GREEN),\n/* harmony export */   generateClassificationTexture: () => (/* reexport safe */ _texture_generation__WEBPACK_IMPORTED_MODULE_4__.generateClassificationTexture),\n/* harmony export */   generateDataTexture: () => (/* reexport safe */ _texture_generation__WEBPACK_IMPORTED_MODULE_4__.generateDataTexture),\n/* harmony export */   generateGradientTexture: () => (/* reexport safe */ _texture_generation__WEBPACK_IMPORTED_MODULE_4__.generateGradientTexture)\n/* harmony export */ });\n/* harmony import */ var _blur_material__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./blur-material */ \"./src/materials/blur-material.ts\");\n/* harmony import */ var _clipping__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./clipping */ \"./src/materials/clipping.ts\");\n/* harmony import */ var _enums__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./enums */ \"./src/materials/enums.ts\");\n/* harmony import */ var _point_cloud_material__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./point-cloud-material */ \"./src/materials/point-cloud-material.ts\");\n/* harmony import */ var _texture_generation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./texture-generation */ \"./src/materials/texture-generation.ts\");\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./types */ \"./src/materials/types.ts\");\n/* harmony import */ var _gradients__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./gradients */ \"./src/materials/gradients/index.ts\");\n\n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbWF0ZXJpYWxzL2luZGV4LnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG90cmVlLy4vc3JjL21hdGVyaWFscy9pbmRleC50cz85MDI5Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gJy4vYmx1ci1tYXRlcmlhbCc7XG5leHBvcnQgKiBmcm9tICcuL2NsaXBwaW5nJztcbmV4cG9ydCAqIGZyb20gJy4vZW51bXMnO1xuZXhwb3J0ICogZnJvbSAnLi9wb2ludC1jbG91ZC1tYXRlcmlhbCc7XG5leHBvcnQgKiBmcm9tICcuL3RleHR1cmUtZ2VuZXJhdGlvbic7XG5leHBvcnQgKiBmcm9tICcuL3R5cGVzJztcbmV4cG9ydCAqIGZyb20gJy4vZ3JhZGllbnRzJztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/materials/index.ts\n");

/***/ }),

/***/ "./src/materials/point-cloud-material.ts":
/*!***********************************************!*\
  !*** ./src/materials/point-cloud-material.ts ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PointCloudMaterial: () => (/* binding */ PointCloudMaterial)\n/* harmony export */ });\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ \"three\");\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(three__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants */ \"./src/constants.ts\");\n/* harmony import */ var _utils_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/utils */ \"./src/utils/utils.ts\");\n/* harmony import */ var _classification__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./classification */ \"./src/materials/classification.ts\");\n/* harmony import */ var _clipping__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./clipping */ \"./src/materials/clipping.ts\");\n/* harmony import */ var _enums__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./enums */ \"./src/materials/enums.ts\");\n/* harmony import */ var _gradients__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./gradients */ \"./src/materials/gradients/index.ts\");\n/* harmony import */ var _texture_generation__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./texture-generation */ \"./src/materials/texture-generation.ts\");\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\n\n\n\n\n\n\n\nconst TREE_TYPE_DEFS = {\n    [_enums__WEBPACK_IMPORTED_MODULE_5__.TreeType.OCTREE]: 'tree_type_octree',\n    [_enums__WEBPACK_IMPORTED_MODULE_5__.TreeType.KDTREE]: 'tree_type_kdtree',\n};\nconst SIZE_TYPE_DEFS = {\n    [_enums__WEBPACK_IMPORTED_MODULE_5__.PointSizeType.FIXED]: 'fixed_point_size',\n    [_enums__WEBPACK_IMPORTED_MODULE_5__.PointSizeType.ATTENUATED]: 'attenuated_point_size',\n    [_enums__WEBPACK_IMPORTED_MODULE_5__.PointSizeType.ADAPTIVE]: 'adaptive_point_size',\n};\nconst OPACITY_DEFS = {\n    [_enums__WEBPACK_IMPORTED_MODULE_5__.PointOpacityType.ATTENUATED]: 'attenuated_opacity',\n    [_enums__WEBPACK_IMPORTED_MODULE_5__.PointOpacityType.FIXED]: 'fixed_opacity',\n};\nconst SHAPE_DEFS = {\n    [_enums__WEBPACK_IMPORTED_MODULE_5__.PointShape.SQUARE]: 'square_point_shape',\n    [_enums__WEBPACK_IMPORTED_MODULE_5__.PointShape.CIRCLE]: 'circle_point_shape',\n    [_enums__WEBPACK_IMPORTED_MODULE_5__.PointShape.PARABOLOID]: 'paraboloid_point_shape',\n};\nconst COLOR_DEFS = {\n    [_enums__WEBPACK_IMPORTED_MODULE_5__.PointColorType.RGB]: 'color_type_rgb',\n    [_enums__WEBPACK_IMPORTED_MODULE_5__.PointColorType.COLOR]: 'color_type_color',\n    [_enums__WEBPACK_IMPORTED_MODULE_5__.PointColorType.DEPTH]: 'color_type_depth',\n    [_enums__WEBPACK_IMPORTED_MODULE_5__.PointColorType.HEIGHT]: 'color_type_height',\n    [_enums__WEBPACK_IMPORTED_MODULE_5__.PointColorType.INTENSITY]: 'color_type_intensity',\n    [_enums__WEBPACK_IMPORTED_MODULE_5__.PointColorType.INTENSITY_GRADIENT]: 'color_type_intensity_gradient',\n    [_enums__WEBPACK_IMPORTED_MODULE_5__.PointColorType.LOD]: 'color_type_lod',\n    [_enums__WEBPACK_IMPORTED_MODULE_5__.PointColorType.POINT_INDEX]: 'color_type_point_index',\n    [_enums__WEBPACK_IMPORTED_MODULE_5__.PointColorType.CLASSIFICATION]: 'color_type_classification',\n    [_enums__WEBPACK_IMPORTED_MODULE_5__.PointColorType.RETURN_NUMBER]: 'color_type_return_number',\n    [_enums__WEBPACK_IMPORTED_MODULE_5__.PointColorType.SOURCE]: 'color_type_source',\n    [_enums__WEBPACK_IMPORTED_MODULE_5__.PointColorType.NORMAL]: 'color_type_normal',\n    [_enums__WEBPACK_IMPORTED_MODULE_5__.PointColorType.PHONG]: 'color_type_phong',\n    [_enums__WEBPACK_IMPORTED_MODULE_5__.PointColorType.RGB_HEIGHT]: 'color_type_rgb_height',\n    [_enums__WEBPACK_IMPORTED_MODULE_5__.PointColorType.COMPOSITE]: 'color_type_composite',\n};\nconst CLIP_MODE_DEFS = {\n    [_clipping__WEBPACK_IMPORTED_MODULE_4__.ClipMode.DISABLED]: 'clip_disabled',\n    [_clipping__WEBPACK_IMPORTED_MODULE_4__.ClipMode.CLIP_OUTSIDE]: 'clip_outside',\n    [_clipping__WEBPACK_IMPORTED_MODULE_4__.ClipMode.HIGHLIGHT_INSIDE]: 'clip_highlight_inside',\n    [_clipping__WEBPACK_IMPORTED_MODULE_4__.ClipMode.CLIP_HORIZONTALLY]: 'clip_horizontally',\n    [_clipping__WEBPACK_IMPORTED_MODULE_4__.ClipMode.CLIP_VERTICALLY]: 'clip_vertically',\n};\nclass PointCloudMaterial extends three__WEBPACK_IMPORTED_MODULE_0__.RawShaderMaterial {\n    constructor(parameters = {}) {\n        super();\n        /**\n         * Use the drawing buffer size instead of the dom client width and height when passing the screen height and screen width uniforms to the\n         * shader. This is useful if you have offscreen canvases (which in some browsers return 0 as client width and client height).\n         */\n        this.useDrawingBufferSize = false;\n        this.lights = false;\n        this.fog = false;\n        this.colorRgba = false;\n        this.numClipBoxes = 0;\n        this.clipBoxes = [];\n        this.visibleNodeTextureOffsets = new Map();\n        this._gradient = _gradients__WEBPACK_IMPORTED_MODULE_6__.SPECTRAL;\n        this.gradientTexture = (0,_texture_generation__WEBPACK_IMPORTED_MODULE_7__.generateGradientTexture)(this._gradient);\n        this._classification = _classification__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_CLASSIFICATION;\n        this.classificationTexture = (0,_texture_generation__WEBPACK_IMPORTED_MODULE_7__.generateClassificationTexture)(this._classification);\n        this.uniforms = {\n            bbSize: makeUniform('fv', [0, 0, 0]),\n            blendDepthSupplement: makeUniform('f', 0.0),\n            blendHardness: makeUniform('f', 2.0),\n            classificationLUT: makeUniform('t', this.classificationTexture || new three__WEBPACK_IMPORTED_MODULE_0__.Texture()),\n            clipBoxCount: makeUniform('f', 0),\n            clipBoxes: makeUniform('Matrix4fv', []),\n            clipExtent: makeUniform('fv', [0.0, 0.0, 1.0, 1.0]),\n            depthMap: makeUniform('t', null),\n            diffuse: makeUniform('fv', [1, 1, 1]),\n            fov: makeUniform('f', 1.0),\n            gradient: makeUniform('t', this.gradientTexture || new three__WEBPACK_IMPORTED_MODULE_0__.Texture()),\n            heightMax: makeUniform('f', 1.0),\n            heightMin: makeUniform('f', 0.0),\n            intensityBrightness: makeUniform('f', 0),\n            intensityContrast: makeUniform('f', 0),\n            intensityGamma: makeUniform('f', 1),\n            intensityRange: makeUniform('fv', [0, 65000]),\n            isLeafNode: makeUniform('b', 0),\n            level: makeUniform('f', 0.0),\n            maxSize: makeUniform('f', _constants__WEBPACK_IMPORTED_MODULE_1__.DEFAULT_MAX_POINT_SIZE),\n            minSize: makeUniform('f', _constants__WEBPACK_IMPORTED_MODULE_1__.DEFAULT_MIN_POINT_SIZE),\n            octreeSize: makeUniform('f', 0),\n            opacity: makeUniform('f', 1.0),\n            pcIndex: makeUniform('f', 0),\n            rgbBrightness: makeUniform('f', _constants__WEBPACK_IMPORTED_MODULE_1__.DEFAULT_RGB_BRIGHTNESS),\n            rgbContrast: makeUniform('f', _constants__WEBPACK_IMPORTED_MODULE_1__.DEFAULT_RGB_CONTRAST),\n            rgbGamma: makeUniform('f', _constants__WEBPACK_IMPORTED_MODULE_1__.DEFAULT_RGB_GAMMA),\n            screenHeight: makeUniform('f', 1.0),\n            screenWidth: makeUniform('f', 1.0),\n            size: makeUniform('f', 1),\n            spacing: makeUniform('f', 1.0),\n            toModel: makeUniform('Matrix4f', []),\n            transition: makeUniform('f', 0.5),\n            uColor: makeUniform('c', new three__WEBPACK_IMPORTED_MODULE_0__.Color(0xffffff)),\n            // @ts-ignore\n            visibleNodes: makeUniform('t', this.visibleNodesTexture || new three__WEBPACK_IMPORTED_MODULE_0__.Texture()),\n            vnStart: makeUniform('f', 0.0),\n            wClassification: makeUniform('f', 0),\n            wElevation: makeUniform('f', 0),\n            wIntensity: makeUniform('f', 0),\n            wReturnNumber: makeUniform('f', 0),\n            wRGB: makeUniform('f', 1),\n            wSourceID: makeUniform('f', 0),\n            opacityAttenuation: makeUniform('f', 1),\n            filterByNormalThreshold: makeUniform('f', 0),\n            highlightedPointCoordinate: makeUniform('fv', new three__WEBPACK_IMPORTED_MODULE_0__.Vector3()),\n            highlightedPointColor: makeUniform('fv', _constants__WEBPACK_IMPORTED_MODULE_1__.DEFAULT_HIGHLIGHT_COLOR.clone()),\n            enablePointHighlighting: makeUniform('b', true),\n            highlightedPointScale: makeUniform('f', 2.0),\n            backgroundMap: makeUniform('t', null),\n            normalFilteringMode: makeUniform('i', _enums__WEBPACK_IMPORTED_MODULE_5__.NormalFilteringMode.ABSOLUTE_NORMAL_FILTERING_MODE),\n            pointCloudID: makeUniform('f', 2),\n            pointCloudMixingMode: makeUniform('i', _enums__WEBPACK_IMPORTED_MODULE_5__.PointCloudMixingMode.CHECKBOARD),\n            stripeDistanceX: makeUniform('f', 5),\n            stripeDistanceY: makeUniform('f', 5),\n            stripeDivisorX: makeUniform('f', 2),\n            stripeDivisorY: makeUniform('f', 2),\n            pointCloudMixAngle: makeUniform('f', 31),\n        };\n        this.useClipBox = false;\n        this.weighted = false;\n        this.pointColorType = _enums__WEBPACK_IMPORTED_MODULE_5__.PointColorType.RGB;\n        this.pointSizeType = _enums__WEBPACK_IMPORTED_MODULE_5__.PointSizeType.ADAPTIVE;\n        this.clipMode = _clipping__WEBPACK_IMPORTED_MODULE_4__.ClipMode.DISABLED;\n        this.useEDL = false;\n        this.shape = _enums__WEBPACK_IMPORTED_MODULE_5__.PointShape.SQUARE;\n        this.treeType = _enums__WEBPACK_IMPORTED_MODULE_5__.TreeType.OCTREE;\n        this.pointOpacityType = _enums__WEBPACK_IMPORTED_MODULE_5__.PointOpacityType.FIXED;\n        this.useFilterByNormal = false;\n        this.useTextureBlending = false;\n        this.usePointCloudMixing = false;\n        this.highlightPoint = false;\n        this.attributes = {\n            position: { type: 'fv', value: [] },\n            color: { type: 'fv', value: [] },\n            normal: { type: 'fv', value: [] },\n            intensity: { type: 'f', value: [] },\n            classification: { type: 'f', value: [] },\n            returnNumber: { type: 'f', value: [] },\n            numberOfReturns: { type: 'f', value: [] },\n            pointSourceID: { type: 'f', value: [] },\n            indices: { type: 'fv', value: [] },\n        };\n        const tex = (this.visibleNodesTexture = (0,_texture_generation__WEBPACK_IMPORTED_MODULE_7__.generateDataTexture)(2048, 1, new three__WEBPACK_IMPORTED_MODULE_0__.Color(0xffffff)));\n        tex.minFilter = three__WEBPACK_IMPORTED_MODULE_0__.NearestFilter;\n        tex.magFilter = three__WEBPACK_IMPORTED_MODULE_0__.NearestFilter;\n        this.setUniform('visibleNodes', tex);\n        this.treeType = getValid(parameters.treeType, _enums__WEBPACK_IMPORTED_MODULE_5__.TreeType.OCTREE);\n        this.size = getValid(parameters.size, 1.0);\n        this.minSize = getValid(parameters.minSize, 2.0);\n        this.maxSize = getValid(parameters.maxSize, 50.0);\n        this.colorRgba = Boolean(parameters.colorRgba);\n        this.classification = _classification__WEBPACK_IMPORTED_MODULE_3__.DEFAULT_CLASSIFICATION;\n        this.defaultAttributeValues.normal = [0, 0, 0];\n        this.defaultAttributeValues.classification = [0, 0, 0];\n        this.defaultAttributeValues.indices = [0, 0, 0, 0];\n        this.vertexColors = true;\n        this.updateShaderSource();\n    }\n    dispose() {\n        super.dispose();\n        if (this.gradientTexture) {\n            this.gradientTexture.dispose();\n            this.gradientTexture = undefined;\n        }\n        if (this.visibleNodesTexture) {\n            this.visibleNodesTexture.dispose();\n            this.visibleNodesTexture = undefined;\n        }\n        this.clearVisibleNodeTextureOffsets();\n        if (this.classificationTexture) {\n            this.classificationTexture.dispose();\n            this.classificationTexture = undefined;\n        }\n        if (this.depthMap) {\n            this.depthMap.dispose();\n            this.depthMap = undefined;\n        }\n        if (this.backgroundMap) {\n            this.backgroundMap.dispose();\n            this.backgroundMap = undefined;\n        }\n    }\n    clearVisibleNodeTextureOffsets() {\n        this.visibleNodeTextureOffsets.clear();\n    }\n    updateShaderSource() {\n        this.vertexShader = this.applyDefines((__webpack_require__(/*! ./shaders/pointcloud.vert */ \"./src/materials/shaders/pointcloud.vert\")[\"default\"]));\n        this.fragmentShader = this.applyDefines((__webpack_require__(/*! ./shaders/pointcloud.frag */ \"./src/materials/shaders/pointcloud.frag\")[\"default\"]));\n        if (this.opacity === 1.0) {\n            this.blending = three__WEBPACK_IMPORTED_MODULE_0__.NoBlending;\n            this.transparent = false;\n            this.depthTest = true;\n            this.depthWrite = true;\n            this.depthFunc = three__WEBPACK_IMPORTED_MODULE_0__.LessEqualDepth;\n        }\n        else if (this.opacity < 1.0 && !this.useEDL) {\n            this.blending = three__WEBPACK_IMPORTED_MODULE_0__.AdditiveBlending;\n            this.transparent = true;\n            this.depthTest = false;\n            this.depthWrite = true;\n        }\n        if (this.weighted) {\n            this.blending = three__WEBPACK_IMPORTED_MODULE_0__.AdditiveBlending;\n            this.transparent = true;\n            this.depthTest = true;\n            this.depthWrite = false;\n            this.depthFunc = three__WEBPACK_IMPORTED_MODULE_0__.LessEqualDepth;\n        }\n        this.needsUpdate = true;\n    }\n    applyDefines(shaderSrc) {\n        const parts = [];\n        function define(value) {\n            if (value) {\n                parts.push(`#define ${value}`);\n            }\n        }\n        define(TREE_TYPE_DEFS[this.treeType]);\n        define(SIZE_TYPE_DEFS[this.pointSizeType]);\n        define(SHAPE_DEFS[this.shape]);\n        define(COLOR_DEFS[this.pointColorType]);\n        define(CLIP_MODE_DEFS[this.clipMode]);\n        define(OPACITY_DEFS[this.pointOpacityType]);\n        // We only perform gamma and brightness/contrast calculations per point if values are specified.\n        if (this.rgbGamma !== _constants__WEBPACK_IMPORTED_MODULE_1__.DEFAULT_RGB_GAMMA ||\n            this.rgbBrightness !== _constants__WEBPACK_IMPORTED_MODULE_1__.DEFAULT_RGB_BRIGHTNESS ||\n            this.rgbContrast !== _constants__WEBPACK_IMPORTED_MODULE_1__.DEFAULT_RGB_CONTRAST) {\n            define('use_rgb_gamma_contrast_brightness');\n        }\n        if (this.useFilterByNormal) {\n            define('use_filter_by_normal');\n        }\n        if (this.useEDL) {\n            define('use_edl');\n        }\n        if (this.weighted) {\n            define('weighted_splats');\n        }\n        if (this.numClipBoxes > 0) {\n            define('use_clip_box');\n        }\n        if (this.highlightPoint) {\n            define('highlight_point');\n        }\n        if (this.useTextureBlending) {\n            define('use_texture_blending');\n        }\n        if (this.usePointCloudMixing) {\n            define('use_point_cloud_mixing');\n        }\n        if (this.colorRgba) {\n            define('color_rgba');\n        }\n        define('MAX_POINT_LIGHTS 0');\n        define('MAX_DIR_LIGHTS 0');\n        parts.push(shaderSrc);\n        return parts.join('\\n');\n    }\n    setPointCloudMixingMode(mode) {\n        this.pointCloudMixingMode = mode;\n    }\n    getPointCloudMixingMode() {\n        if (this.pointCloudMixingMode === _enums__WEBPACK_IMPORTED_MODULE_5__.PointCloudMixingMode.STRIPES) {\n            return _enums__WEBPACK_IMPORTED_MODULE_5__.PointCloudMixingMode.STRIPES;\n        }\n        return _enums__WEBPACK_IMPORTED_MODULE_5__.PointCloudMixingMode.CHECKBOARD;\n    }\n    setClipBoxes(clipBoxes) {\n        if (!clipBoxes) {\n            return;\n        }\n        this.clipBoxes = clipBoxes;\n        const doUpdate = this.numClipBoxes !== clipBoxes.length && (clipBoxes.length === 0 || this.numClipBoxes === 0);\n        this.numClipBoxes = clipBoxes.length;\n        this.setUniform('clipBoxCount', this.numClipBoxes);\n        if (doUpdate) {\n            this.updateShaderSource();\n        }\n        const clipBoxesLength = this.numClipBoxes * 16;\n        const clipBoxesArray = new Float32Array(clipBoxesLength);\n        for (let i = 0; i < this.numClipBoxes; i++) {\n            clipBoxesArray.set(clipBoxes[i].inverse.elements, 16 * i);\n        }\n        for (let i = 0; i < clipBoxesLength; i++) {\n            if (isNaN(clipBoxesArray[i])) {\n                clipBoxesArray[i] = Infinity;\n            }\n        }\n        this.setUniform('clipBoxes', clipBoxesArray);\n    }\n    get gradient() {\n        return this._gradient;\n    }\n    set gradient(value) {\n        if (this._gradient !== value) {\n            this._gradient = value;\n            this.gradientTexture = (0,_texture_generation__WEBPACK_IMPORTED_MODULE_7__.generateGradientTexture)(this._gradient);\n            this.setUniform('gradient', this.gradientTexture);\n        }\n    }\n    get classification() {\n        return this._classification;\n    }\n    set classification(value) {\n        const copy = {};\n        for (const key of Object.keys(value)) {\n            copy[key] = value[key].clone();\n        }\n        let isEqual = false;\n        if (this._classification === undefined) {\n            isEqual = false;\n        }\n        else {\n            isEqual = Object.keys(copy).length === Object.keys(this._classification).length;\n            for (const key of Object.keys(copy)) {\n                isEqual = isEqual && this._classification[key] !== undefined;\n                isEqual = isEqual && copy[key].equals(this._classification[key]);\n            }\n        }\n        if (!isEqual) {\n            this._classification = copy;\n            this.recomputeClassification();\n        }\n    }\n    recomputeClassification() {\n        this.classificationTexture = (0,_texture_generation__WEBPACK_IMPORTED_MODULE_7__.generateClassificationTexture)(this._classification);\n        this.setUniform('classificationLUT', this.classificationTexture);\n    }\n    get elevationRange() {\n        return [this.heightMin, this.heightMax];\n    }\n    set elevationRange(value) {\n        this.heightMin = value[0];\n        this.heightMax = value[1];\n    }\n    getUniform(name) {\n        return this.uniforms === undefined ? undefined : this.uniforms[name].value;\n    }\n    setUniform(name, value) {\n        if (this.uniforms === undefined) {\n            return;\n        }\n        const uObj = this.uniforms[name];\n        if (uObj.type === 'c') {\n            uObj.value.copy(value);\n        }\n        else if (value !== uObj.value) {\n            uObj.value = value;\n        }\n    }\n    updateMaterial(octree, visibleNodes, camera, renderer) {\n        const pixelRatio = renderer.getPixelRatio();\n        if (camera.type === _constants__WEBPACK_IMPORTED_MODULE_1__.PERSPECTIVE_CAMERA) {\n            this.fov = camera.fov * (Math.PI / 180);\n        }\n        else {\n            this.fov = Math.PI / 2; // will result in slope = 1 in the shader\n        }\n        const renderTarget = renderer.getRenderTarget();\n        if (renderTarget !== null) {\n            this.screenWidth = renderTarget.width;\n            this.screenHeight = renderTarget.height;\n        }\n        else {\n            this.screenWidth = renderer.domElement.clientWidth * pixelRatio;\n            this.screenHeight = renderer.domElement.clientHeight * pixelRatio;\n        }\n        if (this.useDrawingBufferSize) {\n            renderer.getDrawingBufferSize(PointCloudMaterial.helperVec2);\n            this.screenWidth = PointCloudMaterial.helperVec2.width;\n            this.screenHeight = PointCloudMaterial.helperVec2.height;\n        }\n        const maxScale = Math.max(octree.scale.x, octree.scale.y, octree.scale.z);\n        this.spacing = octree.pcoGeometry.spacing * maxScale;\n        this.octreeSize = octree.pcoGeometry.boundingBox.getSize(PointCloudMaterial.helperVec3).x;\n        if (this.pointSizeType === _enums__WEBPACK_IMPORTED_MODULE_5__.PointSizeType.ADAPTIVE ||\n            this.pointColorType === _enums__WEBPACK_IMPORTED_MODULE_5__.PointColorType.LOD) {\n            this.updateVisibilityTextureData(visibleNodes);\n        }\n    }\n    updateVisibilityTextureData(nodes) {\n        nodes.sort(_utils_utils__WEBPACK_IMPORTED_MODULE_2__.byLevelAndIndex);\n        const data = new Uint8Array(nodes.length * 4);\n        const offsetsToChild = new Array(nodes.length).fill(Infinity);\n        this.visibleNodeTextureOffsets.clear();\n        for (let i = 0; i < nodes.length; i++) {\n            const node = nodes[i];\n            this.visibleNodeTextureOffsets.set(node.name, i);\n            if (i > 0) {\n                const parentName = node.name.slice(0, -1);\n                const parentOffset = this.visibleNodeTextureOffsets.get(parentName);\n                const parentOffsetToChild = i - parentOffset;\n                offsetsToChild[parentOffset] = Math.min(offsetsToChild[parentOffset], parentOffsetToChild);\n                // tslint:disable:no-bitwise\n                const offset = parentOffset * 4;\n                data[offset] = data[offset] | (1 << node.index);\n                data[offset + 1] = offsetsToChild[parentOffset] >> 8;\n                data[offset + 2] = offsetsToChild[parentOffset] % 256;\n                // tslint:enable:no-bitwise\n            }\n            data[i * 4 + 3] = node.name.length;\n        }\n        const texture = this.visibleNodesTexture;\n        if (texture) {\n            texture.image.data.set(data);\n            texture.needsUpdate = true;\n        }\n    }\n    static makeOnBeforeRender(octree, node, pcIndex) {\n        return (_renderer, _scene, _camera, _geometry, material) => {\n            const pointCloudMaterial = material;\n            const materialUniforms = pointCloudMaterial.uniforms;\n            materialUniforms.level.value = node.level;\n            materialUniforms.isLeafNode.value = node.isLeafNode;\n            const vnStart = pointCloudMaterial.visibleNodeTextureOffsets.get(node.name);\n            if (vnStart !== undefined) {\n                materialUniforms.vnStart.value = vnStart;\n            }\n            materialUniforms.pcIndex.value =\n                pcIndex !== undefined ? pcIndex : octree.visibleNodes.indexOf(node);\n            // Note: when changing uniforms in onBeforeRender, the flag uniformsNeedUpdate has to be\n            // set to true to instruct ThreeJS to upload them. See also\n            // https://github.com/mrdoob/three.js/issues/9870#issuecomment-368750182.\n            // Remove the cast to any after updating to Three.JS >= r113\n            material /*ShaderMaterial*/.uniformsNeedUpdate = true;\n        };\n    }\n}\nPointCloudMaterial.helperVec3 = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3();\nPointCloudMaterial.helperVec2 = new three__WEBPACK_IMPORTED_MODULE_0__.Vector2();\n__decorate([\n    uniform('bbSize')\n], PointCloudMaterial.prototype, \"bbSize\", void 0);\n__decorate([\n    uniform('clipExtent')\n], PointCloudMaterial.prototype, \"clipExtent\", void 0);\n__decorate([\n    uniform('depthMap')\n], PointCloudMaterial.prototype, \"depthMap\", void 0);\n__decorate([\n    uniform('fov')\n], PointCloudMaterial.prototype, \"fov\", void 0);\n__decorate([\n    uniform('heightMax')\n], PointCloudMaterial.prototype, \"heightMax\", void 0);\n__decorate([\n    uniform('heightMin')\n], PointCloudMaterial.prototype, \"heightMin\", void 0);\n__decorate([\n    uniform('intensityBrightness')\n], PointCloudMaterial.prototype, \"intensityBrightness\", void 0);\n__decorate([\n    uniform('intensityContrast')\n], PointCloudMaterial.prototype, \"intensityContrast\", void 0);\n__decorate([\n    uniform('intensityGamma')\n], PointCloudMaterial.prototype, \"intensityGamma\", void 0);\n__decorate([\n    uniform('intensityRange')\n], PointCloudMaterial.prototype, \"intensityRange\", void 0);\n__decorate([\n    uniform('maxSize')\n], PointCloudMaterial.prototype, \"maxSize\", void 0);\n__decorate([\n    uniform('minSize')\n], PointCloudMaterial.prototype, \"minSize\", void 0);\n__decorate([\n    uniform('octreeSize')\n], PointCloudMaterial.prototype, \"octreeSize\", void 0);\n__decorate([\n    uniform('opacity', true)\n], PointCloudMaterial.prototype, \"opacity\", void 0);\n__decorate([\n    uniform('rgbBrightness', true)\n], PointCloudMaterial.prototype, \"rgbBrightness\", void 0);\n__decorate([\n    uniform('rgbContrast', true)\n], PointCloudMaterial.prototype, \"rgbContrast\", void 0);\n__decorate([\n    uniform('rgbGamma', true)\n], PointCloudMaterial.prototype, \"rgbGamma\", void 0);\n__decorate([\n    uniform('screenHeight')\n], PointCloudMaterial.prototype, \"screenHeight\", void 0);\n__decorate([\n    uniform('screenWidth')\n], PointCloudMaterial.prototype, \"screenWidth\", void 0);\n__decorate([\n    uniform('size')\n], PointCloudMaterial.prototype, \"size\", void 0);\n__decorate([\n    uniform('spacing')\n], PointCloudMaterial.prototype, \"spacing\", void 0);\n__decorate([\n    uniform('transition')\n], PointCloudMaterial.prototype, \"transition\", void 0);\n__decorate([\n    uniform('uColor')\n], PointCloudMaterial.prototype, \"color\", void 0);\n__decorate([\n    uniform('wClassification')\n], PointCloudMaterial.prototype, \"weightClassification\", void 0);\n__decorate([\n    uniform('wElevation')\n], PointCloudMaterial.prototype, \"weightElevation\", void 0);\n__decorate([\n    uniform('wIntensity')\n], PointCloudMaterial.prototype, \"weightIntensity\", void 0);\n__decorate([\n    uniform('wReturnNumber')\n], PointCloudMaterial.prototype, \"weightReturnNumber\", void 0);\n__decorate([\n    uniform('wRGB')\n], PointCloudMaterial.prototype, \"weightRGB\", void 0);\n__decorate([\n    uniform('wSourceID')\n], PointCloudMaterial.prototype, \"weightSourceID\", void 0);\n__decorate([\n    uniform('opacityAttenuation')\n], PointCloudMaterial.prototype, \"opacityAttenuation\", void 0);\n__decorate([\n    uniform('filterByNormalThreshold')\n], PointCloudMaterial.prototype, \"filterByNormalThreshold\", void 0);\n__decorate([\n    uniform('highlightedPointCoordinate')\n], PointCloudMaterial.prototype, \"highlightedPointCoordinate\", void 0);\n__decorate([\n    uniform('highlightedPointColor')\n], PointCloudMaterial.prototype, \"highlightedPointColor\", void 0);\n__decorate([\n    uniform('enablePointHighlighting')\n], PointCloudMaterial.prototype, \"enablePointHighlighting\", void 0);\n__decorate([\n    uniform('highlightedPointScale')\n], PointCloudMaterial.prototype, \"highlightedPointScale\", void 0);\n__decorate([\n    uniform('normalFilteringMode')\n], PointCloudMaterial.prototype, \"normalFilteringMode\", void 0);\n__decorate([\n    uniform('backgroundMap')\n], PointCloudMaterial.prototype, \"backgroundMap\", void 0);\n__decorate([\n    uniform('pointCloudID')\n], PointCloudMaterial.prototype, \"pointCloudID\", void 0);\n__decorate([\n    uniform('pointCloudMixingMode')\n], PointCloudMaterial.prototype, \"pointCloudMixingMode\", void 0);\n__decorate([\n    uniform('stripeDistanceX')\n], PointCloudMaterial.prototype, \"stripeDistanceX\", void 0);\n__decorate([\n    uniform('stripeDistanceY')\n], PointCloudMaterial.prototype, \"stripeDistanceY\", void 0);\n__decorate([\n    uniform('stripeDivisorX')\n], PointCloudMaterial.prototype, \"stripeDivisorX\", void 0);\n__decorate([\n    uniform('stripeDivisorY')\n], PointCloudMaterial.prototype, \"stripeDivisorY\", void 0);\n__decorate([\n    uniform('pointCloudMixAngle')\n], PointCloudMaterial.prototype, \"pointCloudMixAngle\", void 0);\n__decorate([\n    requiresShaderUpdate()\n], PointCloudMaterial.prototype, \"useClipBox\", void 0);\n__decorate([\n    requiresShaderUpdate()\n], PointCloudMaterial.prototype, \"weighted\", void 0);\n__decorate([\n    requiresShaderUpdate()\n], PointCloudMaterial.prototype, \"pointColorType\", void 0);\n__decorate([\n    requiresShaderUpdate()\n], PointCloudMaterial.prototype, \"pointSizeType\", void 0);\n__decorate([\n    requiresShaderUpdate()\n], PointCloudMaterial.prototype, \"clipMode\", void 0);\n__decorate([\n    requiresShaderUpdate()\n], PointCloudMaterial.prototype, \"useEDL\", void 0);\n__decorate([\n    requiresShaderUpdate()\n], PointCloudMaterial.prototype, \"shape\", void 0);\n__decorate([\n    requiresShaderUpdate()\n], PointCloudMaterial.prototype, \"treeType\", void 0);\n__decorate([\n    requiresShaderUpdate()\n], PointCloudMaterial.prototype, \"pointOpacityType\", void 0);\n__decorate([\n    requiresShaderUpdate()\n], PointCloudMaterial.prototype, \"useFilterByNormal\", void 0);\n__decorate([\n    requiresShaderUpdate()\n], PointCloudMaterial.prototype, \"useTextureBlending\", void 0);\n__decorate([\n    requiresShaderUpdate()\n], PointCloudMaterial.prototype, \"usePointCloudMixing\", void 0);\n__decorate([\n    requiresShaderUpdate()\n], PointCloudMaterial.prototype, \"highlightPoint\", void 0);\nfunction makeUniform(type, value) {\n    return { type, value };\n}\nfunction getValid(a, b) {\n    return a === undefined ? b : a;\n}\n// tslint:disable:no-invalid-this\nfunction uniform(uniformName, requireSrcUpdate = false) {\n    return (target, propertyKey) => {\n        Object.defineProperty(target, propertyKey, {\n            get() {\n                return this.getUniform(uniformName);\n            },\n            set(value) {\n                if (value !== this.getUniform(uniformName)) {\n                    this.setUniform(uniformName, value);\n                    if (requireSrcUpdate) {\n                        this.updateShaderSource();\n                    }\n                }\n            },\n        });\n    };\n}\nfunction requiresShaderUpdate() {\n    return (target, propertyKey) => {\n        const fieldName = `_${propertyKey.toString()}`;\n        Object.defineProperty(target, propertyKey, {\n            get() {\n                return this[fieldName];\n            },\n            set(value) {\n                if (value !== this[fieldName]) {\n                    this[fieldName] = value;\n                    this.updateShaderSource();\n                }\n            },\n        });\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/materials/point-cloud-material.ts\n");

/***/ }),

/***/ "./src/materials/texture-generation.ts":
/*!*********************************************!*\
  !*** ./src/materials/texture-generation.ts ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   generateClassificationTexture: () => (/* binding */ generateClassificationTexture),\n/* harmony export */   generateDataTexture: () => (/* binding */ generateDataTexture),\n/* harmony export */   generateGradientTexture: () => (/* binding */ generateGradientTexture)\n/* harmony export */ });\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ \"three\");\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(three__WEBPACK_IMPORTED_MODULE_0__);\n\nfunction generateDataTexture(width, height, color) {\n    const size = width * height;\n    const data = new Uint8Array(4 * size);\n    const r = Math.floor(color.r * 255);\n    const g = Math.floor(color.g * 255);\n    const b = Math.floor(color.b * 255);\n    for (let i = 0; i < size; i++) {\n        data[i * 3] = r;\n        data[i * 3 + 1] = g;\n        data[i * 3 + 2] = b;\n    }\n    const texture = new three__WEBPACK_IMPORTED_MODULE_0__.DataTexture(data, width, height, three__WEBPACK_IMPORTED_MODULE_0__.RGBAFormat);\n    texture.needsUpdate = true;\n    texture.magFilter = three__WEBPACK_IMPORTED_MODULE_0__.NearestFilter;\n    return texture;\n}\nfunction generateGradientTexture(gradient) {\n    const size = 64;\n    const canvas = document.createElement('canvas');\n    canvas.width = size;\n    canvas.height = size;\n    const context = canvas.getContext('2d');\n    context.rect(0, 0, size, size);\n    const ctxGradient = context.createLinearGradient(0, 0, size, size);\n    for (let i = 0; i < gradient.length; i++) {\n        const step = gradient[i];\n        ctxGradient.addColorStop(step[0], `#${step[1].getHexString()}`);\n    }\n    context.fillStyle = ctxGradient;\n    context.fill();\n    const texture = new three__WEBPACK_IMPORTED_MODULE_0__.CanvasTexture(canvas);\n    texture.needsUpdate = true;\n    texture.minFilter = three__WEBPACK_IMPORTED_MODULE_0__.LinearFilter;\n    // textureImage = texture.image;\n    return texture;\n}\nfunction generateClassificationTexture(classification) {\n    const width = 256;\n    const height = 256;\n    const size = width * height;\n    const data = new Uint8Array(4 * size);\n    for (let x = 0; x < width; x++) {\n        for (let y = 0; y < height; y++) {\n            const i = x + width * y;\n            let color;\n            if (classification[x]) {\n                color = classification[x];\n            }\n            else if (classification[x % 32]) {\n                color = classification[x % 32];\n            }\n            else {\n                color = classification.DEFAULT;\n            }\n            data[4 * i + 0] = 255 * color.x;\n            data[4 * i + 1] = 255 * color.y;\n            data[4 * i + 2] = 255 * color.z;\n            data[4 * i + 3] = 255 * color.w;\n        }\n    }\n    const texture = new three__WEBPACK_IMPORTED_MODULE_0__.DataTexture(data, width, height, three__WEBPACK_IMPORTED_MODULE_0__.RGBAFormat);\n    texture.magFilter = three__WEBPACK_IMPORTED_MODULE_0__.NearestFilter;\n    texture.needsUpdate = true;\n    return texture;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbWF0ZXJpYWxzL3RleHR1cmUtZ2VuZXJhdGlvbi50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3BvdHJlZS8uL3NyYy9tYXRlcmlhbHMvdGV4dHVyZS1nZW5lcmF0aW9uLnRzPzFlZTciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2FudmFzVGV4dHVyZSwgRGF0YVRleHR1cmUsIExpbmVhckZpbHRlciwgTmVhcmVzdEZpbHRlciwgUkdCQUZvcm1hdCwgfSBmcm9tICd0aHJlZSc7XG5leHBvcnQgZnVuY3Rpb24gZ2VuZXJhdGVEYXRhVGV4dHVyZSh3aWR0aCwgaGVpZ2h0LCBjb2xvcikge1xuICAgIGNvbnN0IHNpemUgPSB3aWR0aCAqIGhlaWdodDtcbiAgICBjb25zdCBkYXRhID0gbmV3IFVpbnQ4QXJyYXkoNCAqIHNpemUpO1xuICAgIGNvbnN0IHIgPSBNYXRoLmZsb29yKGNvbG9yLnIgKiAyNTUpO1xuICAgIGNvbnN0IGcgPSBNYXRoLmZsb29yKGNvbG9yLmcgKiAyNTUpO1xuICAgIGNvbnN0IGIgPSBNYXRoLmZsb29yKGNvbG9yLmIgKiAyNTUpO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgc2l6ZTsgaSsrKSB7XG4gICAgICAgIGRhdGFbaSAqIDNdID0gcjtcbiAgICAgICAgZGF0YVtpICogMyArIDFdID0gZztcbiAgICAgICAgZGF0YVtpICogMyArIDJdID0gYjtcbiAgICB9XG4gICAgY29uc3QgdGV4dHVyZSA9IG5ldyBEYXRhVGV4dHVyZShkYXRhLCB3aWR0aCwgaGVpZ2h0LCBSR0JBRm9ybWF0KTtcbiAgICB0ZXh0dXJlLm5lZWRzVXBkYXRlID0gdHJ1ZTtcbiAgICB0ZXh0dXJlLm1hZ0ZpbHRlciA9IE5lYXJlc3RGaWx0ZXI7XG4gICAgcmV0dXJuIHRleHR1cmU7XG59XG5leHBvcnQgZnVuY3Rpb24gZ2VuZXJhdGVHcmFkaWVudFRleHR1cmUoZ3JhZGllbnQpIHtcbiAgICBjb25zdCBzaXplID0gNjQ7XG4gICAgY29uc3QgY2FudmFzID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnY2FudmFzJyk7XG4gICAgY2FudmFzLndpZHRoID0gc2l6ZTtcbiAgICBjYW52YXMuaGVpZ2h0ID0gc2l6ZTtcbiAgICBjb25zdCBjb250ZXh0ID0gY2FudmFzLmdldENvbnRleHQoJzJkJyk7XG4gICAgY29udGV4dC5yZWN0KDAsIDAsIHNpemUsIHNpemUpO1xuICAgIGNvbnN0IGN0eEdyYWRpZW50ID0gY29udGV4dC5jcmVhdGVMaW5lYXJHcmFkaWVudCgwLCAwLCBzaXplLCBzaXplKTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGdyYWRpZW50Lmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGNvbnN0IHN0ZXAgPSBncmFkaWVudFtpXTtcbiAgICAgICAgY3R4R3JhZGllbnQuYWRkQ29sb3JTdG9wKHN0ZXBbMF0sIGAjJHtzdGVwWzFdLmdldEhleFN0cmluZygpfWApO1xuICAgIH1cbiAgICBjb250ZXh0LmZpbGxTdHlsZSA9IGN0eEdyYWRpZW50O1xuICAgIGNvbnRleHQuZmlsbCgpO1xuICAgIGNvbnN0IHRleHR1cmUgPSBuZXcgQ2FudmFzVGV4dHVyZShjYW52YXMpO1xuICAgIHRleHR1cmUubmVlZHNVcGRhdGUgPSB0cnVlO1xuICAgIHRleHR1cmUubWluRmlsdGVyID0gTGluZWFyRmlsdGVyO1xuICAgIC8vIHRleHR1cmVJbWFnZSA9IHRleHR1cmUuaW1hZ2U7XG4gICAgcmV0dXJuIHRleHR1cmU7XG59XG5leHBvcnQgZnVuY3Rpb24gZ2VuZXJhdGVDbGFzc2lmaWNhdGlvblRleHR1cmUoY2xhc3NpZmljYXRpb24pIHtcbiAgICBjb25zdCB3aWR0aCA9IDI1NjtcbiAgICBjb25zdCBoZWlnaHQgPSAyNTY7XG4gICAgY29uc3Qgc2l6ZSA9IHdpZHRoICogaGVpZ2h0O1xuICAgIGNvbnN0IGRhdGEgPSBuZXcgVWludDhBcnJheSg0ICogc2l6ZSk7XG4gICAgZm9yIChsZXQgeCA9IDA7IHggPCB3aWR0aDsgeCsrKSB7XG4gICAgICAgIGZvciAobGV0IHkgPSAwOyB5IDwgaGVpZ2h0OyB5KyspIHtcbiAgICAgICAgICAgIGNvbnN0IGkgPSB4ICsgd2lkdGggKiB5O1xuICAgICAgICAgICAgbGV0IGNvbG9yO1xuICAgICAgICAgICAgaWYgKGNsYXNzaWZpY2F0aW9uW3hdKSB7XG4gICAgICAgICAgICAgICAgY29sb3IgPSBjbGFzc2lmaWNhdGlvblt4XTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKGNsYXNzaWZpY2F0aW9uW3ggJSAzMl0pIHtcbiAgICAgICAgICAgICAgICBjb2xvciA9IGNsYXNzaWZpY2F0aW9uW3ggJSAzMl07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBjb2xvciA9IGNsYXNzaWZpY2F0aW9uLkRFRkFVTFQ7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBkYXRhWzQgKiBpICsgMF0gPSAyNTUgKiBjb2xvci54O1xuICAgICAgICAgICAgZGF0YVs0ICogaSArIDFdID0gMjU1ICogY29sb3IueTtcbiAgICAgICAgICAgIGRhdGFbNCAqIGkgKyAyXSA9IDI1NSAqIGNvbG9yLno7XG4gICAgICAgICAgICBkYXRhWzQgKiBpICsgM10gPSAyNTUgKiBjb2xvci53O1xuICAgICAgICB9XG4gICAgfVxuICAgIGNvbnN0IHRleHR1cmUgPSBuZXcgRGF0YVRleHR1cmUoZGF0YSwgd2lkdGgsIGhlaWdodCwgUkdCQUZvcm1hdCk7XG4gICAgdGV4dHVyZS5tYWdGaWx0ZXIgPSBOZWFyZXN0RmlsdGVyO1xuICAgIHRleHR1cmUubmVlZHNVcGRhdGUgPSB0cnVlO1xuICAgIHJldHVybiB0ZXh0dXJlO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/materials/texture-generation.ts\n");

/***/ }),

/***/ "./src/materials/types.ts":
/*!********************************!*\
  !*** ./src/materials/types.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbWF0ZXJpYWxzL3R5cGVzLnRzIiwibWFwcGluZ3MiOiI7QUFBQSIsInNvdXJjZXMiOlsid2VicGFjazovL3BvdHJlZS8uL3NyYy9tYXRlcmlhbHMvdHlwZXMudHM/MzhiZCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQge307XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/materials/types.ts\n");

/***/ }),

/***/ "./src/point-attributes.ts":
/*!*********************************!*\
  !*** ./src/point-attributes.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   POINT_ATTRIBUTES: () => (/* binding */ POINT_ATTRIBUTES),\n/* harmony export */   POINT_ATTRIBUTE_TYPES: () => (/* binding */ POINT_ATTRIBUTE_TYPES),\n/* harmony export */   PointAttributeName: () => (/* binding */ PointAttributeName),\n/* harmony export */   PointAttributes: () => (/* binding */ PointAttributes)\n/* harmony export */ });\n// -------------------------------------------------------------------------------------------------\n// Converted to Typescript and adapted from https://github.com/potree/potree\n// -------------------------------------------------------------------------------------------------\nvar PointAttributeName;\n(function (PointAttributeName) {\n    PointAttributeName[PointAttributeName[\"POSITION_CARTESIAN\"] = 0] = \"POSITION_CARTESIAN\";\n    PointAttributeName[PointAttributeName[\"COLOR_PACKED\"] = 1] = \"COLOR_PACKED\";\n    PointAttributeName[PointAttributeName[\"COLOR_FLOATS_1\"] = 2] = \"COLOR_FLOATS_1\";\n    PointAttributeName[PointAttributeName[\"COLOR_FLOATS_255\"] = 3] = \"COLOR_FLOATS_255\";\n    PointAttributeName[PointAttributeName[\"NORMAL_FLOATS\"] = 4] = \"NORMAL_FLOATS\";\n    PointAttributeName[PointAttributeName[\"FILLER\"] = 5] = \"FILLER\";\n    PointAttributeName[PointAttributeName[\"INTENSITY\"] = 6] = \"INTENSITY\";\n    PointAttributeName[PointAttributeName[\"CLASSIFICATION\"] = 7] = \"CLASSIFICATION\";\n    PointAttributeName[PointAttributeName[\"NORMAL_SPHEREMAPPED\"] = 8] = \"NORMAL_SPHEREMAPPED\";\n    PointAttributeName[PointAttributeName[\"NORMAL_OCT16\"] = 9] = \"NORMAL_OCT16\";\n    PointAttributeName[PointAttributeName[\"NORMAL\"] = 10] = \"NORMAL\";\n})(PointAttributeName || (PointAttributeName = {}));\nconst POINT_ATTRIBUTE_TYPES = {\n    DATA_TYPE_DOUBLE: { ordinal: 0, size: 8 },\n    DATA_TYPE_FLOAT: { ordinal: 1, size: 4 },\n    DATA_TYPE_INT8: { ordinal: 2, size: 1 },\n    DATA_TYPE_UINT8: { ordinal: 3, size: 1 },\n    DATA_TYPE_INT16: { ordinal: 4, size: 2 },\n    DATA_TYPE_UINT16: { ordinal: 5, size: 2 },\n    DATA_TYPE_INT32: { ordinal: 6, size: 4 },\n    DATA_TYPE_UINT32: { ordinal: 7, size: 4 },\n    DATA_TYPE_INT64: { ordinal: 8, size: 8 },\n    DATA_TYPE_UINT64: { ordinal: 9, size: 8 },\n};\nfunction makePointAttribute(name, type, numElements) {\n    return {\n        name,\n        type,\n        numElements,\n        byteSize: numElements * type.size,\n    };\n}\nconst RGBA_PACKED = makePointAttribute(PointAttributeName.COLOR_PACKED, POINT_ATTRIBUTE_TYPES.DATA_TYPE_INT8, 4);\nconst POINT_ATTRIBUTES = {\n    POSITION_CARTESIAN: makePointAttribute(PointAttributeName.POSITION_CARTESIAN, POINT_ATTRIBUTE_TYPES.DATA_TYPE_FLOAT, 3),\n    RGBA_PACKED,\n    COLOR_PACKED: RGBA_PACKED,\n    RGB_PACKED: makePointAttribute(PointAttributeName.COLOR_PACKED, POINT_ATTRIBUTE_TYPES.DATA_TYPE_INT8, 3),\n    NORMAL_FLOATS: makePointAttribute(PointAttributeName.NORMAL_FLOATS, POINT_ATTRIBUTE_TYPES.DATA_TYPE_FLOAT, 3),\n    FILLER_1B: makePointAttribute(PointAttributeName.FILLER, POINT_ATTRIBUTE_TYPES.DATA_TYPE_UINT8, 1),\n    INTENSITY: makePointAttribute(PointAttributeName.INTENSITY, POINT_ATTRIBUTE_TYPES.DATA_TYPE_UINT16, 1),\n    CLASSIFICATION: makePointAttribute(PointAttributeName.CLASSIFICATION, POINT_ATTRIBUTE_TYPES.DATA_TYPE_UINT8, 1),\n    NORMAL_SPHEREMAPPED: makePointAttribute(PointAttributeName.NORMAL_SPHEREMAPPED, POINT_ATTRIBUTE_TYPES.DATA_TYPE_UINT8, 2),\n    NORMAL_OCT16: makePointAttribute(PointAttributeName.NORMAL_OCT16, POINT_ATTRIBUTE_TYPES.DATA_TYPE_UINT8, 2),\n    NORMAL: makePointAttribute(PointAttributeName.NORMAL, POINT_ATTRIBUTE_TYPES.DATA_TYPE_FLOAT, 3),\n};\nclass PointAttributes {\n    constructor(pointAttributeNames = []) {\n        this.attributes = [];\n        this.byteSize = 0;\n        this.size = 0;\n        for (let i = 0; i < pointAttributeNames.length; i++) {\n            const pointAttributeName = pointAttributeNames[i];\n            const pointAttribute = POINT_ATTRIBUTES[pointAttributeName];\n            this.attributes.push(pointAttribute);\n            this.byteSize += pointAttribute.byteSize;\n            this.size++;\n        }\n    }\n    add(pointAttribute) {\n        this.attributes.push(pointAttribute);\n        this.byteSize += pointAttribute.byteSize;\n        this.size++;\n    }\n    hasColors() {\n        return this.attributes.find(isColorAttribute) !== undefined;\n    }\n    hasNormals() {\n        return this.attributes.find(isNormalAttribute) !== undefined;\n    }\n}\nfunction isColorAttribute({ name }) {\n    return name === PointAttributeName.COLOR_PACKED;\n}\nfunction isNormalAttribute({ name }) {\n    return (name === PointAttributeName.NORMAL_SPHEREMAPPED ||\n        name === PointAttributeName.NORMAL_FLOATS ||\n        name === PointAttributeName.NORMAL ||\n        name === PointAttributeName.NORMAL_OCT16);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcG9pbnQtYXR0cmlidXRlcy50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3RyZWUvLi9zcmMvcG9pbnQtYXR0cmlidXRlcy50cz9lMDMyIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIENvbnZlcnRlZCB0byBUeXBlc2NyaXB0IGFuZCBhZGFwdGVkIGZyb20gaHR0cHM6Ly9naXRodWIuY29tL3BvdHJlZS9wb3RyZWVcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbmV4cG9ydCB2YXIgUG9pbnRBdHRyaWJ1dGVOYW1lO1xuKGZ1bmN0aW9uIChQb2ludEF0dHJpYnV0ZU5hbWUpIHtcbiAgICBQb2ludEF0dHJpYnV0ZU5hbWVbUG9pbnRBdHRyaWJ1dGVOYW1lW1wiUE9TSVRJT05fQ0FSVEVTSUFOXCJdID0gMF0gPSBcIlBPU0lUSU9OX0NBUlRFU0lBTlwiO1xuICAgIFBvaW50QXR0cmlidXRlTmFtZVtQb2ludEF0dHJpYnV0ZU5hbWVbXCJDT0xPUl9QQUNLRURcIl0gPSAxXSA9IFwiQ09MT1JfUEFDS0VEXCI7XG4gICAgUG9pbnRBdHRyaWJ1dGVOYW1lW1BvaW50QXR0cmlidXRlTmFtZVtcIkNPTE9SX0ZMT0FUU18xXCJdID0gMl0gPSBcIkNPTE9SX0ZMT0FUU18xXCI7XG4gICAgUG9pbnRBdHRyaWJ1dGVOYW1lW1BvaW50QXR0cmlidXRlTmFtZVtcIkNPTE9SX0ZMT0FUU18yNTVcIl0gPSAzXSA9IFwiQ09MT1JfRkxPQVRTXzI1NVwiO1xuICAgIFBvaW50QXR0cmlidXRlTmFtZVtQb2ludEF0dHJpYnV0ZU5hbWVbXCJOT1JNQUxfRkxPQVRTXCJdID0gNF0gPSBcIk5PUk1BTF9GTE9BVFNcIjtcbiAgICBQb2ludEF0dHJpYnV0ZU5hbWVbUG9pbnRBdHRyaWJ1dGVOYW1lW1wiRklMTEVSXCJdID0gNV0gPSBcIkZJTExFUlwiO1xuICAgIFBvaW50QXR0cmlidXRlTmFtZVtQb2ludEF0dHJpYnV0ZU5hbWVbXCJJTlRFTlNJVFlcIl0gPSA2XSA9IFwiSU5URU5TSVRZXCI7XG4gICAgUG9pbnRBdHRyaWJ1dGVOYW1lW1BvaW50QXR0cmlidXRlTmFtZVtcIkNMQVNTSUZJQ0FUSU9OXCJdID0gN10gPSBcIkNMQVNTSUZJQ0FUSU9OXCI7XG4gICAgUG9pbnRBdHRyaWJ1dGVOYW1lW1BvaW50QXR0cmlidXRlTmFtZVtcIk5PUk1BTF9TUEhFUkVNQVBQRURcIl0gPSA4XSA9IFwiTk9STUFMX1NQSEVSRU1BUFBFRFwiO1xuICAgIFBvaW50QXR0cmlidXRlTmFtZVtQb2ludEF0dHJpYnV0ZU5hbWVbXCJOT1JNQUxfT0NUMTZcIl0gPSA5XSA9IFwiTk9STUFMX09DVDE2XCI7XG4gICAgUG9pbnRBdHRyaWJ1dGVOYW1lW1BvaW50QXR0cmlidXRlTmFtZVtcIk5PUk1BTFwiXSA9IDEwXSA9IFwiTk9STUFMXCI7XG59KShQb2ludEF0dHJpYnV0ZU5hbWUgfHwgKFBvaW50QXR0cmlidXRlTmFtZSA9IHt9KSk7XG5leHBvcnQgY29uc3QgUE9JTlRfQVRUUklCVVRFX1RZUEVTID0ge1xuICAgIERBVEFfVFlQRV9ET1VCTEU6IHsgb3JkaW5hbDogMCwgc2l6ZTogOCB9LFxuICAgIERBVEFfVFlQRV9GTE9BVDogeyBvcmRpbmFsOiAxLCBzaXplOiA0IH0sXG4gICAgREFUQV9UWVBFX0lOVDg6IHsgb3JkaW5hbDogMiwgc2l6ZTogMSB9LFxuICAgIERBVEFfVFlQRV9VSU5UODogeyBvcmRpbmFsOiAzLCBzaXplOiAxIH0sXG4gICAgREFUQV9UWVBFX0lOVDE2OiB7IG9yZGluYWw6IDQsIHNpemU6IDIgfSxcbiAgICBEQVRBX1RZUEVfVUlOVDE2OiB7IG9yZGluYWw6IDUsIHNpemU6IDIgfSxcbiAgICBEQVRBX1RZUEVfSU5UMzI6IHsgb3JkaW5hbDogNiwgc2l6ZTogNCB9LFxuICAgIERBVEFfVFlQRV9VSU5UMzI6IHsgb3JkaW5hbDogNywgc2l6ZTogNCB9LFxuICAgIERBVEFfVFlQRV9JTlQ2NDogeyBvcmRpbmFsOiA4LCBzaXplOiA4IH0sXG4gICAgREFUQV9UWVBFX1VJTlQ2NDogeyBvcmRpbmFsOiA5LCBzaXplOiA4IH0sXG59O1xuZnVuY3Rpb24gbWFrZVBvaW50QXR0cmlidXRlKG5hbWUsIHR5cGUsIG51bUVsZW1lbnRzKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgbmFtZSxcbiAgICAgICAgdHlwZSxcbiAgICAgICAgbnVtRWxlbWVudHMsXG4gICAgICAgIGJ5dGVTaXplOiBudW1FbGVtZW50cyAqIHR5cGUuc2l6ZSxcbiAgICB9O1xufVxuY29uc3QgUkdCQV9QQUNLRUQgPSBtYWtlUG9pbnRBdHRyaWJ1dGUoUG9pbnRBdHRyaWJ1dGVOYW1lLkNPTE9SX1BBQ0tFRCwgUE9JTlRfQVRUUklCVVRFX1RZUEVTLkRBVEFfVFlQRV9JTlQ4LCA0KTtcbmV4cG9ydCBjb25zdCBQT0lOVF9BVFRSSUJVVEVTID0ge1xuICAgIFBPU0lUSU9OX0NBUlRFU0lBTjogbWFrZVBvaW50QXR0cmlidXRlKFBvaW50QXR0cmlidXRlTmFtZS5QT1NJVElPTl9DQVJURVNJQU4sIFBPSU5UX0FUVFJJQlVURV9UWVBFUy5EQVRBX1RZUEVfRkxPQVQsIDMpLFxuICAgIFJHQkFfUEFDS0VELFxuICAgIENPTE9SX1BBQ0tFRDogUkdCQV9QQUNLRUQsXG4gICAgUkdCX1BBQ0tFRDogbWFrZVBvaW50QXR0cmlidXRlKFBvaW50QXR0cmlidXRlTmFtZS5DT0xPUl9QQUNLRUQsIFBPSU5UX0FUVFJJQlVURV9UWVBFUy5EQVRBX1RZUEVfSU5UOCwgMyksXG4gICAgTk9STUFMX0ZMT0FUUzogbWFrZVBvaW50QXR0cmlidXRlKFBvaW50QXR0cmlidXRlTmFtZS5OT1JNQUxfRkxPQVRTLCBQT0lOVF9BVFRSSUJVVEVfVFlQRVMuREFUQV9UWVBFX0ZMT0FULCAzKSxcbiAgICBGSUxMRVJfMUI6IG1ha2VQb2ludEF0dHJpYnV0ZShQb2ludEF0dHJpYnV0ZU5hbWUuRklMTEVSLCBQT0lOVF9BVFRSSUJVVEVfVFlQRVMuREFUQV9UWVBFX1VJTlQ4LCAxKSxcbiAgICBJTlRFTlNJVFk6IG1ha2VQb2ludEF0dHJpYnV0ZShQb2ludEF0dHJpYnV0ZU5hbWUuSU5URU5TSVRZLCBQT0lOVF9BVFRSSUJVVEVfVFlQRVMuREFUQV9UWVBFX1VJTlQxNiwgMSksXG4gICAgQ0xBU1NJRklDQVRJT046IG1ha2VQb2ludEF0dHJpYnV0ZShQb2ludEF0dHJpYnV0ZU5hbWUuQ0xBU1NJRklDQVRJT04sIFBPSU5UX0FUVFJJQlVURV9UWVBFUy5EQVRBX1RZUEVfVUlOVDgsIDEpLFxuICAgIE5PUk1BTF9TUEhFUkVNQVBQRUQ6IG1ha2VQb2ludEF0dHJpYnV0ZShQb2ludEF0dHJpYnV0ZU5hbWUuTk9STUFMX1NQSEVSRU1BUFBFRCwgUE9JTlRfQVRUUklCVVRFX1RZUEVTLkRBVEFfVFlQRV9VSU5UOCwgMiksXG4gICAgTk9STUFMX09DVDE2OiBtYWtlUG9pbnRBdHRyaWJ1dGUoUG9pbnRBdHRyaWJ1dGVOYW1lLk5PUk1BTF9PQ1QxNiwgUE9JTlRfQVRUUklCVVRFX1RZUEVTLkRBVEFfVFlQRV9VSU5UOCwgMiksXG4gICAgTk9STUFMOiBtYWtlUG9pbnRBdHRyaWJ1dGUoUG9pbnRBdHRyaWJ1dGVOYW1lLk5PUk1BTCwgUE9JTlRfQVRUUklCVVRFX1RZUEVTLkRBVEFfVFlQRV9GTE9BVCwgMyksXG59O1xuZXhwb3J0IGNsYXNzIFBvaW50QXR0cmlidXRlcyB7XG4gICAgY29uc3RydWN0b3IocG9pbnRBdHRyaWJ1dGVOYW1lcyA9IFtdKSB7XG4gICAgICAgIHRoaXMuYXR0cmlidXRlcyA9IFtdO1xuICAgICAgICB0aGlzLmJ5dGVTaXplID0gMDtcbiAgICAgICAgdGhpcy5zaXplID0gMDtcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBwb2ludEF0dHJpYnV0ZU5hbWVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBjb25zdCBwb2ludEF0dHJpYnV0ZU5hbWUgPSBwb2ludEF0dHJpYnV0ZU5hbWVzW2ldO1xuICAgICAgICAgICAgY29uc3QgcG9pbnRBdHRyaWJ1dGUgPSBQT0lOVF9BVFRSSUJVVEVTW3BvaW50QXR0cmlidXRlTmFtZV07XG4gICAgICAgICAgICB0aGlzLmF0dHJpYnV0ZXMucHVzaChwb2ludEF0dHJpYnV0ZSk7XG4gICAgICAgICAgICB0aGlzLmJ5dGVTaXplICs9IHBvaW50QXR0cmlidXRlLmJ5dGVTaXplO1xuICAgICAgICAgICAgdGhpcy5zaXplKys7XG4gICAgICAgIH1cbiAgICB9XG4gICAgYWRkKHBvaW50QXR0cmlidXRlKSB7XG4gICAgICAgIHRoaXMuYXR0cmlidXRlcy5wdXNoKHBvaW50QXR0cmlidXRlKTtcbiAgICAgICAgdGhpcy5ieXRlU2l6ZSArPSBwb2ludEF0dHJpYnV0ZS5ieXRlU2l6ZTtcbiAgICAgICAgdGhpcy5zaXplKys7XG4gICAgfVxuICAgIGhhc0NvbG9ycygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuYXR0cmlidXRlcy5maW5kKGlzQ29sb3JBdHRyaWJ1dGUpICE9PSB1bmRlZmluZWQ7XG4gICAgfVxuICAgIGhhc05vcm1hbHMoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmF0dHJpYnV0ZXMuZmluZChpc05vcm1hbEF0dHJpYnV0ZSkgIT09IHVuZGVmaW5lZDtcbiAgICB9XG59XG5mdW5jdGlvbiBpc0NvbG9yQXR0cmlidXRlKHsgbmFtZSB9KSB7XG4gICAgcmV0dXJuIG5hbWUgPT09IFBvaW50QXR0cmlidXRlTmFtZS5DT0xPUl9QQUNLRUQ7XG59XG5mdW5jdGlvbiBpc05vcm1hbEF0dHJpYnV0ZSh7IG5hbWUgfSkge1xuICAgIHJldHVybiAobmFtZSA9PT0gUG9pbnRBdHRyaWJ1dGVOYW1lLk5PUk1BTF9TUEhFUkVNQVBQRUQgfHxcbiAgICAgICAgbmFtZSA9PT0gUG9pbnRBdHRyaWJ1dGVOYW1lLk5PUk1BTF9GTE9BVFMgfHxcbiAgICAgICAgbmFtZSA9PT0gUG9pbnRBdHRyaWJ1dGVOYW1lLk5PUk1BTCB8fFxuICAgICAgICBuYW1lID09PSBQb2ludEF0dHJpYnV0ZU5hbWUuTk9STUFMX09DVDE2KTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/point-attributes.ts\n");

/***/ }),

/***/ "./src/point-cloud-octree-geometry-node.ts":
/*!*************************************************!*\
  !*** ./src/point-cloud-octree-geometry-node.ts ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PointCloudOctreeGeometryNode: () => (/* binding */ PointCloudOctreeGeometryNode)\n/* harmony export */ });\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ \"three\");\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(three__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _utils_bounds__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/bounds */ \"./src/utils/bounds.ts\");\n/* harmony import */ var _utils_utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/utils */ \"./src/utils/utils.ts\");\n/**\n * Adapted from Potree.js http://potree.org\n * Potree License: https://github.com/potree/potree/blob/1.5/LICENSE\n */\n\n\n\nconst NODE_STRIDE = 5;\nclass PointCloudOctreeGeometryNode extends three__WEBPACK_IMPORTED_MODULE_0__.EventDispatcher {\n    constructor(name, pcoGeometry, boundingBox) {\n        super();\n        this.id = PointCloudOctreeGeometryNode.idCount++;\n        this.level = 0;\n        this.spacing = 0;\n        this.hasChildren = false;\n        this.children = [\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n            null,\n        ];\n        this.mean = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3();\n        this.numPoints = 0;\n        this.loaded = false;\n        this.loading = false;\n        this.failed = false;\n        this.parent = null;\n        this.oneTimeDisposeHandlers = [];\n        this.isLeafNode = true;\n        this.isTreeNode = false;\n        this.isGeometryNode = true;\n        this.name = name;\n        this.index = (0,_utils_utils__WEBPACK_IMPORTED_MODULE_2__.getIndexFromName)(name);\n        this.pcoGeometry = pcoGeometry;\n        this.boundingBox = boundingBox;\n        this.tightBoundingBox = boundingBox.clone();\n        this.boundingSphere = boundingBox.getBoundingSphere(new three__WEBPACK_IMPORTED_MODULE_0__.Sphere());\n    }\n    dispose() {\n        if (!this.geometry || !this.parent) {\n            return;\n        }\n        this.geometry.dispose();\n        this.geometry = undefined;\n        this.loaded = false;\n        this.oneTimeDisposeHandlers.forEach(handler => handler());\n        this.oneTimeDisposeHandlers = [];\n    }\n    /**\n     * Gets the url of the binary file for this node.\n     */\n    getUrl() {\n        const geometry = this.pcoGeometry;\n        const version = geometry.loader.version;\n        const pathParts = [geometry.octreeDir];\n        if (geometry.loader && version.equalOrHigher('1.5')) {\n            pathParts.push(this.getHierarchyBaseUrl());\n            pathParts.push(this.name);\n        }\n        else if (version.equalOrHigher('1.4')) {\n            pathParts.push(this.name);\n        }\n        else if (version.upTo('1.3')) {\n            pathParts.push(this.name);\n        }\n        return pathParts.join('/');\n    }\n    /**\n     * Gets the url of the hierarchy file for this node.\n     */\n    getHierarchyUrl() {\n        return `${this.pcoGeometry.octreeDir}/${this.getHierarchyBaseUrl()}/${this.name}.hrc`;\n    }\n    /**\n     * Adds the specified node as a child of the current node.\n     *\n     * @param child\n     *    The node which is to be added as a child.\n     */\n    addChild(child) {\n        this.children[child.index] = child;\n        this.isLeafNode = false;\n        child.parent = this;\n    }\n    /**\n     * Calls the specified callback for the current node (if includeSelf is set to true) and all its\n     * children.\n     *\n     * @param cb\n     *    The function which is to be called for each node.\n     */\n    traverse(cb, includeSelf = true) {\n        const stack = includeSelf ? [this] : [];\n        let current;\n        while ((current = stack.pop()) !== undefined) {\n            cb(current);\n            for (const child of current.children) {\n                if (child !== null) {\n                    stack.push(child);\n                }\n            }\n        }\n    }\n    load() {\n        if (!this.canLoad()) {\n            return Promise.resolve();\n        }\n        this.loading = true;\n        this.pcoGeometry.numNodesLoading++;\n        this.pcoGeometry.needsUpdate = true;\n        let promise;\n        if (this.pcoGeometry.loader.version.equalOrHigher('1.5') &&\n            this.level % this.pcoGeometry.hierarchyStepSize === 0 &&\n            this.hasChildren) {\n            promise = this.loadHierachyThenPoints();\n        }\n        else {\n            promise = this.loadPoints();\n        }\n        return promise.catch(reason => {\n            this.loading = false;\n            this.failed = true;\n            this.pcoGeometry.numNodesLoading--;\n            throw reason;\n        });\n    }\n    canLoad() {\n        return (!this.loading &&\n            !this.loaded &&\n            !this.pcoGeometry.disposed &&\n            !this.pcoGeometry.loader.disposed &&\n            this.pcoGeometry.numNodesLoading < this.pcoGeometry.maxNumNodesLoading);\n    }\n    loadPoints() {\n        this.pcoGeometry.needsUpdate = true;\n        return this.pcoGeometry.loader.load(this);\n    }\n    loadHierachyThenPoints() {\n        if (this.level % this.pcoGeometry.hierarchyStepSize !== 0) {\n            return Promise.resolve();\n        }\n        return Promise.resolve(this.pcoGeometry.loader.getUrl(this.getHierarchyUrl()))\n            .then(url => this.pcoGeometry.xhrRequest(url, { mode: 'cors' }))\n            .then(res => (0,_utils_utils__WEBPACK_IMPORTED_MODULE_2__.handleFailedRequest)(res))\n            .then(okRes => okRes.arrayBuffer())\n            .then(buffer => (0,_utils_utils__WEBPACK_IMPORTED_MODULE_2__.handleEmptyBuffer)(buffer))\n            .then(okBuffer => this.loadHierarchy(this, okBuffer));\n    }\n    /**\n     * Gets the url of the folder where the hierarchy is, relative to the octreeDir.\n     */\n    getHierarchyBaseUrl() {\n        const hierarchyStepSize = this.pcoGeometry.hierarchyStepSize;\n        const indices = this.name.substr(1);\n        const numParts = Math.floor(indices.length / hierarchyStepSize);\n        let path = 'r/';\n        for (let i = 0; i < numParts; i++) {\n            path += `${indices.substr(i * hierarchyStepSize, hierarchyStepSize)}/`;\n        }\n        return path.slice(0, -1);\n    }\n    // tslint:disable:no-bitwise\n    loadHierarchy(node, buffer) {\n        const view = new DataView(buffer);\n        const firstNodeData = this.getNodeData(node.name, 0, view);\n        node.numPoints = firstNodeData.numPoints;\n        // Nodes which need be visited.\n        const stack = [firstNodeData];\n        // Nodes which have already been decoded. We will take nodes from the stack and place them here.\n        const decoded = [];\n        let offset = NODE_STRIDE;\n        while (stack.length > 0) {\n            const stackNodeData = stack.shift();\n            // From the last bit, all the way to the 8th one from the right.\n            let mask = 1;\n            for (let i = 0; i < 8 && offset + 1 < buffer.byteLength; i++) {\n                if ((stackNodeData.children & mask) !== 0) {\n                    const nodeData = this.getNodeData(stackNodeData.name + i, offset, view);\n                    decoded.push(nodeData); // Node is decoded.\n                    stack.push(nodeData); // Need to check its children.\n                    offset += NODE_STRIDE; // Move over to the next node in the buffer.\n                }\n                mask = mask * 2;\n            }\n        }\n        node.pcoGeometry.needsUpdate = true;\n        // Map containing all the nodes.\n        const nodes = new Map();\n        nodes.set(node.name, node);\n        decoded.forEach(nodeData => this.addNode(nodeData, node.pcoGeometry, nodes));\n        node.loadPoints();\n    }\n    // tslint:enable:no-bitwise\n    getNodeData(name, offset, view) {\n        const children = view.getUint8(offset);\n        const numPoints = view.getUint32(offset + 1, true);\n        return { children: children, numPoints: numPoints, name };\n    }\n    addNode({ name, numPoints, children }, pco, nodes) {\n        const index = (0,_utils_utils__WEBPACK_IMPORTED_MODULE_2__.getIndexFromName)(name);\n        const parentName = name.substring(0, name.length - 1);\n        const parentNode = nodes.get(parentName);\n        const level = name.length - 1;\n        const boundingBox = (0,_utils_bounds__WEBPACK_IMPORTED_MODULE_1__.createChildAABB)(parentNode.boundingBox, index);\n        const node = new PointCloudOctreeGeometryNode(name, pco, boundingBox);\n        node.level = level;\n        node.numPoints = numPoints;\n        node.hasChildren = children > 0;\n        node.spacing = pco.spacing / Math.pow(2, level);\n        parentNode.addChild(node);\n        nodes.set(name, node);\n    }\n}\nPointCloudOctreeGeometryNode.idCount = 0;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/point-cloud-octree-geometry-node.ts\n");

/***/ }),

/***/ "./src/point-cloud-octree-geometry.ts":
/*!********************************************!*\
  !*** ./src/point-cloud-octree-geometry.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PointCloudOctreeGeometry: () => (/* binding */ PointCloudOctreeGeometry)\n/* harmony export */ });\n/* harmony import */ var _point_attributes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./point-attributes */ \"./src/point-attributes.ts\");\n\nclass PointCloudOctreeGeometry {\n    constructor(loader, boundingBox, tightBoundingBox, offset, xhrRequest) {\n        this.loader = loader;\n        this.boundingBox = boundingBox;\n        this.tightBoundingBox = tightBoundingBox;\n        this.offset = offset;\n        this.xhrRequest = xhrRequest;\n        this.disposed = false;\n        this.needsUpdate = true;\n        this.octreeDir = '';\n        this.hierarchyStepSize = -1;\n        this.nodes = {};\n        this.numNodesLoading = 0;\n        this.maxNumNodesLoading = 3;\n        this.spacing = 0;\n        this.pointAttributes = new _point_attributes__WEBPACK_IMPORTED_MODULE_0__.PointAttributes([]);\n        this.projection = null;\n        this.url = null;\n    }\n    dispose() {\n        this.loader.dispose();\n        this.root.traverse(node => node.dispose());\n        this.disposed = true;\n    }\n    addNodeLoadedCallback(callback) {\n        this.loader.callbacks.push(callback);\n    }\n    clearNodeLoadedCallbacks() {\n        this.loader.callbacks = [];\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcG9pbnQtY2xvdWQtb2N0cmVlLWdlb21ldHJ5LnRzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3BvdHJlZS8uL3NyYy9wb2ludC1jbG91ZC1vY3RyZWUtZ2VvbWV0cnkudHM/OWY4MCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQb2ludEF0dHJpYnV0ZXMgfSBmcm9tICcuL3BvaW50LWF0dHJpYnV0ZXMnO1xuZXhwb3J0IGNsYXNzIFBvaW50Q2xvdWRPY3RyZWVHZW9tZXRyeSB7XG4gICAgY29uc3RydWN0b3IobG9hZGVyLCBib3VuZGluZ0JveCwgdGlnaHRCb3VuZGluZ0JveCwgb2Zmc2V0LCB4aHJSZXF1ZXN0KSB7XG4gICAgICAgIHRoaXMubG9hZGVyID0gbG9hZGVyO1xuICAgICAgICB0aGlzLmJvdW5kaW5nQm94ID0gYm91bmRpbmdCb3g7XG4gICAgICAgIHRoaXMudGlnaHRCb3VuZGluZ0JveCA9IHRpZ2h0Qm91bmRpbmdCb3g7XG4gICAgICAgIHRoaXMub2Zmc2V0ID0gb2Zmc2V0O1xuICAgICAgICB0aGlzLnhoclJlcXVlc3QgPSB4aHJSZXF1ZXN0O1xuICAgICAgICB0aGlzLmRpc3Bvc2VkID0gZmFsc2U7XG4gICAgICAgIHRoaXMubmVlZHNVcGRhdGUgPSB0cnVlO1xuICAgICAgICB0aGlzLm9jdHJlZURpciA9ICcnO1xuICAgICAgICB0aGlzLmhpZXJhcmNoeVN0ZXBTaXplID0gLTE7XG4gICAgICAgIHRoaXMubm9kZXMgPSB7fTtcbiAgICAgICAgdGhpcy5udW1Ob2Rlc0xvYWRpbmcgPSAwO1xuICAgICAgICB0aGlzLm1heE51bU5vZGVzTG9hZGluZyA9IDM7XG4gICAgICAgIHRoaXMuc3BhY2luZyA9IDA7XG4gICAgICAgIHRoaXMucG9pbnRBdHRyaWJ1dGVzID0gbmV3IFBvaW50QXR0cmlidXRlcyhbXSk7XG4gICAgICAgIHRoaXMucHJvamVjdGlvbiA9IG51bGw7XG4gICAgICAgIHRoaXMudXJsID0gbnVsbDtcbiAgICB9XG4gICAgZGlzcG9zZSgpIHtcbiAgICAgICAgdGhpcy5sb2FkZXIuZGlzcG9zZSgpO1xuICAgICAgICB0aGlzLnJvb3QudHJhdmVyc2Uobm9kZSA9PiBub2RlLmRpc3Bvc2UoKSk7XG4gICAgICAgIHRoaXMuZGlzcG9zZWQgPSB0cnVlO1xuICAgIH1cbiAgICBhZGROb2RlTG9hZGVkQ2FsbGJhY2soY2FsbGJhY2spIHtcbiAgICAgICAgdGhpcy5sb2FkZXIuY2FsbGJhY2tzLnB1c2goY2FsbGJhY2spO1xuICAgIH1cbiAgICBjbGVhck5vZGVMb2FkZWRDYWxsYmFja3MoKSB7XG4gICAgICAgIHRoaXMubG9hZGVyLmNhbGxiYWNrcyA9IFtdO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/point-cloud-octree-geometry.ts\n");

/***/ }),

/***/ "./src/point-cloud-octree-node.ts":
/*!****************************************!*\
  !*** ./src/point-cloud-octree-node.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PointCloudOctreeNode: () => (/* binding */ PointCloudOctreeNode)\n/* harmony export */ });\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ \"three\");\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(three__WEBPACK_IMPORTED_MODULE_0__);\n\nclass PointCloudOctreeNode extends three__WEBPACK_IMPORTED_MODULE_0__.EventDispatcher {\n    constructor(geometryNode, sceneNode) {\n        super();\n        this.pcIndex = undefined;\n        this.boundingBoxNode = null;\n        this.loaded = true;\n        this.isTreeNode = true;\n        this.isGeometryNode = false;\n        this.geometryNode = geometryNode;\n        this.sceneNode = sceneNode;\n        this.children = geometryNode.children.slice();\n    }\n    dispose() {\n        this.geometryNode.dispose();\n    }\n    disposeSceneNode() {\n        const node = this.sceneNode;\n        if (node.geometry instanceof three__WEBPACK_IMPORTED_MODULE_0__.BufferGeometry) {\n            const attributes = node.geometry.attributes;\n            // tslint:disable-next-line:forin\n            for (const key in attributes) {\n                if (key === 'position') {\n                    delete attributes[key].array;\n                }\n                delete attributes[key];\n            }\n            node.geometry.dispose();\n            node.geometry = undefined;\n        }\n    }\n    traverse(cb, includeSelf) {\n        this.geometryNode.traverse(cb, includeSelf);\n    }\n    get id() {\n        return this.geometryNode.id;\n    }\n    get name() {\n        return this.geometryNode.name;\n    }\n    get level() {\n        return this.geometryNode.level;\n    }\n    get isLeafNode() {\n        return this.geometryNode.isLeafNode;\n    }\n    get numPoints() {\n        return this.geometryNode.numPoints;\n    }\n    get index() {\n        return this.geometryNode.index;\n    }\n    get boundingSphere() {\n        return this.geometryNode.boundingSphere;\n    }\n    get boundingBox() {\n        return this.geometryNode.boundingBox;\n    }\n    get spacing() {\n        return this.geometryNode.spacing;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcG9pbnQtY2xvdWQtb2N0cmVlLW5vZGUudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3BvdHJlZS8uL3NyYy9wb2ludC1jbG91ZC1vY3RyZWUtbm9kZS50cz9kYTE3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJ1ZmZlckdlb21ldHJ5LCBFdmVudERpc3BhdGNoZXIgfSBmcm9tICd0aHJlZSc7XG5leHBvcnQgY2xhc3MgUG9pbnRDbG91ZE9jdHJlZU5vZGUgZXh0ZW5kcyBFdmVudERpc3BhdGNoZXIge1xuICAgIGNvbnN0cnVjdG9yKGdlb21ldHJ5Tm9kZSwgc2NlbmVOb2RlKSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgICAgIHRoaXMucGNJbmRleCA9IHVuZGVmaW5lZDtcbiAgICAgICAgdGhpcy5ib3VuZGluZ0JveE5vZGUgPSBudWxsO1xuICAgICAgICB0aGlzLmxvYWRlZCA9IHRydWU7XG4gICAgICAgIHRoaXMuaXNUcmVlTm9kZSA9IHRydWU7XG4gICAgICAgIHRoaXMuaXNHZW9tZXRyeU5vZGUgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5nZW9tZXRyeU5vZGUgPSBnZW9tZXRyeU5vZGU7XG4gICAgICAgIHRoaXMuc2NlbmVOb2RlID0gc2NlbmVOb2RlO1xuICAgICAgICB0aGlzLmNoaWxkcmVuID0gZ2VvbWV0cnlOb2RlLmNoaWxkcmVuLnNsaWNlKCk7XG4gICAgfVxuICAgIGRpc3Bvc2UoKSB7XG4gICAgICAgIHRoaXMuZ2VvbWV0cnlOb2RlLmRpc3Bvc2UoKTtcbiAgICB9XG4gICAgZGlzcG9zZVNjZW5lTm9kZSgpIHtcbiAgICAgICAgY29uc3Qgbm9kZSA9IHRoaXMuc2NlbmVOb2RlO1xuICAgICAgICBpZiAobm9kZS5nZW9tZXRyeSBpbnN0YW5jZW9mIEJ1ZmZlckdlb21ldHJ5KSB7XG4gICAgICAgICAgICBjb25zdCBhdHRyaWJ1dGVzID0gbm9kZS5nZW9tZXRyeS5hdHRyaWJ1dGVzO1xuICAgICAgICAgICAgLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOmZvcmluXG4gICAgICAgICAgICBmb3IgKGNvbnN0IGtleSBpbiBhdHRyaWJ1dGVzKSB7XG4gICAgICAgICAgICAgICAgaWYgKGtleSA9PT0gJ3Bvc2l0aW9uJykge1xuICAgICAgICAgICAgICAgICAgICBkZWxldGUgYXR0cmlidXRlc1trZXldLmFycmF5O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBkZWxldGUgYXR0cmlidXRlc1trZXldO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgbm9kZS5nZW9tZXRyeS5kaXNwb3NlKCk7XG4gICAgICAgICAgICBub2RlLmdlb21ldHJ5ID0gdW5kZWZpbmVkO1xuICAgICAgICB9XG4gICAgfVxuICAgIHRyYXZlcnNlKGNiLCBpbmNsdWRlU2VsZikge1xuICAgICAgICB0aGlzLmdlb21ldHJ5Tm9kZS50cmF2ZXJzZShjYiwgaW5jbHVkZVNlbGYpO1xuICAgIH1cbiAgICBnZXQgaWQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmdlb21ldHJ5Tm9kZS5pZDtcbiAgICB9XG4gICAgZ2V0IG5hbWUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmdlb21ldHJ5Tm9kZS5uYW1lO1xuICAgIH1cbiAgICBnZXQgbGV2ZWwoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmdlb21ldHJ5Tm9kZS5sZXZlbDtcbiAgICB9XG4gICAgZ2V0IGlzTGVhZk5vZGUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmdlb21ldHJ5Tm9kZS5pc0xlYWZOb2RlO1xuICAgIH1cbiAgICBnZXQgbnVtUG9pbnRzKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5nZW9tZXRyeU5vZGUubnVtUG9pbnRzO1xuICAgIH1cbiAgICBnZXQgaW5kZXgoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmdlb21ldHJ5Tm9kZS5pbmRleDtcbiAgICB9XG4gICAgZ2V0IGJvdW5kaW5nU3BoZXJlKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5nZW9tZXRyeU5vZGUuYm91bmRpbmdTcGhlcmU7XG4gICAgfVxuICAgIGdldCBib3VuZGluZ0JveCgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZ2VvbWV0cnlOb2RlLmJvdW5kaW5nQm94O1xuICAgIH1cbiAgICBnZXQgc3BhY2luZygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZ2VvbWV0cnlOb2RlLnNwYWNpbmc7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/point-cloud-octree-node.ts\n");

/***/ }),

/***/ "./src/point-cloud-octree-picker.ts":
/*!******************************************!*\
  !*** ./src/point-cloud-octree-picker.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PointCloudOctreePicker: () => (/* binding */ PointCloudOctreePicker)\n/* harmony export */ });\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ \"three\");\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(three__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constants */ \"./src/constants.ts\");\n/* harmony import */ var _materials__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./materials */ \"./src/materials/index.ts\");\n/* harmony import */ var _utils_math__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils/math */ \"./src/utils/math.ts\");\n\n\n\n\nclass PointCloudOctreePicker {\n    dispose() {\n        if (this.pickState) {\n            this.pickState.material.dispose();\n            this.pickState.renderTarget.dispose();\n        }\n    }\n    pick(renderer, camera, ray, octrees, params = {}) {\n        if (octrees.length === 0) {\n            return null;\n        }\n        const pickState = this.pickState\n            ? this.pickState\n            : (this.pickState = PointCloudOctreePicker.getPickState());\n        const pickMaterial = pickState.material;\n        const pixelRatio = renderer.getPixelRatio();\n        const width = Math.ceil(renderer.domElement.clientWidth * pixelRatio);\n        const height = Math.ceil(renderer.domElement.clientHeight * pixelRatio);\n        PointCloudOctreePicker.updatePickRenderTarget(this.pickState, width, height);\n        const pixelPosition = PointCloudOctreePicker.helperVec3; // Use helper vector to prevent extra allocations.\n        if (params.pixelPosition) {\n            pixelPosition.copy(params.pixelPosition);\n        }\n        else {\n            pixelPosition.addVectors(camera.position, ray.direction).project(camera);\n            pixelPosition.x = (pixelPosition.x + 1) * width * 0.5;\n            pixelPosition.y = (pixelPosition.y + 1) * height * 0.5;\n        }\n        const pickWndSize = Math.floor((params.pickWindowSize || _constants__WEBPACK_IMPORTED_MODULE_1__.DEFAULT_PICK_WINDOW_SIZE) * pixelRatio);\n        const halfPickWndSize = (pickWndSize - 1) / 2;\n        const x = Math.floor((0,_utils_math__WEBPACK_IMPORTED_MODULE_3__.clamp)(pixelPosition.x - halfPickWndSize, 0, width));\n        const y = Math.floor((0,_utils_math__WEBPACK_IMPORTED_MODULE_3__.clamp)(pixelPosition.y - halfPickWndSize, 0, height));\n        PointCloudOctreePicker.prepareRender(renderer, x, y, pickWndSize, pickMaterial, pickState);\n        const renderedNodes = PointCloudOctreePicker.render(renderer, camera, pickMaterial, octrees, ray, pickState, params);\n        // Cleanup\n        pickMaterial.clearVisibleNodeTextureOffsets();\n        // Read back image and decode hit point\n        const pixels = PointCloudOctreePicker.readPixels(renderer, x, y, pickWndSize);\n        const hit = PointCloudOctreePicker.findHit(pixels, pickWndSize);\n        return PointCloudOctreePicker.getPickPoint(hit, renderedNodes);\n    }\n    static prepareRender(renderer, x, y, pickWndSize, pickMaterial, pickState) {\n        // Render the intersected nodes onto the pick render target, clipping to a small pick window.\n        renderer.setScissor(x, y, pickWndSize, pickWndSize);\n        renderer.setScissorTest(true);\n        renderer.state.buffers.depth.setTest(pickMaterial.depthTest);\n        renderer.state.buffers.depth.setMask(pickMaterial.depthWrite);\n        renderer.state.setBlending(three__WEBPACK_IMPORTED_MODULE_0__.NoBlending);\n        renderer.setRenderTarget(pickState.renderTarget);\n        // Save the current clear color and clear the renderer with black color and alpha 0.\n        renderer.getClearColor(this.clearColor);\n        const oldClearAlpha = renderer.getClearAlpha();\n        renderer.setClearColor(_constants__WEBPACK_IMPORTED_MODULE_1__.COLOR_BLACK, 0);\n        renderer.clear(true, true, true);\n        renderer.setClearColor(this.clearColor, oldClearAlpha);\n    }\n    static render(renderer, camera, pickMaterial, octrees, ray, pickState, params) {\n        const renderedNodes = [];\n        for (const octree of octrees) {\n            // Get all the octree nodes which intersect the picking ray. We only need to render those.\n            const nodes = PointCloudOctreePicker.nodesOnRay(octree, ray);\n            if (!nodes.length) {\n                continue;\n            }\n            PointCloudOctreePicker.updatePickMaterial(pickMaterial, octree.material, params);\n            pickMaterial.updateMaterial(octree, nodes, camera, renderer);\n            if (params.onBeforePickRender) {\n                params.onBeforePickRender(pickMaterial, pickState.renderTarget);\n            }\n            // Create copies of the nodes so we can render them differently than in the normal point cloud.\n            pickState.scene.children = PointCloudOctreePicker.createTempNodes(octree, nodes, pickMaterial, renderedNodes.length);\n            renderer.render(pickState.scene, camera);\n            nodes.forEach(node => renderedNodes.push({ node, octree }));\n        }\n        return renderedNodes;\n    }\n    static nodesOnRay(octree, ray) {\n        const nodesOnRay = [];\n        const rayClone = ray.clone();\n        for (const node of octree.visibleNodes) {\n            const sphere = PointCloudOctreePicker.helperSphere\n                .copy(node.boundingSphere)\n                .applyMatrix4(octree.matrixWorld);\n            if (rayClone.intersectsSphere(sphere)) {\n                nodesOnRay.push(node);\n            }\n        }\n        return nodesOnRay;\n    }\n    static readPixels(renderer, x, y, pickWndSize) {\n        // Read the pixel from the pick render target.\n        const pixels = new Uint8Array(4 * pickWndSize * pickWndSize);\n        renderer.readRenderTargetPixels(renderer.getRenderTarget(), x, y, pickWndSize, pickWndSize, pixels);\n        renderer.setScissorTest(false);\n        renderer.setRenderTarget(null);\n        return pixels;\n    }\n    static createTempNodes(octree, nodes, pickMaterial, nodeIndexOffset) {\n        const tempNodes = [];\n        for (let i = 0; i < nodes.length; i++) {\n            const node = nodes[i];\n            const sceneNode = node.sceneNode;\n            const tempNode = new three__WEBPACK_IMPORTED_MODULE_0__.Points(sceneNode.geometry, pickMaterial);\n            tempNode.matrix = sceneNode.matrix;\n            tempNode.matrixWorld = sceneNode.matrixWorld;\n            tempNode.matrixAutoUpdate = false;\n            tempNode.frustumCulled = false;\n            const nodeIndex = nodeIndexOffset + i + 1;\n            if (nodeIndex > 255) {\n                console.error('More than 255 nodes for pick are not supported.');\n            }\n            tempNode.onBeforeRender = _materials__WEBPACK_IMPORTED_MODULE_2__.PointCloudMaterial.makeOnBeforeRender(octree, node, nodeIndex);\n            tempNodes.push(tempNode);\n        }\n        return tempNodes;\n    }\n    static updatePickMaterial(pickMaterial, nodeMaterial, params) {\n        pickMaterial.pointSizeType = nodeMaterial.pointSizeType;\n        pickMaterial.shape = nodeMaterial.shape;\n        pickMaterial.size = nodeMaterial.size;\n        pickMaterial.minSize = nodeMaterial.minSize;\n        pickMaterial.maxSize = nodeMaterial.maxSize;\n        pickMaterial.classification = nodeMaterial.classification;\n        pickMaterial.useFilterByNormal = nodeMaterial.useFilterByNormal;\n        pickMaterial.filterByNormalThreshold = nodeMaterial.filterByNormalThreshold;\n        if (params.pickOutsideClipRegion) {\n            pickMaterial.clipMode = _materials__WEBPACK_IMPORTED_MODULE_2__.ClipMode.DISABLED;\n        }\n        else {\n            pickMaterial.clipMode = nodeMaterial.clipMode;\n            pickMaterial.setClipBoxes(nodeMaterial.clipMode === _materials__WEBPACK_IMPORTED_MODULE_2__.ClipMode.CLIP_OUTSIDE ? nodeMaterial.clipBoxes : []);\n        }\n    }\n    static updatePickRenderTarget(pickState, width, height) {\n        if (pickState.renderTarget.width === width && pickState.renderTarget.height === height) {\n            return;\n        }\n        pickState.renderTarget.dispose();\n        pickState.renderTarget = PointCloudOctreePicker.makePickRenderTarget();\n        pickState.renderTarget.setSize(width, height);\n    }\n    static makePickRenderTarget() {\n        return new three__WEBPACK_IMPORTED_MODULE_0__.WebGLRenderTarget(1, 1, {\n            minFilter: three__WEBPACK_IMPORTED_MODULE_0__.LinearFilter,\n            magFilter: three__WEBPACK_IMPORTED_MODULE_0__.NearestFilter,\n            format: three__WEBPACK_IMPORTED_MODULE_0__.RGBAFormat,\n        });\n    }\n    static findHit(pixels, pickWndSize) {\n        const ibuffer = new Uint32Array(pixels.buffer);\n        // Find closest hit inside pixelWindow boundaries\n        let min = Number.MAX_VALUE;\n        let hit = null;\n        for (let u = 0; u < pickWndSize; u++) {\n            for (let v = 0; v < pickWndSize; v++) {\n                const offset = u + v * pickWndSize;\n                const distance = Math.pow(u - (pickWndSize - 1) / 2, 2) + Math.pow(v - (pickWndSize - 1) / 2, 2);\n                const pcIndex = pixels[4 * offset + 3];\n                pixels[4 * offset + 3] = 0;\n                const pIndex = ibuffer[offset];\n                if (pcIndex > 0 && distance < min) {\n                    hit = {\n                        pIndex: pIndex,\n                        pcIndex: pcIndex - 1,\n                    };\n                    min = distance;\n                }\n            }\n        }\n        return hit;\n    }\n    static getPickPoint(hit, nodes) {\n        if (!hit) {\n            return null;\n        }\n        const point = {};\n        const points = nodes[hit.pcIndex] && nodes[hit.pcIndex].node.sceneNode;\n        if (!points) {\n            return null;\n        }\n        point.pointCloud = nodes[hit.pcIndex].octree;\n        const attributes = points.geometry.attributes;\n        for (const property in attributes) {\n            if (!attributes.hasOwnProperty(property)) {\n                continue;\n            }\n            const values = attributes[property];\n            // tslint:disable-next-line:prefer-switch\n            if (property === 'position') {\n                PointCloudOctreePicker.addPositionToPickPoint(point, hit, values, points);\n            }\n            else if (property === 'normal') {\n                PointCloudOctreePicker.addNormalToPickPoint(point, hit, values, points);\n            }\n            else if (property === 'indices') {\n                // TODO\n            }\n            else {\n                if (values.itemSize === 1) {\n                    point[property] = values.array[hit.pIndex];\n                }\n                else {\n                    const value = [];\n                    for (let j = 0; j < values.itemSize; j++) {\n                        value.push(values.array[values.itemSize * hit.pIndex + j]);\n                    }\n                    point[property] = value;\n                }\n            }\n        }\n        return point;\n    }\n    static addPositionToPickPoint(point, hit, values, points) {\n        point.position = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3()\n            .fromBufferAttribute(values, hit.pIndex)\n            .applyMatrix4(points.matrixWorld);\n    }\n    static addNormalToPickPoint(point, hit, values, points) {\n        const normal = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3().fromBufferAttribute(values, hit.pIndex);\n        const normal4 = new three__WEBPACK_IMPORTED_MODULE_0__.Vector4(normal.x, normal.y, normal.z, 0).applyMatrix4(points.matrixWorld);\n        normal.set(normal4.x, normal4.y, normal4.z);\n        point.normal = normal;\n    }\n    static getPickState() {\n        const scene = new three__WEBPACK_IMPORTED_MODULE_0__.Scene();\n        scene.matrixAutoUpdate = false;\n        const material = new _materials__WEBPACK_IMPORTED_MODULE_2__.PointCloudMaterial();\n        material.pointColorType = _materials__WEBPACK_IMPORTED_MODULE_2__.PointColorType.POINT_INDEX;\n        return {\n            renderTarget: PointCloudOctreePicker.makePickRenderTarget(),\n            material: material,\n            scene: scene,\n        };\n    }\n}\nPointCloudOctreePicker.helperVec3 = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3();\nPointCloudOctreePicker.helperSphere = new three__WEBPACK_IMPORTED_MODULE_0__.Sphere();\nPointCloudOctreePicker.clearColor = new three__WEBPACK_IMPORTED_MODULE_0__.Color();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/point-cloud-octree-picker.ts\n");

/***/ }),

/***/ "./src/point-cloud-octree.ts":
/*!***********************************!*\
  !*** ./src/point-cloud-octree.ts ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PointCloudOctree: () => (/* binding */ PointCloudOctree)\n/* harmony export */ });\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ \"three\");\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(three__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constants */ \"./src/constants.ts\");\n/* harmony import */ var _loading2_octree_geometry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./loading2/octree-geometry */ \"./src/loading2/octree-geometry.ts\");\n/* harmony import */ var _materials__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./materials */ \"./src/materials/index.ts\");\n/* harmony import */ var _point_cloud_octree_node__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./point-cloud-octree-node */ \"./src/point-cloud-octree-node.ts\");\n/* harmony import */ var _point_cloud_octree_picker__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./point-cloud-octree-picker */ \"./src/point-cloud-octree-picker.ts\");\n/* harmony import */ var _point_cloud_tree__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./point-cloud-tree */ \"./src/point-cloud-tree.ts\");\n/* harmony import */ var _utils_bounds__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./utils/bounds */ \"./src/utils/bounds.ts\");\n\n\n\n\n\n\n\n\nclass PointCloudOctree extends _point_cloud_tree__WEBPACK_IMPORTED_MODULE_6__.PointCloudTree {\n    constructor(potree, pcoGeometry, material) {\n        super();\n        this.disposed = false;\n        this.level = 0;\n        this.maxLevel = Infinity;\n        /**\n         * The minimum radius of a node's bounding sphere on the screen in order to be displayed.\n         */\n        this.minNodePixelSize = _constants__WEBPACK_IMPORTED_MODULE_1__.DEFAULT_MIN_NODE_PIXEL_SIZE;\n        this.root = null;\n        this.boundingBoxNodes = [];\n        this.visibleNodes = [];\n        this.visibleGeometry = [];\n        this.numVisiblePoints = 0;\n        this.showBoundingBox = false;\n        this.visibleBounds = new three__WEBPACK_IMPORTED_MODULE_0__.Box3();\n        this.name = '';\n        this.potree = potree;\n        this.root = pcoGeometry.root;\n        this.pcoGeometry = pcoGeometry;\n        this.boundingBox = pcoGeometry.boundingBox;\n        this.boundingSphere = this.boundingBox.getBoundingSphere(new three__WEBPACK_IMPORTED_MODULE_0__.Sphere());\n        this.position.copy(pcoGeometry.offset);\n        this.updateMatrix();\n        this.material =\n            material || pcoGeometry instanceof _loading2_octree_geometry__WEBPACK_IMPORTED_MODULE_2__.OctreeGeometry\n                ? new _materials__WEBPACK_IMPORTED_MODULE_3__.PointCloudMaterial({ colorRgba: true })\n                : new _materials__WEBPACK_IMPORTED_MODULE_3__.PointCloudMaterial();\n        this.initMaterial(this.material);\n    }\n    initMaterial(material) {\n        this.updateMatrixWorld(true);\n        const { min, max } = (0,_utils_bounds__WEBPACK_IMPORTED_MODULE_7__.computeTransformedBoundingBox)(this.pcoGeometry.tightBoundingBox || this.getBoundingBoxWorld(), this.matrixWorld);\n        const bWidth = max.z - min.z;\n        material.heightMin = min.z - 0.2 * bWidth;\n        material.heightMax = max.z + 0.2 * bWidth;\n    }\n    dispose() {\n        if (this.root) {\n            this.root.dispose();\n        }\n        this.pcoGeometry.root.traverse(n => this.potree.lru.remove(n));\n        this.pcoGeometry.dispose();\n        this.material.dispose();\n        this.visibleNodes = [];\n        this.visibleGeometry = [];\n        if (this.picker) {\n            this.picker.dispose();\n            this.picker = undefined;\n        }\n        this.disposed = true;\n    }\n    get pointSizeType() {\n        return this.material.pointSizeType;\n    }\n    set pointSizeType(value) {\n        this.material.pointSizeType = value;\n    }\n    toTreeNode(geometryNode, parent) {\n        const points = new three__WEBPACK_IMPORTED_MODULE_0__.Points(geometryNode.geometry, this.material);\n        const node = new _point_cloud_octree_node__WEBPACK_IMPORTED_MODULE_4__.PointCloudOctreeNode(geometryNode, points);\n        points.name = geometryNode.name;\n        points.position.copy(geometryNode.boundingBox.min);\n        points.frustumCulled = false;\n        points.onBeforeRender = _materials__WEBPACK_IMPORTED_MODULE_3__.PointCloudMaterial.makeOnBeforeRender(this, node);\n        if (parent) {\n            parent.sceneNode.add(points);\n            parent.children[geometryNode.index] = node;\n            geometryNode.oneTimeDisposeHandlers.push(() => {\n                node.disposeSceneNode();\n                parent.sceneNode.remove(node.sceneNode);\n                // Replace the tree node (rendered and in the GPU) with the geometry node.\n                parent.children[geometryNode.index] = geometryNode;\n            });\n        }\n        else {\n            this.root = node;\n            this.add(points);\n        }\n        return node;\n    }\n    updateVisibleBounds() {\n        const bounds = this.visibleBounds;\n        bounds.min.set(Infinity, Infinity, Infinity);\n        bounds.max.set(-Infinity, -Infinity, -Infinity);\n        for (const node of this.visibleNodes) {\n            if (node.isLeafNode) {\n                bounds.expandByPoint(node.boundingBox.min);\n                bounds.expandByPoint(node.boundingBox.max);\n            }\n        }\n    }\n    updateBoundingBoxes() {\n        if (!this.showBoundingBox || !this.parent) {\n            return;\n        }\n        let bbRoot = this.parent.getObjectByName('bbroot');\n        if (!bbRoot) {\n            bbRoot = new three__WEBPACK_IMPORTED_MODULE_0__.Object3D();\n            bbRoot.name = 'bbroot';\n            this.parent.add(bbRoot);\n        }\n        const visibleBoxes = [];\n        for (const node of this.visibleNodes) {\n            if (node.boundingBoxNode !== undefined && node.isLeafNode) {\n                visibleBoxes.push(node.boundingBoxNode);\n            }\n        }\n        bbRoot.children = visibleBoxes;\n    }\n    updateMatrixWorld(force) {\n        if (this.matrixAutoUpdate === true) {\n            this.updateMatrix();\n        }\n        if (this.matrixWorldNeedsUpdate === true || force === true) {\n            if (!this.parent) {\n                this.matrixWorld.copy(this.matrix);\n            }\n            else {\n                this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix);\n            }\n            this.matrixWorldNeedsUpdate = false;\n            force = true;\n        }\n    }\n    hideDescendants(object) {\n        const toHide = [];\n        addVisibleChildren(object);\n        while (toHide.length > 0) {\n            const objToHide = toHide.shift();\n            objToHide.visible = false;\n            addVisibleChildren(objToHide);\n        }\n        function addVisibleChildren(obj) {\n            for (const child of obj.children) {\n                if (child.visible) {\n                    toHide.push(child);\n                }\n            }\n        }\n    }\n    moveToOrigin() {\n        this.position.set(0, 0, 0); // Reset, then the matrix will be updated in getBoundingBoxWorld()\n        this.position.set(0, 0, 0).sub(this.getBoundingBoxWorld().getCenter(new three__WEBPACK_IMPORTED_MODULE_0__.Vector3()));\n    }\n    moveToGroundPlane() {\n        this.position.y += -this.getBoundingBoxWorld().min.y;\n    }\n    getBoundingBoxWorld() {\n        this.updateMatrixWorld(true);\n        return (0,_utils_bounds__WEBPACK_IMPORTED_MODULE_7__.computeTransformedBoundingBox)(this.boundingBox, this.matrixWorld);\n    }\n    getVisibleExtent() {\n        return this.visibleBounds.applyMatrix4(this.matrixWorld);\n    }\n    pick(renderer, camera, ray, params = {}) {\n        this.picker = this.picker || new _point_cloud_octree_picker__WEBPACK_IMPORTED_MODULE_5__.PointCloudOctreePicker();\n        return this.picker.pick(renderer, camera, ray, [this], params);\n    }\n    get progress() {\n        return this.visibleGeometry.length === 0\n            ? 0\n            : this.visibleNodes.length / this.visibleGeometry.length;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/point-cloud-octree.ts\n");

/***/ }),

/***/ "./src/point-cloud-tree.ts":
/*!*********************************!*\
  !*** ./src/point-cloud-tree.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PointCloudTree: () => (/* binding */ PointCloudTree)\n/* harmony export */ });\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ \"three\");\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(three__WEBPACK_IMPORTED_MODULE_0__);\n\nclass PointCloudTree extends three__WEBPACK_IMPORTED_MODULE_0__.Object3D {\n    constructor() {\n        super(...arguments);\n        this.root = null;\n    }\n    initialized() {\n        return this.root !== null;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcG9pbnQtY2xvdWQtdHJlZS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3BvdHJlZS8uL3NyYy9wb2ludC1jbG91ZC10cmVlLnRzPzE1NGMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgT2JqZWN0M0QgfSBmcm9tICd0aHJlZSc7XG5leHBvcnQgY2xhc3MgUG9pbnRDbG91ZFRyZWUgZXh0ZW5kcyBPYmplY3QzRCB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKC4uLmFyZ3VtZW50cyk7XG4gICAgICAgIHRoaXMucm9vdCA9IG51bGw7XG4gICAgfVxuICAgIGluaXRpYWxpemVkKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5yb290ICE9PSBudWxsO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/point-cloud-tree.ts\n");

/***/ }),

/***/ "./src/potree.ts":
/*!***********************!*\
  !*** ./src/potree.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Potree: () => (/* binding */ Potree),\n/* harmony export */   QueueItem: () => (/* binding */ QueueItem)\n/* harmony export */ });\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ \"three\");\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(three__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constants */ \"./src/constants.ts\");\n/* harmony import */ var _features__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./features */ \"./src/features.ts\");\n/* harmony import */ var _loading__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./loading */ \"./src/loading/index.ts\");\n/* harmony import */ var _materials__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./materials */ \"./src/materials/index.ts\");\n/* harmony import */ var _point_cloud_octree__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./point-cloud-octree */ \"./src/point-cloud-octree.ts\");\n/* harmony import */ var _point_cloud_octree_picker__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./point-cloud-octree-picker */ \"./src/point-cloud-octree-picker.ts\");\n/* harmony import */ var _type_predicates__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./type-predicates */ \"./src/type-predicates.ts\");\n/* harmony import */ var _utils_binary_heap__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./utils/binary-heap */ \"./src/utils/binary-heap.js\");\n/* harmony import */ var _utils_box3_helper__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./utils/box3-helper */ \"./src/utils/box3-helper.ts\");\n/* harmony import */ var _utils_lru__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./utils/lru */ \"./src/utils/lru.ts\");\n\n\n\n\n//import { loadOctree } from './loading2/load-octree';\n\n\n\n\n\n\n\nclass QueueItem {\n    constructor(pointCloudIndex, weight, node, parent) {\n        this.pointCloudIndex = pointCloudIndex;\n        this.weight = weight;\n        this.node = node;\n        this.parent = parent;\n    }\n}\nconst GEOMETRY_LOADERS = {\n    v1: _loading__WEBPACK_IMPORTED_MODULE_3__.loadPOC,\n    //  v2: loadOctree\n};\nclass Potree {\n    constructor(version = 'v1') {\n        this._pointBudget = _constants__WEBPACK_IMPORTED_MODULE_1__.DEFAULT_POINT_BUDGET;\n        this._rendererSize = new three__WEBPACK_IMPORTED_MODULE_0__.Vector2();\n        this.maxNumNodesLoading = _constants__WEBPACK_IMPORTED_MODULE_1__.MAX_NUM_NODES_LOADING;\n        this.features = _features__WEBPACK_IMPORTED_MODULE_2__.FEATURES;\n        this.lru = new _utils_lru__WEBPACK_IMPORTED_MODULE_10__.LRU(this._pointBudget);\n        this.updateVisibilityStructures = (() => {\n            const frustumMatrix = new three__WEBPACK_IMPORTED_MODULE_0__.Matrix4();\n            const inverseWorldMatrix = new three__WEBPACK_IMPORTED_MODULE_0__.Matrix4();\n            const cameraMatrix = new three__WEBPACK_IMPORTED_MODULE_0__.Matrix4();\n            return (pointClouds, camera) => {\n                const frustums = [];\n                const cameraPositions = [];\n                const priorityQueue = new _utils_binary_heap__WEBPACK_IMPORTED_MODULE_8__.BinaryHeap(x => 1 / x.weight);\n                for (let i = 0; i < pointClouds.length; i++) {\n                    const pointCloud = pointClouds[i];\n                    if (!pointCloud.initialized()) {\n                        continue;\n                    }\n                    pointCloud.numVisiblePoints = 0;\n                    pointCloud.visibleNodes = [];\n                    pointCloud.visibleGeometry = [];\n                    camera.updateMatrixWorld(false);\n                    // Furstum in object space.\n                    const inverseViewMatrix = camera.matrixWorldInverse;\n                    const worldMatrix = pointCloud.matrixWorld;\n                    frustumMatrix\n                        .identity()\n                        .multiply(camera.projectionMatrix)\n                        .multiply(inverseViewMatrix)\n                        .multiply(worldMatrix);\n                    frustums.push(new three__WEBPACK_IMPORTED_MODULE_0__.Frustum().setFromProjectionMatrix(frustumMatrix));\n                    // Camera position in object space\n                    inverseWorldMatrix.copy(worldMatrix).invert();\n                    cameraMatrix\n                        .identity()\n                        .multiply(inverseWorldMatrix)\n                        .multiply(camera.matrixWorld);\n                    cameraPositions.push(new three__WEBPACK_IMPORTED_MODULE_0__.Vector3().setFromMatrixPosition(cameraMatrix));\n                    if (pointCloud.visible && pointCloud.root !== null) {\n                        const weight = Number.MAX_VALUE;\n                        priorityQueue.push(new QueueItem(i, weight, pointCloud.root));\n                    }\n                    // Hide any previously visible nodes. We will later show only the needed ones.\n                    if ((0,_type_predicates__WEBPACK_IMPORTED_MODULE_7__.isTreeNode)(pointCloud.root)) {\n                        pointCloud.hideDescendants(pointCloud.root.sceneNode);\n                    }\n                    for (const boundingBoxNode of pointCloud.boundingBoxNodes) {\n                        boundingBoxNode.visible = false;\n                    }\n                }\n                return { frustums, cameraPositions, priorityQueue };\n            };\n        })();\n        this.loadGeometry = GEOMETRY_LOADERS[version];\n    }\n    loadPointCloud(url, getUrl, xhrRequest = (input, init) => fetch(input, init)) {\n        return this.loadGeometry(url, getUrl, xhrRequest).then(geometry => new _point_cloud_octree__WEBPACK_IMPORTED_MODULE_5__.PointCloudOctree(this, geometry));\n    }\n    updatePointClouds(pointClouds, camera, renderer) {\n        const result = this.updateVisibility(pointClouds, camera, renderer);\n        for (let i = 0; i < pointClouds.length; i++) {\n            const pointCloud = pointClouds[i];\n            if (pointCloud.disposed) {\n                continue;\n            }\n            pointCloud.material.updateMaterial(pointCloud, pointCloud.visibleNodes, camera, renderer);\n            pointCloud.updateVisibleBounds();\n            pointCloud.updateBoundingBoxes();\n        }\n        this.lru.freeMemory();\n        return result;\n    }\n    static pick(pointClouds, renderer, camera, ray, params = {}) {\n        Potree.picker = Potree.picker || new _point_cloud_octree_picker__WEBPACK_IMPORTED_MODULE_6__.PointCloudOctreePicker();\n        return Potree.picker.pick(renderer, camera, ray, pointClouds, params);\n    }\n    get pointBudget() {\n        return this._pointBudget;\n    }\n    set pointBudget(value) {\n        if (value !== this._pointBudget) {\n            this._pointBudget = value;\n            this.lru.pointBudget = value;\n            this.lru.freeMemory();\n        }\n    }\n    static set maxLoaderWorkers(value) {\n        _loading__WEBPACK_IMPORTED_MODULE_3__.BinaryLoader.WORKER_POOL.maxWorkers = value;\n    }\n    static get maxLoaderWorkers() {\n        return _loading__WEBPACK_IMPORTED_MODULE_3__.BinaryLoader.WORKER_POOL.maxWorkers;\n    }\n    updateVisibility(pointClouds, camera, renderer) {\n        let numVisiblePoints = 0;\n        const visibleNodes = [];\n        const unloadedGeometry = [];\n        // calculate object space frustum and cam pos and setup priority queue\n        const { frustums, cameraPositions, priorityQueue } = this.updateVisibilityStructures(pointClouds, camera);\n        let loadedToGPUThisFrame = 0;\n        let exceededMaxLoadsToGPU = false;\n        let nodeLoadFailed = false;\n        let queueItem;\n        while ((queueItem = priorityQueue.pop()) !== undefined) {\n            let node = queueItem.node;\n            // If we will end up with too many points, we stop right away.\n            if (numVisiblePoints + node.numPoints > this.pointBudget) {\n                break;\n            }\n            const pointCloudIndex = queueItem.pointCloudIndex;\n            const pointCloud = pointClouds[pointCloudIndex];\n            const maxLevel = pointCloud.maxLevel !== undefined ? pointCloud.maxLevel : Infinity;\n            if (node.level > maxLevel ||\n                !frustums[pointCloudIndex].intersectsBox(node.boundingBox) ||\n                this.shouldClip(pointCloud, node.boundingBox)) {\n                continue;\n            }\n            numVisiblePoints += node.numPoints;\n            pointCloud.numVisiblePoints += node.numPoints;\n            const parentNode = queueItem.parent;\n            if ((0,_type_predicates__WEBPACK_IMPORTED_MODULE_7__.isGeometryNode)(node) && (!parentNode || (0,_type_predicates__WEBPACK_IMPORTED_MODULE_7__.isTreeNode)(parentNode))) {\n                if (node.loaded && loadedToGPUThisFrame < _constants__WEBPACK_IMPORTED_MODULE_1__.MAX_LOADS_TO_GPU) {\n                    node = pointCloud.toTreeNode(node, parentNode);\n                    loadedToGPUThisFrame++;\n                }\n                else if (!node.failed) {\n                    if (node.loaded && loadedToGPUThisFrame >= _constants__WEBPACK_IMPORTED_MODULE_1__.MAX_LOADS_TO_GPU) {\n                        exceededMaxLoadsToGPU = true;\n                    }\n                    unloadedGeometry.push(node);\n                    pointCloud.visibleGeometry.push(node);\n                }\n                else {\n                    nodeLoadFailed = true;\n                    continue;\n                }\n            }\n            if ((0,_type_predicates__WEBPACK_IMPORTED_MODULE_7__.isTreeNode)(node)) {\n                this.updateTreeNodeVisibility(pointCloud, node, visibleNodes);\n                pointCloud.visibleGeometry.push(node.geometryNode);\n            }\n            const halfHeight = 0.5 * renderer.getSize(this._rendererSize).height * renderer.getPixelRatio();\n            this.updateChildVisibility(queueItem, priorityQueue, pointCloud, node, cameraPositions[pointCloudIndex], camera, halfHeight);\n        } // end priority queue loop\n        const numNodesToLoad = Math.min(this.maxNumNodesLoading, unloadedGeometry.length);\n        const nodeLoadPromises = [];\n        for (let i = 0; i < numNodesToLoad; i++) {\n            nodeLoadPromises.push(unloadedGeometry[i].load());\n        }\n        return {\n            visibleNodes: visibleNodes,\n            numVisiblePoints: numVisiblePoints,\n            exceededMaxLoadsToGPU: exceededMaxLoadsToGPU,\n            nodeLoadFailed: nodeLoadFailed,\n            nodeLoadPromises: nodeLoadPromises,\n        };\n    }\n    updateTreeNodeVisibility(pointCloud, node, visibleNodes) {\n        this.lru.touch(node.geometryNode);\n        const sceneNode = node.sceneNode;\n        sceneNode.visible = true;\n        sceneNode.material = pointCloud.material;\n        sceneNode.updateMatrix();\n        sceneNode.matrixWorld.multiplyMatrices(pointCloud.matrixWorld, sceneNode.matrix);\n        visibleNodes.push(node);\n        pointCloud.visibleNodes.push(node);\n        this.updateBoundingBoxVisibility(pointCloud, node);\n    }\n    updateChildVisibility(queueItem, priorityQueue, pointCloud, node, cameraPosition, camera, halfHeight) {\n        const children = node.children;\n        for (let i = 0; i < children.length; i++) {\n            const child = children[i];\n            if (child === null) {\n                continue;\n            }\n            const sphere = child.boundingSphere;\n            const distance = sphere.center.distanceTo(cameraPosition);\n            const radius = sphere.radius;\n            let projectionFactor = 0.0;\n            if (camera.type === _constants__WEBPACK_IMPORTED_MODULE_1__.PERSPECTIVE_CAMERA) {\n                const perspective = camera;\n                const fov = (perspective.fov * Math.PI) / 180.0;\n                const slope = Math.tan(fov / 2.0);\n                projectionFactor = halfHeight / (slope * distance);\n            }\n            else {\n                const orthographic = camera;\n                projectionFactor = (2 * halfHeight) / (orthographic.top - orthographic.bottom);\n            }\n            const screenPixelRadius = radius * projectionFactor;\n            // Don't add the node if it'll be too small on the screen.\n            if (screenPixelRadius < pointCloud.minNodePixelSize) {\n                continue;\n            }\n            // Nodes which are larger will have priority in loading/displaying.\n            const weight = distance < radius ? Number.MAX_VALUE : screenPixelRadius + 1 / distance;\n            priorityQueue.push(new QueueItem(queueItem.pointCloudIndex, weight, child, node));\n        }\n    }\n    updateBoundingBoxVisibility(pointCloud, node) {\n        if (pointCloud.showBoundingBox && !node.boundingBoxNode) {\n            const boxHelper = new _utils_box3_helper__WEBPACK_IMPORTED_MODULE_9__.Box3Helper(node.boundingBox);\n            boxHelper.matrixAutoUpdate = false;\n            pointCloud.boundingBoxNodes.push(boxHelper);\n            node.boundingBoxNode = boxHelper;\n            node.boundingBoxNode.matrix.copy(pointCloud.matrixWorld);\n        }\n        else if (pointCloud.showBoundingBox && node.boundingBoxNode) {\n            node.boundingBoxNode.visible = true;\n            node.boundingBoxNode.matrix.copy(pointCloud.matrixWorld);\n        }\n        else if (!pointCloud.showBoundingBox && node.boundingBoxNode) {\n            node.boundingBoxNode.visible = false;\n        }\n    }\n    shouldClip(pointCloud, boundingBox) {\n        const material = pointCloud.material;\n        if (material.numClipBoxes === 0 || material.clipMode !== _materials__WEBPACK_IMPORTED_MODULE_4__.ClipMode.CLIP_OUTSIDE) {\n            return false;\n        }\n        const box2 = boundingBox.clone();\n        pointCloud.updateMatrixWorld(true);\n        box2.applyMatrix4(pointCloud.matrixWorld);\n        const clipBoxes = material.clipBoxes;\n        for (let i = 0; i < clipBoxes.length; i++) {\n            const clipMatrixWorld = clipBoxes[i].matrix;\n            const clipBoxWorld = new three__WEBPACK_IMPORTED_MODULE_0__.Box3(new three__WEBPACK_IMPORTED_MODULE_0__.Vector3(-0.5, -0.5, -0.5), new three__WEBPACK_IMPORTED_MODULE_0__.Vector3(0.5, 0.5, 0.5)).applyMatrix4(clipMatrixWorld);\n            if (box2.intersectsBox(clipBoxWorld)) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/potree.ts\n");

/***/ }),

/***/ "./src/type-predicates.ts":
/*!********************************!*\
  !*** ./src/type-predicates.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isGeometryNode: () => (/* binding */ isGeometryNode),\n/* harmony export */   isTreeNode: () => (/* binding */ isTreeNode)\n/* harmony export */ });\nfunction isGeometryNode(node) {\n    return node !== undefined && node !== null && node.isGeometryNode;\n}\nfunction isTreeNode(node) {\n    return node !== undefined && node !== null && node.isTreeNode;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdHlwZS1wcmVkaWNhdGVzLnRzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG90cmVlLy4vc3JjL3R5cGUtcHJlZGljYXRlcy50cz8zMTQzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBpc0dlb21ldHJ5Tm9kZShub2RlKSB7XG4gICAgcmV0dXJuIG5vZGUgIT09IHVuZGVmaW5lZCAmJiBub2RlICE9PSBudWxsICYmIG5vZGUuaXNHZW9tZXRyeU5vZGU7XG59XG5leHBvcnQgZnVuY3Rpb24gaXNUcmVlTm9kZShub2RlKSB7XG4gICAgcmV0dXJuIG5vZGUgIT09IHVuZGVmaW5lZCAmJiBub2RlICE9PSBudWxsICYmIG5vZGUuaXNUcmVlTm9kZTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/type-predicates.ts\n");

/***/ }),

/***/ "./src/types.ts":
/*!**********************!*\
  !*** ./src/types.ts ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdHlwZXMudHMiLCJtYXBwaW5ncyI6IjtBQUFBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG90cmVlLy4vc3JjL3R5cGVzLnRzP2YzZmUiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHt9O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/types.ts\n");

/***/ }),

/***/ "./src/utils/async-blocking-queue.ts":
/*!*******************************************!*\
  !*** ./src/utils/async-blocking-queue.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AsyncBlockingQueue: () => (/* binding */ AsyncBlockingQueue)\n/* harmony export */ });\nclass AsyncBlockingQueue {\n    constructor() {\n        this.resolvers = [];\n        this.promises = [];\n    }\n    enqueue(t) {\n        if (!this.resolvers.length) {\n            this.add();\n        }\n        const resolve = this.resolvers.shift();\n        resolve(t);\n    }\n    dequeue() {\n        if (!this.promises.length) {\n            this.add();\n        }\n        return this.promises.shift();\n    }\n    add() {\n        this.promises.push(new Promise(resolve => {\n            this.resolvers.push(resolve);\n        }));\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdXRpbHMvYXN5bmMtYmxvY2tpbmctcXVldWUudHMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3BvdHJlZS8uL3NyYy91dGlscy9hc3luYy1ibG9ja2luZy1xdWV1ZS50cz8zYjMzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjbGFzcyBBc3luY0Jsb2NraW5nUXVldWUge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLnJlc29sdmVycyA9IFtdO1xuICAgICAgICB0aGlzLnByb21pc2VzID0gW107XG4gICAgfVxuICAgIGVucXVldWUodCkge1xuICAgICAgICBpZiAoIXRoaXMucmVzb2x2ZXJzLmxlbmd0aCkge1xuICAgICAgICAgICAgdGhpcy5hZGQoKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCByZXNvbHZlID0gdGhpcy5yZXNvbHZlcnMuc2hpZnQoKTtcbiAgICAgICAgcmVzb2x2ZSh0KTtcbiAgICB9XG4gICAgZGVxdWV1ZSgpIHtcbiAgICAgICAgaWYgKCF0aGlzLnByb21pc2VzLmxlbmd0aCkge1xuICAgICAgICAgICAgdGhpcy5hZGQoKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy5wcm9taXNlcy5zaGlmdCgpO1xuICAgIH1cbiAgICBhZGQoKSB7XG4gICAgICAgIHRoaXMucHJvbWlzZXMucHVzaChuZXcgUHJvbWlzZShyZXNvbHZlID0+IHtcbiAgICAgICAgICAgIHRoaXMucmVzb2x2ZXJzLnB1c2gocmVzb2x2ZSk7XG4gICAgICAgIH0pKTtcbiAgICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/utils/async-blocking-queue.ts\n");

/***/ }),

/***/ "./src/utils/bounds.ts":
/*!*****************************!*\
  !*** ./src/utils/bounds.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   computeTransformedBoundingBox: () => (/* binding */ computeTransformedBoundingBox),\n/* harmony export */   createChildAABB: () => (/* binding */ createChildAABB)\n/* harmony export */ });\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ \"three\");\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(three__WEBPACK_IMPORTED_MODULE_0__);\n\n/**\n * adapted from mhluska at https://github.com/mrdoob/three.js/issues/1561\n */\nfunction computeTransformedBoundingBox(box, transform) {\n    return new three__WEBPACK_IMPORTED_MODULE_0__.Box3().setFromPoints([\n        new three__WEBPACK_IMPORTED_MODULE_0__.Vector3(box.min.x, box.min.y, box.min.z).applyMatrix4(transform),\n        new three__WEBPACK_IMPORTED_MODULE_0__.Vector3(box.min.x, box.min.y, box.min.z).applyMatrix4(transform),\n        new three__WEBPACK_IMPORTED_MODULE_0__.Vector3(box.max.x, box.min.y, box.min.z).applyMatrix4(transform),\n        new three__WEBPACK_IMPORTED_MODULE_0__.Vector3(box.min.x, box.max.y, box.min.z).applyMatrix4(transform),\n        new three__WEBPACK_IMPORTED_MODULE_0__.Vector3(box.min.x, box.min.y, box.max.z).applyMatrix4(transform),\n        new three__WEBPACK_IMPORTED_MODULE_0__.Vector3(box.min.x, box.max.y, box.max.z).applyMatrix4(transform),\n        new three__WEBPACK_IMPORTED_MODULE_0__.Vector3(box.max.x, box.max.y, box.min.z).applyMatrix4(transform),\n        new three__WEBPACK_IMPORTED_MODULE_0__.Vector3(box.max.x, box.min.y, box.max.z).applyMatrix4(transform),\n        new three__WEBPACK_IMPORTED_MODULE_0__.Vector3(box.max.x, box.max.y, box.max.z).applyMatrix4(transform),\n    ]);\n}\nfunction createChildAABB(aabb, index) {\n    const min = aabb.min.clone();\n    const max = aabb.max.clone();\n    const size = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3().subVectors(max, min);\n    // tslint:disable-next-line:no-bitwise\n    if ((index & 0b0001) > 0) {\n        min.z += size.z / 2;\n    }\n    else {\n        max.z -= size.z / 2;\n    }\n    // tslint:disable-next-line:no-bitwise\n    if ((index & 0b0010) > 0) {\n        min.y += size.y / 2;\n    }\n    else {\n        max.y -= size.y / 2;\n    }\n    // tslint:disable-next-line:no-bitwise\n    if ((index & 0b0100) > 0) {\n        min.x += size.x / 2;\n    }\n    else {\n        max.x -= size.x / 2;\n    }\n    return new three__WEBPACK_IMPORTED_MODULE_0__.Box3(min, max);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdXRpbHMvYm91bmRzLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG90cmVlLy4vc3JjL3V0aWxzL2JvdW5kcy50cz9kNTBlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJveDMsIFZlY3RvcjMgfSBmcm9tICd0aHJlZSc7XG4vKipcbiAqIGFkYXB0ZWQgZnJvbSBtaGx1c2thIGF0IGh0dHBzOi8vZ2l0aHViLmNvbS9tcmRvb2IvdGhyZWUuanMvaXNzdWVzLzE1NjFcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNvbXB1dGVUcmFuc2Zvcm1lZEJvdW5kaW5nQm94KGJveCwgdHJhbnNmb3JtKSB7XG4gICAgcmV0dXJuIG5ldyBCb3gzKCkuc2V0RnJvbVBvaW50cyhbXG4gICAgICAgIG5ldyBWZWN0b3IzKGJveC5taW4ueCwgYm94Lm1pbi55LCBib3gubWluLnopLmFwcGx5TWF0cml4NCh0cmFuc2Zvcm0pLFxuICAgICAgICBuZXcgVmVjdG9yMyhib3gubWluLngsIGJveC5taW4ueSwgYm94Lm1pbi56KS5hcHBseU1hdHJpeDQodHJhbnNmb3JtKSxcbiAgICAgICAgbmV3IFZlY3RvcjMoYm94Lm1heC54LCBib3gubWluLnksIGJveC5taW4ueikuYXBwbHlNYXRyaXg0KHRyYW5zZm9ybSksXG4gICAgICAgIG5ldyBWZWN0b3IzKGJveC5taW4ueCwgYm94Lm1heC55LCBib3gubWluLnopLmFwcGx5TWF0cml4NCh0cmFuc2Zvcm0pLFxuICAgICAgICBuZXcgVmVjdG9yMyhib3gubWluLngsIGJveC5taW4ueSwgYm94Lm1heC56KS5hcHBseU1hdHJpeDQodHJhbnNmb3JtKSxcbiAgICAgICAgbmV3IFZlY3RvcjMoYm94Lm1pbi54LCBib3gubWF4LnksIGJveC5tYXgueikuYXBwbHlNYXRyaXg0KHRyYW5zZm9ybSksXG4gICAgICAgIG5ldyBWZWN0b3IzKGJveC5tYXgueCwgYm94Lm1heC55LCBib3gubWluLnopLmFwcGx5TWF0cml4NCh0cmFuc2Zvcm0pLFxuICAgICAgICBuZXcgVmVjdG9yMyhib3gubWF4LngsIGJveC5taW4ueSwgYm94Lm1heC56KS5hcHBseU1hdHJpeDQodHJhbnNmb3JtKSxcbiAgICAgICAgbmV3IFZlY3RvcjMoYm94Lm1heC54LCBib3gubWF4LnksIGJveC5tYXgueikuYXBwbHlNYXRyaXg0KHRyYW5zZm9ybSksXG4gICAgXSk7XG59XG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlQ2hpbGRBQUJCKGFhYmIsIGluZGV4KSB7XG4gICAgY29uc3QgbWluID0gYWFiYi5taW4uY2xvbmUoKTtcbiAgICBjb25zdCBtYXggPSBhYWJiLm1heC5jbG9uZSgpO1xuICAgIGNvbnN0IHNpemUgPSBuZXcgVmVjdG9yMygpLnN1YlZlY3RvcnMobWF4LCBtaW4pO1xuICAgIC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTpuby1iaXR3aXNlXG4gICAgaWYgKChpbmRleCAmIDBiMDAwMSkgPiAwKSB7XG4gICAgICAgIG1pbi56ICs9IHNpemUueiAvIDI7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBtYXgueiAtPSBzaXplLnogLyAyO1xuICAgIH1cbiAgICAvLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6bm8tYml0d2lzZVxuICAgIGlmICgoaW5kZXggJiAwYjAwMTApID4gMCkge1xuICAgICAgICBtaW4ueSArPSBzaXplLnkgLyAyO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgbWF4LnkgLT0gc2l6ZS55IC8gMjtcbiAgICB9XG4gICAgLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOm5vLWJpdHdpc2VcbiAgICBpZiAoKGluZGV4ICYgMGIwMTAwKSA+IDApIHtcbiAgICAgICAgbWluLnggKz0gc2l6ZS54IC8gMjtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIG1heC54IC09IHNpemUueCAvIDI7XG4gICAgfVxuICAgIHJldHVybiBuZXcgQm94MyhtaW4sIG1heCk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/utils/bounds.ts\n");

/***/ }),

/***/ "./src/utils/box3-helper.ts":
/*!**********************************!*\
  !*** ./src/utils/box3-helper.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Box3Helper: () => (/* binding */ Box3Helper)\n/* harmony export */ });\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ \"three\");\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(three__WEBPACK_IMPORTED_MODULE_0__);\n\n/**\n *\n * code adapted from three.js BoxHelper.js\n * https://github.com/mrdoob/three.js/blob/dev/src/helpers/BoxHelper.js\n *\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / http://github.com/Mugen87\n * @author mschuetz / http://potree.org\n */\nclass Box3Helper extends three__WEBPACK_IMPORTED_MODULE_0__.LineSegments {\n    constructor(box, color = new three__WEBPACK_IMPORTED_MODULE_0__.Color(0xffff00)) {\n        // prettier-ignore\n        const indices = new Uint16Array([0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7]);\n        // prettier-ignore\n        const positions = new Float32Array([\n            box.min.x, box.min.y, box.min.z,\n            box.max.x, box.min.y, box.min.z,\n            box.max.x, box.min.y, box.max.z,\n            box.min.x, box.min.y, box.max.z,\n            box.min.x, box.max.y, box.min.z,\n            box.max.x, box.max.y, box.min.z,\n            box.max.x, box.max.y, box.max.z,\n            box.min.x, box.max.y, box.max.z\n        ]);\n        const geometry = new three__WEBPACK_IMPORTED_MODULE_0__.BufferGeometry();\n        geometry.setIndex(new three__WEBPACK_IMPORTED_MODULE_0__.BufferAttribute(indices, 1));\n        geometry.setAttribute('position', new three__WEBPACK_IMPORTED_MODULE_0__.BufferAttribute(positions, 3));\n        const material = new three__WEBPACK_IMPORTED_MODULE_0__.LineBasicMaterial({ color: color });\n        super(geometry, material);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdXRpbHMvYm94My1oZWxwZXIudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3BvdHJlZS8uL3NyYy91dGlscy9ib3gzLWhlbHBlci50cz83MWEwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJ1ZmZlckF0dHJpYnV0ZSwgQnVmZmVyR2VvbWV0cnksIENvbG9yLCBMaW5lQmFzaWNNYXRlcmlhbCwgTGluZVNlZ21lbnRzLCB9IGZyb20gJ3RocmVlJztcbi8qKlxuICpcbiAqIGNvZGUgYWRhcHRlZCBmcm9tIHRocmVlLmpzIEJveEhlbHBlci5qc1xuICogaHR0cHM6Ly9naXRodWIuY29tL21yZG9vYi90aHJlZS5qcy9ibG9iL2Rldi9zcmMvaGVscGVycy9Cb3hIZWxwZXIuanNcbiAqXG4gKiBAYXV0aG9yIG1yZG9vYiAvIGh0dHA6Ly9tcmRvb2IuY29tL1xuICogQGF1dGhvciBNdWdlbjg3IC8gaHR0cDovL2dpdGh1Yi5jb20vTXVnZW44N1xuICogQGF1dGhvciBtc2NodWV0eiAvIGh0dHA6Ly9wb3RyZWUub3JnXG4gKi9cbmV4cG9ydCBjbGFzcyBCb3gzSGVscGVyIGV4dGVuZHMgTGluZVNlZ21lbnRzIHtcbiAgICBjb25zdHJ1Y3Rvcihib3gsIGNvbG9yID0gbmV3IENvbG9yKDB4ZmZmZjAwKSkge1xuICAgICAgICAvLyBwcmV0dGllci1pZ25vcmVcbiAgICAgICAgY29uc3QgaW5kaWNlcyA9IG5ldyBVaW50MTZBcnJheShbMCwgMSwgMSwgMiwgMiwgMywgMywgMCwgNCwgNSwgNSwgNiwgNiwgNywgNywgNCwgMCwgNCwgMSwgNSwgMiwgNiwgMywgN10pO1xuICAgICAgICAvLyBwcmV0dGllci1pZ25vcmVcbiAgICAgICAgY29uc3QgcG9zaXRpb25zID0gbmV3IEZsb2F0MzJBcnJheShbXG4gICAgICAgICAgICBib3gubWluLngsIGJveC5taW4ueSwgYm94Lm1pbi56LFxuICAgICAgICAgICAgYm94Lm1heC54LCBib3gubWluLnksIGJveC5taW4ueixcbiAgICAgICAgICAgIGJveC5tYXgueCwgYm94Lm1pbi55LCBib3gubWF4LnosXG4gICAgICAgICAgICBib3gubWluLngsIGJveC5taW4ueSwgYm94Lm1heC56LFxuICAgICAgICAgICAgYm94Lm1pbi54LCBib3gubWF4LnksIGJveC5taW4ueixcbiAgICAgICAgICAgIGJveC5tYXgueCwgYm94Lm1heC55LCBib3gubWluLnosXG4gICAgICAgICAgICBib3gubWF4LngsIGJveC5tYXgueSwgYm94Lm1heC56LFxuICAgICAgICAgICAgYm94Lm1pbi54LCBib3gubWF4LnksIGJveC5tYXguelxuICAgICAgICBdKTtcbiAgICAgICAgY29uc3QgZ2VvbWV0cnkgPSBuZXcgQnVmZmVyR2VvbWV0cnkoKTtcbiAgICAgICAgZ2VvbWV0cnkuc2V0SW5kZXgobmV3IEJ1ZmZlckF0dHJpYnV0ZShpbmRpY2VzLCAxKSk7XG4gICAgICAgIGdlb21ldHJ5LnNldEF0dHJpYnV0ZSgncG9zaXRpb24nLCBuZXcgQnVmZmVyQXR0cmlidXRlKHBvc2l0aW9ucywgMykpO1xuICAgICAgICBjb25zdCBtYXRlcmlhbCA9IG5ldyBMaW5lQmFzaWNNYXRlcmlhbCh7IGNvbG9yOiBjb2xvciB9KTtcbiAgICAgICAgc3VwZXIoZ2VvbWV0cnksIG1hdGVyaWFsKTtcbiAgICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/utils/box3-helper.ts\n");

/***/ }),

/***/ "./src/utils/lru.ts":
/*!**************************!*\
  !*** ./src/utils/lru.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LRU: () => (/* binding */ LRU),\n/* harmony export */   LRUItem: () => (/* binding */ LRUItem)\n/* harmony export */ });\nclass LRUItem {\n    constructor(node) {\n        this.node = node;\n        this.next = null;\n        this.previous = null;\n    }\n}\n/**\n * A doubly-linked-list of the least recently used elements.\n */\nclass LRU {\n    constructor(pointBudget = 1000000) {\n        this.pointBudget = pointBudget;\n        // the least recently used item\n        this.first = null;\n        // the most recently used item\n        this.last = null;\n        this.numPoints = 0;\n        this.items = new Map();\n    }\n    get size() {\n        return this.items.size;\n    }\n    has(node) {\n        return this.items.has(node.id);\n    }\n    /**\n     * Makes the specified the most recently used item. if the list does not contain node, it will\n     * be added.\n     */\n    touch(node) {\n        if (!node.loaded) {\n            return;\n        }\n        const item = this.items.get(node.id);\n        if (item) {\n            this.touchExisting(item);\n        }\n        else {\n            this.addNew(node);\n        }\n    }\n    addNew(node) {\n        const item = new LRUItem(node);\n        item.previous = this.last;\n        this.last = item;\n        if (item.previous) {\n            item.previous.next = item;\n        }\n        if (!this.first) {\n            this.first = item;\n        }\n        this.items.set(node.id, item);\n        this.numPoints += node.numPoints;\n    }\n    touchExisting(item) {\n        if (!item.previous) {\n            // handle touch on first element\n            if (item.next) {\n                this.first = item.next;\n                this.first.previous = null;\n                item.previous = this.last;\n                item.next = null;\n                this.last = item;\n                if (item.previous) {\n                    item.previous.next = item;\n                }\n            }\n        }\n        else if (!item.next) {\n            // handle touch on last element\n        }\n        else {\n            // handle touch on any other element\n            item.previous.next = item.next;\n            item.next.previous = item.previous;\n            item.previous = this.last;\n            item.next = null;\n            this.last = item;\n            if (item.previous) {\n                item.previous.next = item;\n            }\n        }\n    }\n    remove(node) {\n        const item = this.items.get(node.id);\n        if (!item) {\n            return;\n        }\n        if (this.items.size === 1) {\n            this.first = null;\n            this.last = null;\n        }\n        else {\n            if (!item.previous) {\n                this.first = item.next;\n                this.first.previous = null;\n            }\n            if (!item.next) {\n                this.last = item.previous;\n                this.last.next = null;\n            }\n            if (item.previous && item.next) {\n                item.previous.next = item.next;\n                item.next.previous = item.previous;\n            }\n        }\n        this.items.delete(node.id);\n        this.numPoints -= node.numPoints;\n    }\n    getLRUItem() {\n        return this.first ? this.first.node : undefined;\n    }\n    freeMemory() {\n        if (this.items.size <= 1) {\n            return;\n        }\n        while (this.numPoints > this.pointBudget * 2) {\n            const node = this.getLRUItem();\n            if (node) {\n                this.disposeSubtree(node);\n            }\n        }\n    }\n    disposeSubtree(node) {\n        // Collect all the nodes which are to be disposed and removed.\n        const nodesToDispose = [node];\n        node.traverse(n => {\n            if (n.loaded) {\n                nodesToDispose.push(n);\n            }\n        });\n        // Dispose of all the nodes in one go.\n        for (const n of nodesToDispose) {\n            n.dispose();\n            this.remove(n);\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdXRpbHMvbHJ1LnRzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3RyZWUvLi9zcmMvdXRpbHMvbHJ1LnRzPzhlMGUiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNsYXNzIExSVUl0ZW0ge1xuICAgIGNvbnN0cnVjdG9yKG5vZGUpIHtcbiAgICAgICAgdGhpcy5ub2RlID0gbm9kZTtcbiAgICAgICAgdGhpcy5uZXh0ID0gbnVsbDtcbiAgICAgICAgdGhpcy5wcmV2aW91cyA9IG51bGw7XG4gICAgfVxufVxuLyoqXG4gKiBBIGRvdWJseS1saW5rZWQtbGlzdCBvZiB0aGUgbGVhc3QgcmVjZW50bHkgdXNlZCBlbGVtZW50cy5cbiAqL1xuZXhwb3J0IGNsYXNzIExSVSB7XG4gICAgY29uc3RydWN0b3IocG9pbnRCdWRnZXQgPSAxMDAwMDAwKSB7XG4gICAgICAgIHRoaXMucG9pbnRCdWRnZXQgPSBwb2ludEJ1ZGdldDtcbiAgICAgICAgLy8gdGhlIGxlYXN0IHJlY2VudGx5IHVzZWQgaXRlbVxuICAgICAgICB0aGlzLmZpcnN0ID0gbnVsbDtcbiAgICAgICAgLy8gdGhlIG1vc3QgcmVjZW50bHkgdXNlZCBpdGVtXG4gICAgICAgIHRoaXMubGFzdCA9IG51bGw7XG4gICAgICAgIHRoaXMubnVtUG9pbnRzID0gMDtcbiAgICAgICAgdGhpcy5pdGVtcyA9IG5ldyBNYXAoKTtcbiAgICB9XG4gICAgZ2V0IHNpemUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLml0ZW1zLnNpemU7XG4gICAgfVxuICAgIGhhcyhub2RlKSB7XG4gICAgICAgIHJldHVybiB0aGlzLml0ZW1zLmhhcyhub2RlLmlkKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogTWFrZXMgdGhlIHNwZWNpZmllZCB0aGUgbW9zdCByZWNlbnRseSB1c2VkIGl0ZW0uIGlmIHRoZSBsaXN0IGRvZXMgbm90IGNvbnRhaW4gbm9kZSwgaXQgd2lsbFxuICAgICAqIGJlIGFkZGVkLlxuICAgICAqL1xuICAgIHRvdWNoKG5vZGUpIHtcbiAgICAgICAgaWYgKCFub2RlLmxvYWRlZCkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGl0ZW0gPSB0aGlzLml0ZW1zLmdldChub2RlLmlkKTtcbiAgICAgICAgaWYgKGl0ZW0pIHtcbiAgICAgICAgICAgIHRoaXMudG91Y2hFeGlzdGluZyhpdGVtKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRoaXMuYWRkTmV3KG5vZGUpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGFkZE5ldyhub2RlKSB7XG4gICAgICAgIGNvbnN0IGl0ZW0gPSBuZXcgTFJVSXRlbShub2RlKTtcbiAgICAgICAgaXRlbS5wcmV2aW91cyA9IHRoaXMubGFzdDtcbiAgICAgICAgdGhpcy5sYXN0ID0gaXRlbTtcbiAgICAgICAgaWYgKGl0ZW0ucHJldmlvdXMpIHtcbiAgICAgICAgICAgIGl0ZW0ucHJldmlvdXMubmV4dCA9IGl0ZW07XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCF0aGlzLmZpcnN0KSB7XG4gICAgICAgICAgICB0aGlzLmZpcnN0ID0gaXRlbTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLml0ZW1zLnNldChub2RlLmlkLCBpdGVtKTtcbiAgICAgICAgdGhpcy5udW1Qb2ludHMgKz0gbm9kZS5udW1Qb2ludHM7XG4gICAgfVxuICAgIHRvdWNoRXhpc3RpbmcoaXRlbSkge1xuICAgICAgICBpZiAoIWl0ZW0ucHJldmlvdXMpIHtcbiAgICAgICAgICAgIC8vIGhhbmRsZSB0b3VjaCBvbiBmaXJzdCBlbGVtZW50XG4gICAgICAgICAgICBpZiAoaXRlbS5uZXh0KSB7XG4gICAgICAgICAgICAgICAgdGhpcy5maXJzdCA9IGl0ZW0ubmV4dDtcbiAgICAgICAgICAgICAgICB0aGlzLmZpcnN0LnByZXZpb3VzID0gbnVsbDtcbiAgICAgICAgICAgICAgICBpdGVtLnByZXZpb3VzID0gdGhpcy5sYXN0O1xuICAgICAgICAgICAgICAgIGl0ZW0ubmV4dCA9IG51bGw7XG4gICAgICAgICAgICAgICAgdGhpcy5sYXN0ID0gaXRlbTtcbiAgICAgICAgICAgICAgICBpZiAoaXRlbS5wcmV2aW91cykge1xuICAgICAgICAgICAgICAgICAgICBpdGVtLnByZXZpb3VzLm5leHQgPSBpdGVtO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICghaXRlbS5uZXh0KSB7XG4gICAgICAgICAgICAvLyBoYW5kbGUgdG91Y2ggb24gbGFzdCBlbGVtZW50XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAvLyBoYW5kbGUgdG91Y2ggb24gYW55IG90aGVyIGVsZW1lbnRcbiAgICAgICAgICAgIGl0ZW0ucHJldmlvdXMubmV4dCA9IGl0ZW0ubmV4dDtcbiAgICAgICAgICAgIGl0ZW0ubmV4dC5wcmV2aW91cyA9IGl0ZW0ucHJldmlvdXM7XG4gICAgICAgICAgICBpdGVtLnByZXZpb3VzID0gdGhpcy5sYXN0O1xuICAgICAgICAgICAgaXRlbS5uZXh0ID0gbnVsbDtcbiAgICAgICAgICAgIHRoaXMubGFzdCA9IGl0ZW07XG4gICAgICAgICAgICBpZiAoaXRlbS5wcmV2aW91cykge1xuICAgICAgICAgICAgICAgIGl0ZW0ucHJldmlvdXMubmV4dCA9IGl0ZW07XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmVtb3ZlKG5vZGUpIHtcbiAgICAgICAgY29uc3QgaXRlbSA9IHRoaXMuaXRlbXMuZ2V0KG5vZGUuaWQpO1xuICAgICAgICBpZiAoIWl0ZW0pIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5pdGVtcy5zaXplID09PSAxKSB7XG4gICAgICAgICAgICB0aGlzLmZpcnN0ID0gbnVsbDtcbiAgICAgICAgICAgIHRoaXMubGFzdCA9IG51bGw7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBpZiAoIWl0ZW0ucHJldmlvdXMpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmZpcnN0ID0gaXRlbS5uZXh0O1xuICAgICAgICAgICAgICAgIHRoaXMuZmlyc3QucHJldmlvdXMgPSBudWxsO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKCFpdGVtLm5leHQpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmxhc3QgPSBpdGVtLnByZXZpb3VzO1xuICAgICAgICAgICAgICAgIHRoaXMubGFzdC5uZXh0ID0gbnVsbDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChpdGVtLnByZXZpb3VzICYmIGl0ZW0ubmV4dCkge1xuICAgICAgICAgICAgICAgIGl0ZW0ucHJldmlvdXMubmV4dCA9IGl0ZW0ubmV4dDtcbiAgICAgICAgICAgICAgICBpdGVtLm5leHQucHJldmlvdXMgPSBpdGVtLnByZXZpb3VzO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHRoaXMuaXRlbXMuZGVsZXRlKG5vZGUuaWQpO1xuICAgICAgICB0aGlzLm51bVBvaW50cyAtPSBub2RlLm51bVBvaW50cztcbiAgICB9XG4gICAgZ2V0TFJVSXRlbSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZmlyc3QgPyB0aGlzLmZpcnN0Lm5vZGUgOiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIGZyZWVNZW1vcnkoKSB7XG4gICAgICAgIGlmICh0aGlzLml0ZW1zLnNpemUgPD0gMSkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHdoaWxlICh0aGlzLm51bVBvaW50cyA+IHRoaXMucG9pbnRCdWRnZXQgKiAyKSB7XG4gICAgICAgICAgICBjb25zdCBub2RlID0gdGhpcy5nZXRMUlVJdGVtKCk7XG4gICAgICAgICAgICBpZiAobm9kZSkge1xuICAgICAgICAgICAgICAgIHRoaXMuZGlzcG9zZVN1YnRyZWUobm9kZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgZGlzcG9zZVN1YnRyZWUobm9kZSkge1xuICAgICAgICAvLyBDb2xsZWN0IGFsbCB0aGUgbm9kZXMgd2hpY2ggYXJlIHRvIGJlIGRpc3Bvc2VkIGFuZCByZW1vdmVkLlxuICAgICAgICBjb25zdCBub2Rlc1RvRGlzcG9zZSA9IFtub2RlXTtcbiAgICAgICAgbm9kZS50cmF2ZXJzZShuID0+IHtcbiAgICAgICAgICAgIGlmIChuLmxvYWRlZCkge1xuICAgICAgICAgICAgICAgIG5vZGVzVG9EaXNwb3NlLnB1c2gobik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICAvLyBEaXNwb3NlIG9mIGFsbCB0aGUgbm9kZXMgaW4gb25lIGdvLlxuICAgICAgICBmb3IgKGNvbnN0IG4gb2Ygbm9kZXNUb0Rpc3Bvc2UpIHtcbiAgICAgICAgICAgIG4uZGlzcG9zZSgpO1xuICAgICAgICAgICAgdGhpcy5yZW1vdmUobik7XG4gICAgICAgIH1cbiAgICB9XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/utils/lru.ts\n");

/***/ }),

/***/ "./src/utils/math.ts":
/*!***************************!*\
  !*** ./src/utils/math.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   clamp: () => (/* binding */ clamp)\n/* harmony export */ });\nfunction clamp(value, min, max) {\n    return Math.min(Math.max(min, value), max);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdXRpbHMvbWF0aC50cyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG90cmVlLy4vc3JjL3V0aWxzL21hdGgudHM/NjFmOCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gY2xhbXAodmFsdWUsIG1pbiwgbWF4KSB7XG4gICAgcmV0dXJuIE1hdGgubWluKE1hdGgubWF4KG1pbiwgdmFsdWUpLCBtYXgpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/utils/math.ts\n");

/***/ }),

/***/ "./src/utils/utils.ts":
/*!****************************!*\
  !*** ./src/utils/utils.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   byLevelAndIndex: () => (/* binding */ byLevelAndIndex),\n/* harmony export */   getIndexFromName: () => (/* binding */ getIndexFromName),\n/* harmony export */   handleEmptyBuffer: () => (/* binding */ handleEmptyBuffer),\n/* harmony export */   handleFailedRequest: () => (/* binding */ handleFailedRequest)\n/* harmony export */ });\nfunction getIndexFromName(name) {\n    return parseInt(name.charAt(name.length - 1), 10);\n}\n/**\n * When passed to `[].sort`, sorts the array by level and index: r, r0, r3, r4, r01, r07, r30, ...\n */\nfunction byLevelAndIndex(a, b) {\n    const na = a.name;\n    const nb = b.name;\n    if (na.length !== nb.length) {\n        return na.length - nb.length;\n    }\n    else if (na < nb) {\n        return -1;\n    }\n    else if (na > nb) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}\nfunction handleFailedRequest(response) {\n    if (response.status !== 200) {\n        throw Error('Response error');\n    }\n    return response;\n}\nfunction handleEmptyBuffer(buffer) {\n    if (!buffer || buffer.byteLength === 0) {\n        throw Error('Empty buffer');\n    }\n    return buffer;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdXRpbHMvdXRpbHMudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG90cmVlLy4vc3JjL3V0aWxzL3V0aWxzLnRzPzU2MjIiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIGdldEluZGV4RnJvbU5hbWUobmFtZSkge1xuICAgIHJldHVybiBwYXJzZUludChuYW1lLmNoYXJBdChuYW1lLmxlbmd0aCAtIDEpLCAxMCk7XG59XG4vKipcbiAqIFdoZW4gcGFzc2VkIHRvIGBbXS5zb3J0YCwgc29ydHMgdGhlIGFycmF5IGJ5IGxldmVsIGFuZCBpbmRleDogciwgcjAsIHIzLCByNCwgcjAxLCByMDcsIHIzMCwgLi4uXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBieUxldmVsQW5kSW5kZXgoYSwgYikge1xuICAgIGNvbnN0IG5hID0gYS5uYW1lO1xuICAgIGNvbnN0IG5iID0gYi5uYW1lO1xuICAgIGlmIChuYS5sZW5ndGggIT09IG5iLmxlbmd0aCkge1xuICAgICAgICByZXR1cm4gbmEubGVuZ3RoIC0gbmIubGVuZ3RoO1xuICAgIH1cbiAgICBlbHNlIGlmIChuYSA8IG5iKSB7XG4gICAgICAgIHJldHVybiAtMTtcbiAgICB9XG4gICAgZWxzZSBpZiAobmEgPiBuYikge1xuICAgICAgICByZXR1cm4gMTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHJldHVybiAwO1xuICAgIH1cbn1cbmV4cG9ydCBmdW5jdGlvbiBoYW5kbGVGYWlsZWRSZXF1ZXN0KHJlc3BvbnNlKSB7XG4gICAgaWYgKHJlc3BvbnNlLnN0YXR1cyAhPT0gMjAwKSB7XG4gICAgICAgIHRocm93IEVycm9yKCdSZXNwb25zZSBlcnJvcicpO1xuICAgIH1cbiAgICByZXR1cm4gcmVzcG9uc2U7XG59XG5leHBvcnQgZnVuY3Rpb24gaGFuZGxlRW1wdHlCdWZmZXIoYnVmZmVyKSB7XG4gICAgaWYgKCFidWZmZXIgfHwgYnVmZmVyLmJ5dGVMZW5ndGggPT09IDApIHtcbiAgICAgICAgdGhyb3cgRXJyb3IoJ0VtcHR5IGJ1ZmZlcicpO1xuICAgIH1cbiAgICByZXR1cm4gYnVmZmVyO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/utils/utils.ts\n");

/***/ }),

/***/ "./src/utils/worker-pool.ts":
/*!**********************************!*\
  !*** ./src/utils/worker-pool.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AutoTerminatingWorker: () => (/* binding */ AutoTerminatingWorker),\n/* harmony export */   WorkerPool: () => (/* binding */ WorkerPool)\n/* harmony export */ });\n/* harmony import */ var _async_blocking_queue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./async-blocking-queue */ \"./src/utils/async-blocking-queue.ts\");\n\nclass AutoTerminatingWorker {\n    constructor(wrappedWorker, maxIdle) {\n        this.wrappedWorker = wrappedWorker;\n        this.maxIdle = maxIdle;\n        this.timeoutId = undefined;\n        this.terminated = false;\n    }\n    get worker() {\n        return this.wrappedWorker;\n    }\n    get isTerminated() {\n        return this.terminated;\n    }\n    markIdle() {\n        this.timeoutId = window.setTimeout(() => {\n            this.terminated = true;\n            this.wrappedWorker.terminate();\n        }, this.maxIdle);\n    }\n    markInUse() {\n        if (this.timeoutId) {\n            window.clearTimeout(this.timeoutId);\n        }\n    }\n}\nclass WorkerPool {\n    constructor(maxWorkers, workerType) {\n        this.maxWorkers = maxWorkers;\n        this.workerType = workerType;\n        this.pool = new _async_blocking_queue__WEBPACK_IMPORTED_MODULE_0__.AsyncBlockingQueue();\n        this.poolSize = 0;\n    }\n    /**\n     * Returns a worker promise which is resolved when one is available.\n     */\n    getWorker() {\n        // If the number of active workers is smaller than the maximum, return a new one.\n        // Otherwise, return a promise for worker from the pool.\n        if (this.poolSize < this.maxWorkers) {\n            this.poolSize++;\n            return Promise.resolve(new AutoTerminatingWorker(new this.workerType(), WorkerPool.POOL_MAX_IDLE));\n        }\n        else {\n            return this.pool.dequeue().then(worker => {\n                worker.markInUse();\n                // If the dequeued worker has been terminated, decrease the pool size and make a recursive call to get a new worker\n                if (worker.isTerminated) {\n                    this.poolSize--;\n                    return this.getWorker();\n                }\n                return worker;\n            });\n        }\n    }\n    /**\n     * Releases a Worker back into the pool\n     * @param worker\n     */\n    releaseWorker(worker) {\n        worker.markIdle();\n        this.pool.enqueue(worker);\n    }\n}\n/**\n * The maximum amount of idle time that can elapse before a worker from this pool is automatically terminated\n */\nWorkerPool.POOL_MAX_IDLE = 7000;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdXRpbHMvd29ya2VyLXBvb2wudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3BvdHJlZS8uL3NyYy91dGlscy93b3JrZXItcG9vbC50cz8zNmJmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFzeW5jQmxvY2tpbmdRdWV1ZSB9IGZyb20gJy4vYXN5bmMtYmxvY2tpbmctcXVldWUnO1xuZXhwb3J0IGNsYXNzIEF1dG9UZXJtaW5hdGluZ1dvcmtlciB7XG4gICAgY29uc3RydWN0b3Iod3JhcHBlZFdvcmtlciwgbWF4SWRsZSkge1xuICAgICAgICB0aGlzLndyYXBwZWRXb3JrZXIgPSB3cmFwcGVkV29ya2VyO1xuICAgICAgICB0aGlzLm1heElkbGUgPSBtYXhJZGxlO1xuICAgICAgICB0aGlzLnRpbWVvdXRJZCA9IHVuZGVmaW5lZDtcbiAgICAgICAgdGhpcy50ZXJtaW5hdGVkID0gZmFsc2U7XG4gICAgfVxuICAgIGdldCB3b3JrZXIoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLndyYXBwZWRXb3JrZXI7XG4gICAgfVxuICAgIGdldCBpc1Rlcm1pbmF0ZWQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnRlcm1pbmF0ZWQ7XG4gICAgfVxuICAgIG1hcmtJZGxlKCkge1xuICAgICAgICB0aGlzLnRpbWVvdXRJZCA9IHdpbmRvdy5zZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgIHRoaXMudGVybWluYXRlZCA9IHRydWU7XG4gICAgICAgICAgICB0aGlzLndyYXBwZWRXb3JrZXIudGVybWluYXRlKCk7XG4gICAgICAgIH0sIHRoaXMubWF4SWRsZSk7XG4gICAgfVxuICAgIG1hcmtJblVzZSgpIHtcbiAgICAgICAgaWYgKHRoaXMudGltZW91dElkKSB7XG4gICAgICAgICAgICB3aW5kb3cuY2xlYXJUaW1lb3V0KHRoaXMudGltZW91dElkKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbmV4cG9ydCBjbGFzcyBXb3JrZXJQb29sIHtcbiAgICBjb25zdHJ1Y3RvcihtYXhXb3JrZXJzLCB3b3JrZXJUeXBlKSB7XG4gICAgICAgIHRoaXMubWF4V29ya2VycyA9IG1heFdvcmtlcnM7XG4gICAgICAgIHRoaXMud29ya2VyVHlwZSA9IHdvcmtlclR5cGU7XG4gICAgICAgIHRoaXMucG9vbCA9IG5ldyBBc3luY0Jsb2NraW5nUXVldWUoKTtcbiAgICAgICAgdGhpcy5wb29sU2l6ZSA9IDA7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJldHVybnMgYSB3b3JrZXIgcHJvbWlzZSB3aGljaCBpcyByZXNvbHZlZCB3aGVuIG9uZSBpcyBhdmFpbGFibGUuXG4gICAgICovXG4gICAgZ2V0V29ya2VyKCkge1xuICAgICAgICAvLyBJZiB0aGUgbnVtYmVyIG9mIGFjdGl2ZSB3b3JrZXJzIGlzIHNtYWxsZXIgdGhhbiB0aGUgbWF4aW11bSwgcmV0dXJuIGEgbmV3IG9uZS5cbiAgICAgICAgLy8gT3RoZXJ3aXNlLCByZXR1cm4gYSBwcm9taXNlIGZvciB3b3JrZXIgZnJvbSB0aGUgcG9vbC5cbiAgICAgICAgaWYgKHRoaXMucG9vbFNpemUgPCB0aGlzLm1heFdvcmtlcnMpIHtcbiAgICAgICAgICAgIHRoaXMucG9vbFNpemUrKztcbiAgICAgICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUobmV3IEF1dG9UZXJtaW5hdGluZ1dvcmtlcihuZXcgdGhpcy53b3JrZXJUeXBlKCksIFdvcmtlclBvb2wuUE9PTF9NQVhfSURMRSkpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMucG9vbC5kZXF1ZXVlKCkudGhlbih3b3JrZXIgPT4ge1xuICAgICAgICAgICAgICAgIHdvcmtlci5tYXJrSW5Vc2UoKTtcbiAgICAgICAgICAgICAgICAvLyBJZiB0aGUgZGVxdWV1ZWQgd29ya2VyIGhhcyBiZWVuIHRlcm1pbmF0ZWQsIGRlY3JlYXNlIHRoZSBwb29sIHNpemUgYW5kIG1ha2UgYSByZWN1cnNpdmUgY2FsbCB0byBnZXQgYSBuZXcgd29ya2VyXG4gICAgICAgICAgICAgICAgaWYgKHdvcmtlci5pc1Rlcm1pbmF0ZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5wb29sU2l6ZS0tO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5nZXRXb3JrZXIoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIHdvcmtlcjtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFJlbGVhc2VzIGEgV29ya2VyIGJhY2sgaW50byB0aGUgcG9vbFxuICAgICAqIEBwYXJhbSB3b3JrZXJcbiAgICAgKi9cbiAgICByZWxlYXNlV29ya2VyKHdvcmtlcikge1xuICAgICAgICB3b3JrZXIubWFya0lkbGUoKTtcbiAgICAgICAgdGhpcy5wb29sLmVucXVldWUod29ya2VyKTtcbiAgICB9XG59XG4vKipcbiAqIFRoZSBtYXhpbXVtIGFtb3VudCBvZiBpZGxlIHRpbWUgdGhhdCBjYW4gZWxhcHNlIGJlZm9yZSBhIHdvcmtlciBmcm9tIHRoaXMgcG9vbCBpcyBhdXRvbWF0aWNhbGx5IHRlcm1pbmF0ZWRcbiAqL1xuV29ya2VyUG9vbC5QT09MX01BWF9JRExFID0gNzAwMDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/utils/worker-pool.ts\n");

/***/ }),

/***/ "./src/version.ts":
/*!************************!*\
  !*** ./src/version.ts ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Version: () => (/* binding */ Version)\n/* harmony export */ });\nclass Version {\n    constructor(version) {\n        this.versionMinor = 0;\n        this.version = version;\n        const vmLength = version.indexOf('.') === -1 ? version.length : version.indexOf('.');\n        this.versionMajor = parseInt(version.substr(0, vmLength), 10);\n        this.versionMinor = parseInt(version.substr(vmLength + 1), 10);\n        if (isNaN(this.versionMinor)) {\n            this.versionMinor = 0;\n        }\n    }\n    newerThan(version) {\n        const v = new Version(version);\n        if (this.versionMajor > v.versionMajor) {\n            return true;\n        }\n        else if (this.versionMajor === v.versionMajor && this.versionMinor > v.versionMinor) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    equalOrHigher(version) {\n        const v = new Version(version);\n        if (this.versionMajor > v.versionMajor) {\n            return true;\n        }\n        else if (this.versionMajor === v.versionMajor && this.versionMinor >= v.versionMinor) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    upTo(version) {\n        return !this.newerThan(version);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdmVyc2lvbi50cyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG90cmVlLy4vc3JjL3ZlcnNpb24udHM/MTAyOSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY2xhc3MgVmVyc2lvbiB7XG4gICAgY29uc3RydWN0b3IodmVyc2lvbikge1xuICAgICAgICB0aGlzLnZlcnNpb25NaW5vciA9IDA7XG4gICAgICAgIHRoaXMudmVyc2lvbiA9IHZlcnNpb247XG4gICAgICAgIGNvbnN0IHZtTGVuZ3RoID0gdmVyc2lvbi5pbmRleE9mKCcuJykgPT09IC0xID8gdmVyc2lvbi5sZW5ndGggOiB2ZXJzaW9uLmluZGV4T2YoJy4nKTtcbiAgICAgICAgdGhpcy52ZXJzaW9uTWFqb3IgPSBwYXJzZUludCh2ZXJzaW9uLnN1YnN0cigwLCB2bUxlbmd0aCksIDEwKTtcbiAgICAgICAgdGhpcy52ZXJzaW9uTWlub3IgPSBwYXJzZUludCh2ZXJzaW9uLnN1YnN0cih2bUxlbmd0aCArIDEpLCAxMCk7XG4gICAgICAgIGlmIChpc05hTih0aGlzLnZlcnNpb25NaW5vcikpIHtcbiAgICAgICAgICAgIHRoaXMudmVyc2lvbk1pbm9yID0gMDtcbiAgICAgICAgfVxuICAgIH1cbiAgICBuZXdlclRoYW4odmVyc2lvbikge1xuICAgICAgICBjb25zdCB2ID0gbmV3IFZlcnNpb24odmVyc2lvbik7XG4gICAgICAgIGlmICh0aGlzLnZlcnNpb25NYWpvciA+IHYudmVyc2lvbk1ham9yKSB7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICh0aGlzLnZlcnNpb25NYWpvciA9PT0gdi52ZXJzaW9uTWFqb3IgJiYgdGhpcy52ZXJzaW9uTWlub3IgPiB2LnZlcnNpb25NaW5vcikge1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZXF1YWxPckhpZ2hlcih2ZXJzaW9uKSB7XG4gICAgICAgIGNvbnN0IHYgPSBuZXcgVmVyc2lvbih2ZXJzaW9uKTtcbiAgICAgICAgaWYgKHRoaXMudmVyc2lvbk1ham9yID4gdi52ZXJzaW9uTWFqb3IpIHtcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKHRoaXMudmVyc2lvbk1ham9yID09PSB2LnZlcnNpb25NYWpvciAmJiB0aGlzLnZlcnNpb25NaW5vciA+PSB2LnZlcnNpb25NaW5vcikge1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICB9XG4gICAgdXBUbyh2ZXJzaW9uKSB7XG4gICAgICAgIHJldHVybiAhdGhpcy5uZXdlclRoYW4odmVyc2lvbik7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/version.ts\n");

/***/ }),

/***/ "./src/loading2/decoder.worker.js":
/*!****************************************!*\
  !*** ./src/loading2/decoder.worker.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Worker_fn)\n/* harmony export */ });\n/* harmony import */ var _node_modules_worker_loader_dist_runtime_inline_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !!../../node_modules/worker-loader/dist/runtime/inline.js */ \"./node_modules/worker-loader/dist/runtime/inline.js\");\n/* harmony import */ var _node_modules_worker_loader_dist_runtime_inline_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_worker_loader_dist_runtime_inline_js__WEBPACK_IMPORTED_MODULE_0__);\n\n\n\nfunction Worker_fn() {\n  return _node_modules_worker_loader_dist_runtime_inline_js__WEBPACK_IMPORTED_MODULE_0___default()(\"/*\\n * ATTENTION: An \\\"eval-source-map\\\" devtool has been used.\\n * This devtool is neither made for production nor for readable output files.\\n * It uses \\\"eval()\\\" calls to create a separate source file with attached SourceMaps in the browser devtools.\\n * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)\\n * or disable the default devtool with \\\"devtool: false\\\".\\n * If you are looking for production-ready output files, see mode: \\\"production\\\" (https://webpack.js.org/configuration/mode/).\\n */\\n/******/ (() => { // webpackBootstrap\\n/******/ \\t\\\"use strict\\\";\\n/******/ \\tvar __webpack_modules__ = ({\\n\\n/***/ \\\"./node_modules/babel-loader/lib/index.js!./src/loading2/decoder.worker.js\\\":\\n/*!*********************************************************************************!*\\\\\\n  !*** ./node_modules/babel-loader/lib/index.js!./src/loading2/decoder.worker.js ***!\\n  \\\\*********************************************************************************/\\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\\n\\neval(\\\"__webpack_require__.r(__webpack_exports__);\\\\n/* harmony import */ var _point_attributes_ts__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./point-attributes.ts */ \\\\\\\"./src/loading2/point-attributes.ts\\\\\\\");\\\\nfunction _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }\\\\nfunction _nonIterableRest() { throw new TypeError(\\\\\\\"Invalid attempt to destructure non-iterable instance.\\\\\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\\\\\\\"); }\\\\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \\\\\\\"undefined\\\\\\\" != typeof Symbol && r[Symbol.iterator] || r[\\\\\\\"@@iterator\\\\\\\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\\\\nfunction _arrayWithHoles(r) { if (Array.isArray(r)) return r; }\\\\nfunction _createForOfIteratorHelper(r, e) { var t = \\\\\\\"undefined\\\\\\\" != typeof Symbol && r[Symbol.iterator] || r[\\\\\\\"@@iterator\\\\\\\"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && \\\\\\\"number\\\\\\\" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError(\\\\\\\"Invalid attempt to iterate non-iterable instance.\\\\\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\\\\\\\"); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t.return || t.return(); } finally { if (u) throw o; } } }; }\\\\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\\\\\\\"string\\\\\\\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \\\\\\\"Object\\\\\\\" === t && r.constructor && (t = r.constructor.name), \\\\\\\"Map\\\\\\\" === t || \\\\\\\"Set\\\\\\\" === t ? Array.from(r) : \\\\\\\"Arguments\\\\\\\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\\\\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\\\\n\\\\nvar typedArrayMapping = {\\\\n  'int8': Int8Array,\\\\n  'int16': Int16Array,\\\\n  'int32': Int32Array,\\\\n  'int64': Float64Array,\\\\n  'uint8': Uint8Array,\\\\n  'uint16': Uint16Array,\\\\n  'uint32': Uint32Array,\\\\n  'uint64': Float64Array,\\\\n  'float': Float32Array,\\\\n  'double': Float64Array\\\\n};\\\\nonmessage = function onmessage(event) {\\\\n  var _event$data = event.data,\\\\n    buffer = _event$data.buffer,\\\\n    pointAttributes = _event$data.pointAttributes,\\\\n    scale = _event$data.scale,\\\\n    name = _event$data.name,\\\\n    min = _event$data.min,\\\\n    max = _event$data.max,\\\\n    size = _event$data.size,\\\\n    offset = _event$data.offset,\\\\n    numPoints = _event$data.numPoints;\\\\n  var view = new DataView(buffer);\\\\n  var attributeBuffers = {};\\\\n  var attributeOffset = 0;\\\\n  var bytesPerPoint = 0;\\\\n  var _iterator = _createForOfIteratorHelper(pointAttributes.attributes),\\\\n    _step;\\\\n  try {\\\\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\\\\n      var pointAttribute = _step.value;\\\\n      bytesPerPoint += pointAttribute.byteSize;\\\\n    }\\\\n  } catch (err) {\\\\n    _iterator.e(err);\\\\n  } finally {\\\\n    _iterator.f();\\\\n  }\\\\n  var gridSize = 32;\\\\n  var grid = new Uint32Array(Math.pow(gridSize, 3));\\\\n  var toIndex = function toIndex(x, y, z) {\\\\n    // min is already subtracted\\\\n    var dx = gridSize * x / size.x;\\\\n    var dy = gridSize * y / size.y;\\\\n    var dz = gridSize * z / size.z;\\\\n    var ix = Math.min(parseInt(dx), gridSize - 1);\\\\n    var iy = Math.min(parseInt(dy), gridSize - 1);\\\\n    var iz = Math.min(parseInt(dz), gridSize - 1);\\\\n    var index = ix + iy * gridSize + iz * gridSize * gridSize;\\\\n    return index;\\\\n  };\\\\n  var numOccupiedCells = 0;\\\\n  var tightBoxMin = [Number.POSITIVE_INFINITY, Number.POSITIVE_INFINITY, Number.POSITIVE_INFINITY];\\\\n  var tightBoxMax = [Number.NEGATIVE_INFINITY, Number.NEGATIVE_INFINITY, Number.NEGATIVE_INFINITY];\\\\n  var _iterator2 = _createForOfIteratorHelper(pointAttributes.attributes),\\\\n    _step2;\\\\n  try {\\\\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\\\\n      var _pointAttribute = _step2.value;\\\\n      if (['POSITION_CARTESIAN', 'position'].includes(_pointAttribute.name)) {\\\\n        var _buff = new ArrayBuffer(numPoints * 4 * 3);\\\\n        var positions = new Float32Array(_buff);\\\\n        for (var _j = 0; _j < numPoints; _j++) {\\\\n          var pointOffset = _j * bytesPerPoint;\\\\n          var x = view.getInt32(pointOffset + attributeOffset + 0, true) * scale[0] + offset[0] - min.x;\\\\n          var y = view.getInt32(pointOffset + attributeOffset + 4, true) * scale[1] + offset[1] - min.y;\\\\n          var z = view.getInt32(pointOffset + attributeOffset + 8, true) * scale[2] + offset[2] - min.z;\\\\n          tightBoxMin[0] = Math.min(tightBoxMin[0], x);\\\\n          tightBoxMin[1] = Math.min(tightBoxMin[1], y);\\\\n          tightBoxMin[2] = Math.min(tightBoxMin[2], z);\\\\n          tightBoxMax[0] = Math.max(tightBoxMax[0], x);\\\\n          tightBoxMax[1] = Math.max(tightBoxMax[1], y);\\\\n          tightBoxMax[2] = Math.max(tightBoxMax[2], z);\\\\n          var index = toIndex(x, y, z);\\\\n          var count = grid[index]++;\\\\n          if (count === 0) {\\\\n            numOccupiedCells++;\\\\n          }\\\\n          positions[3 * _j + 0] = x;\\\\n          positions[3 * _j + 1] = y;\\\\n          positions[3 * _j + 2] = z;\\\\n        }\\\\n        attributeBuffers[_pointAttribute.name] = {\\\\n          buffer: _buff,\\\\n          attribute: _pointAttribute\\\\n        };\\\\n      } else if (['RGBA', 'rgba'].includes(_pointAttribute.name)) {\\\\n        var _buff2 = new ArrayBuffer(numPoints * 4);\\\\n        var colors = new Uint8Array(_buff2);\\\\n        for (var _j2 = 0; _j2 < numPoints; _j2++) {\\\\n          var _pointOffset = _j2 * bytesPerPoint;\\\\n          var r = view.getUint16(_pointOffset + attributeOffset + 0, true);\\\\n          var g = view.getUint16(_pointOffset + attributeOffset + 2, true);\\\\n          var b = view.getUint16(_pointOffset + attributeOffset + 4, true);\\\\n          colors[4 * _j2 + 0] = r > 255 ? r / 256 : r;\\\\n          colors[4 * _j2 + 1] = g > 255 ? g / 256 : g;\\\\n          colors[4 * _j2 + 2] = b > 255 ? b / 256 : b;\\\\n        }\\\\n        attributeBuffers[_pointAttribute.name] = {\\\\n          buffer: _buff2,\\\\n          attribute: _pointAttribute\\\\n        };\\\\n      } else {\\\\n        var _buff3 = new ArrayBuffer(numPoints * 4);\\\\n        var _f = new Float32Array(_buff3);\\\\n        var TypedArray = typedArrayMapping[_pointAttribute.type.name];\\\\n        var preciseBuffer = new TypedArray(numPoints);\\\\n        var _offset2 = 0,\\\\n          _scale2 = 1;\\\\n        var getterMap = {\\\\n          'int8': view.getInt8,\\\\n          'int16': view.getInt16,\\\\n          'int32': view.getInt32,\\\\n          // 'int64':  view.getInt64,\\\\n          'uint8': view.getUint8,\\\\n          'uint16': view.getUint16,\\\\n          'uint32': view.getUint32,\\\\n          // 'uint64': view.getUint64,\\\\n          'float': view.getFloat32,\\\\n          'double': view.getFloat64\\\\n        };\\\\n        var _getter = getterMap[_pointAttribute.type.name].bind(view);\\\\n\\\\n        // compute offset and scale to pack larger types into 32 bit floats\\\\n        if (_pointAttribute.type.size > 4) {\\\\n          var _pointAttribute$range = _slicedToArray(_pointAttribute.range, 2),\\\\n            amin = _pointAttribute$range[0],\\\\n            amax = _pointAttribute$range[1];\\\\n          _offset2 = amin;\\\\n          _scale2 = 1 / (amax - amin);\\\\n        }\\\\n        for (var _j3 = 0; _j3 < numPoints; _j3++) {\\\\n          var _pointOffset2 = _j3 * bytesPerPoint;\\\\n          var _value = _getter(_pointOffset2 + attributeOffset, true);\\\\n          _f[_j3] = (_value - _offset2) * _scale2;\\\\n          preciseBuffer[_j3] = _value;\\\\n        }\\\\n        attributeBuffers[_pointAttribute.name] = {\\\\n          buffer: _buff3,\\\\n          preciseBuffer: preciseBuffer,\\\\n          attribute: _pointAttribute,\\\\n          offset: _offset2,\\\\n          scale: _scale2\\\\n        };\\\\n      }\\\\n      attributeOffset += _pointAttribute.byteSize;\\\\n    }\\\\n  } catch (err) {\\\\n    _iterator2.e(err);\\\\n  } finally {\\\\n    _iterator2.f();\\\\n  }\\\\n  var occupancy = parseInt(numPoints / numOccupiedCells);\\\\n  {\\\\n    // add indices\\\\n    var buff = new ArrayBuffer(numPoints * 4);\\\\n    var indices = new Uint32Array(buff);\\\\n    for (var i = 0; i < numPoints; i++) {\\\\n      indices[i] = i;\\\\n    }\\\\n    attributeBuffers['INDICES'] = {\\\\n      buffer: buff,\\\\n      attribute: _point_attributes_ts__WEBPACK_IMPORTED_MODULE_0__.PointAttribute.INDICES\\\\n    };\\\\n  }\\\\n  {\\\\n    // handle attribute vectors\\\\n    var vectors = pointAttributes.vectors;\\\\n    var _iterator3 = _createForOfIteratorHelper(vectors),\\\\n      _step3;\\\\n    try {\\\\n      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\\\\n        var vector = _step3.value;\\\\n        var _name = vector.name,\\\\n          attributes = vector.attributes;\\\\n        var numVectorElements = attributes.length;\\\\n        var _buffer = new ArrayBuffer(numVectorElements * numPoints * 4);\\\\n        var f32 = new Float32Array(_buffer);\\\\n        var iElement = 0;\\\\n        var _iterator4 = _createForOfIteratorHelper(attributes),\\\\n          _step4;\\\\n        try {\\\\n          for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\\\\n            var sourceName = _step4.value;\\\\n            var sourceBuffer = attributeBuffers[sourceName];\\\\n            var _offset = sourceBuffer.offset,\\\\n              _scale = sourceBuffer.scale;\\\\n            var _view = new DataView(sourceBuffer.buffer);\\\\n            var getter = _view.getFloat32.bind(_view);\\\\n            for (var j = 0; j < numPoints; j++) {\\\\n              var value = getter(j * 4, true);\\\\n              f32[j * numVectorElements + iElement] = value / _scale + _offset;\\\\n            }\\\\n            iElement++;\\\\n          }\\\\n        } catch (err) {\\\\n          _iterator4.e(err);\\\\n        } finally {\\\\n          _iterator4.f();\\\\n        }\\\\n        var vecAttribute = new _point_attributes_ts__WEBPACK_IMPORTED_MODULE_0__.PointAttribute(_name, _point_attributes_ts__WEBPACK_IMPORTED_MODULE_0__.PointAttributeTypes.DATA_TYPE_FLOAT, 3);\\\\n        attributeBuffers[_name] = {\\\\n          buffer: _buffer,\\\\n          attribute: vecAttribute\\\\n        };\\\\n      }\\\\n    } catch (err) {\\\\n      _iterator3.e(err);\\\\n    } finally {\\\\n      _iterator3.f();\\\\n    }\\\\n  }\\\\n  var message = {\\\\n    buffer: buffer,\\\\n    attributeBuffers: attributeBuffers,\\\\n    density: occupancy,\\\\n    tightBoundingBox: {\\\\n      min: tightBoxMin,\\\\n      max: tightBoxMax\\\\n    }\\\\n  };\\\\n  var transferables = [];\\\\n  for (var property in message.attributeBuffers) {\\\\n    transferables.push(message.attributeBuffers[property].buffer);\\\\n  }\\\\n  transferables.push(buffer);\\\\n  postMessage(message, transferables);\\\\n};//# sourceURL=[module]\\\\n\\\");\\n\\n/***/ }),\\n\\n/***/ \\\"./src/loading2/point-attributes.ts\\\":\\n/*!******************************************!*\\\\\\n  !*** ./src/loading2/point-attributes.ts ***!\\n  \\\\******************************************/\\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\\n\\neval(\\\"__webpack_require__.r(__webpack_exports__);\\\\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\\\\n/* harmony export */   POINT_ATTRIBUTES: () => (/* binding */ POINT_ATTRIBUTES),\\\\n/* harmony export */   PointAttribute: () => (/* binding */ PointAttribute),\\\\n/* harmony export */   PointAttributeTypes: () => (/* binding */ PointAttributeTypes),\\\\n/* harmony export */   PointAttributes: () => (/* binding */ PointAttributes)\\\\n/* harmony export */ });\\\\n/**\\\\n * Some types of possible point attribute data formats\\\\n *\\\\n * @class\\\\n */\\\\nconst PointAttributeTypes = {\\\\n    DATA_TYPE_DOUBLE: { ordinal: 0, name: 'double', size: 8 },\\\\n    DATA_TYPE_FLOAT: { ordinal: 1, name: 'float', size: 4 },\\\\n    DATA_TYPE_INT8: { ordinal: 2, name: 'int8', size: 1 },\\\\n    DATA_TYPE_UINT8: { ordinal: 3, name: 'uint8', size: 1 },\\\\n    DATA_TYPE_INT16: { ordinal: 4, name: 'int16', size: 2 },\\\\n    DATA_TYPE_UINT16: { ordinal: 5, name: 'uint16', size: 2 },\\\\n    DATA_TYPE_INT32: { ordinal: 6, name: 'int32', size: 4 },\\\\n    DATA_TYPE_UINT32: { ordinal: 7, name: 'uint32', size: 4 },\\\\n    DATA_TYPE_INT64: { ordinal: 8, name: 'int64', size: 8 },\\\\n    DATA_TYPE_UINT64: { ordinal: 9, name: 'uint64', size: 8 }\\\\n};\\\\nlet i = 0;\\\\nfor (const obj in PointAttributeTypes) {\\\\n    PointAttributeTypes[i] = PointAttributeTypes[obj];\\\\n    i++;\\\\n}\\\\n\\\\nclass PointAttribute {\\\\n    constructor(name, type, numElements, range = [Infinity, -Infinity], uri = undefined) {\\\\n        this.name = name;\\\\n        this.type = type;\\\\n        this.numElements = numElements;\\\\n        this.range = range;\\\\n        this.uri = uri;\\\\n        this.byteSize = this.numElements * this.type.size;\\\\n        this.description = '';\\\\n    }\\\\n}\\\\n\\\\nconst POINT_ATTRIBUTES = {\\\\n    POSITION_CARTESIAN: new PointAttribute('POSITION_CARTESIAN', PointAttributeTypes.DATA_TYPE_FLOAT, 3),\\\\n    RGBA_PACKED: new PointAttribute('COLOR_PACKED', PointAttributeTypes.DATA_TYPE_INT8, 4),\\\\n    COLOR_PACKED: new PointAttribute('COLOR_PACKED', PointAttributeTypes.DATA_TYPE_INT8, 4),\\\\n    RGB_PACKED: new PointAttribute('COLOR_PACKED', PointAttributeTypes.DATA_TYPE_INT8, 3),\\\\n    NORMAL_FLOATS: new PointAttribute('NORMAL_FLOATS', PointAttributeTypes.DATA_TYPE_FLOAT, 3),\\\\n    INTENSITY: new PointAttribute('INTENSITY', PointAttributeTypes.DATA_TYPE_UINT16, 1),\\\\n    CLASSIFICATION: new PointAttribute('CLASSIFICATION', PointAttributeTypes.DATA_TYPE_UINT8, 1),\\\\n    NORMAL_SPHEREMAPPED: new PointAttribute('NORMAL_SPHEREMAPPED', PointAttributeTypes.DATA_TYPE_UINT8, 2),\\\\n    NORMAL_OCT16: new PointAttribute('NORMAL_OCT16', PointAttributeTypes.DATA_TYPE_UINT8, 2),\\\\n    NORMAL: new PointAttribute('NORMAL', PointAttributeTypes.DATA_TYPE_FLOAT, 3),\\\\n    RETURN_NUMBER: new PointAttribute('RETURN_NUMBER', PointAttributeTypes.DATA_TYPE_UINT8, 1),\\\\n    NUMBER_OF_RETURNS: new PointAttribute('NUMBER_OF_RETURNS', PointAttributeTypes.DATA_TYPE_UINT8, 1),\\\\n    SOURCE_ID: new PointAttribute('SOURCE_ID', PointAttributeTypes.DATA_TYPE_UINT16, 1),\\\\n    INDICES: new PointAttribute('INDICES', PointAttributeTypes.DATA_TYPE_UINT32, 1),\\\\n    SPACING: new PointAttribute('SPACING', PointAttributeTypes.DATA_TYPE_FLOAT, 1),\\\\n    GPS_TIME: new PointAttribute('GPS_TIME', PointAttributeTypes.DATA_TYPE_DOUBLE, 1)\\\\n};\\\\nclass PointAttributes {\\\\n    constructor(pointAttributes, attributes = [], byteSize = 0, size = 0, vectors = []) {\\\\n        this.attributes = attributes;\\\\n        this.byteSize = byteSize;\\\\n        this.size = size;\\\\n        this.vectors = vectors;\\\\n        if (pointAttributes != null) {\\\\n            for (let i = 0; i < pointAttributes.length; i++) {\\\\n                const pointAttributeName = pointAttributes[i];\\\\n                const pointAttribute = POINT_ATTRIBUTES[pointAttributeName];\\\\n                this.attributes.push(pointAttribute);\\\\n                this.byteSize += pointAttribute.byteSize;\\\\n                this.size++;\\\\n            }\\\\n        }\\\\n    }\\\\n    add(pointAttribute) {\\\\n        this.attributes.push(pointAttribute);\\\\n        this.byteSize += pointAttribute.byteSize;\\\\n        this.size++;\\\\n    }\\\\n    addVector(vector) {\\\\n        this.vectors.push(vector);\\\\n    }\\\\n    hasNormals() {\\\\n        for (const name in this.attributes) {\\\\n            const pointAttribute = this.attributes[name];\\\\n            if (pointAttribute === POINT_ATTRIBUTES.NORMAL_SPHEREMAPPED ||\\\\n                pointAttribute === POINT_ATTRIBUTES.NORMAL_FLOATS ||\\\\n                pointAttribute === POINT_ATTRIBUTES.NORMAL ||\\\\n                pointAttribute === POINT_ATTRIBUTES.NORMAL_OCT16) {\\\\n                return true;\\\\n            }\\\\n        }\\\\n        return false;\\\\n    }\\\\n    getAttribute(attributeName) {\\\\n        return this.attributes.find(attr => attr.name === attributeName);\\\\n    }\\\\n}\\\\n//# sourceURL=[module]\\\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbG9hZGluZzIvcG9pbnQtYXR0cmlidXRlcy50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG90cmVlLy4vc3JjL2xvYWRpbmcyL3BvaW50LWF0dHJpYnV0ZXMudHM/ZGNlMCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFNvbWUgdHlwZXMgb2YgcG9zc2libGUgcG9pbnQgYXR0cmlidXRlIGRhdGEgZm9ybWF0c1xuICpcbiAqIEBjbGFzc1xuICovXG5jb25zdCBQb2ludEF0dHJpYnV0ZVR5cGVzID0ge1xuICAgIERBVEFfVFlQRV9ET1VCTEU6IHsgb3JkaW5hbDogMCwgbmFtZTogJ2RvdWJsZScsIHNpemU6IDggfSxcbiAgICBEQVRBX1RZUEVfRkxPQVQ6IHsgb3JkaW5hbDogMSwgbmFtZTogJ2Zsb2F0Jywgc2l6ZTogNCB9LFxuICAgIERBVEFfVFlQRV9JTlQ4OiB7IG9yZGluYWw6IDIsIG5hbWU6ICdpbnQ4Jywgc2l6ZTogMSB9LFxuICAgIERBVEFfVFlQRV9VSU5UODogeyBvcmRpbmFsOiAzLCBuYW1lOiAndWludDgnLCBzaXplOiAxIH0sXG4gICAgREFUQV9UWVBFX0lOVDE2OiB7IG9yZGluYWw6IDQsIG5hbWU6ICdpbnQxNicsIHNpemU6IDIgfSxcbiAgICBEQVRBX1RZUEVfVUlOVDE2OiB7IG9yZGluYWw6IDUsIG5hbWU6ICd1aW50MTYnLCBzaXplOiAyIH0sXG4gICAgREFUQV9UWVBFX0lOVDMyOiB7IG9yZGluYWw6IDYsIG5hbWU6ICdpbnQzMicsIHNpemU6IDQgfSxcbiAgICBEQVRBX1RZUEVfVUlOVDMyOiB7IG9yZGluYWw6IDcsIG5hbWU6ICd1aW50MzInLCBzaXplOiA0IH0sXG4gICAgREFUQV9UWVBFX0lOVDY0OiB7IG9yZGluYWw6IDgsIG5hbWU6ICdpbnQ2NCcsIHNpemU6IDggfSxcbiAgICBEQVRBX1RZUEVfVUlOVDY0OiB7IG9yZGluYWw6IDksIG5hbWU6ICd1aW50NjQnLCBzaXplOiA4IH1cbn07XG5sZXQgaSA9IDA7XG5mb3IgKGNvbnN0IG9iaiBpbiBQb2ludEF0dHJpYnV0ZVR5cGVzKSB7XG4gICAgUG9pbnRBdHRyaWJ1dGVUeXBlc1tpXSA9IFBvaW50QXR0cmlidXRlVHlwZXNbb2JqXTtcbiAgICBpKys7XG59XG5leHBvcnQgeyBQb2ludEF0dHJpYnV0ZVR5cGVzIH07XG5jbGFzcyBQb2ludEF0dHJpYnV0ZSB7XG4gICAgY29uc3RydWN0b3IobmFtZSwgdHlwZSwgbnVtRWxlbWVudHMsIHJhbmdlID0gW0luZmluaXR5LCAtSW5maW5pdHldLCB1cmkgPSB1bmRlZmluZWQpIHtcbiAgICAgICAgdGhpcy5uYW1lID0gbmFtZTtcbiAgICAgICAgdGhpcy50eXBlID0gdHlwZTtcbiAgICAgICAgdGhpcy5udW1FbGVtZW50cyA9IG51bUVsZW1lbnRzO1xuICAgICAgICB0aGlzLnJhbmdlID0gcmFuZ2U7XG4gICAgICAgIHRoaXMudXJpID0gdXJpO1xuICAgICAgICB0aGlzLmJ5dGVTaXplID0gdGhpcy5udW1FbGVtZW50cyAqIHRoaXMudHlwZS5zaXplO1xuICAgICAgICB0aGlzLmRlc2NyaXB0aW9uID0gJyc7XG4gICAgfVxufVxuZXhwb3J0IHsgUG9pbnRBdHRyaWJ1dGUgfTtcbmV4cG9ydCBjb25zdCBQT0lOVF9BVFRSSUJVVEVTID0ge1xuICAgIFBPU0lUSU9OX0NBUlRFU0lBTjogbmV3IFBvaW50QXR0cmlidXRlKCdQT1NJVElPTl9DQVJURVNJQU4nLCBQb2ludEF0dHJpYnV0ZVR5cGVzLkRBVEFfVFlQRV9GTE9BVCwgMyksXG4gICAgUkdCQV9QQUNLRUQ6IG5ldyBQb2ludEF0dHJpYnV0ZSgnQ09MT1JfUEFDS0VEJywgUG9pbnRBdHRyaWJ1dGVUeXBlcy5EQVRBX1RZUEVfSU5UOCwgNCksXG4gICAgQ09MT1JfUEFDS0VEOiBuZXcgUG9pbnRBdHRyaWJ1dGUoJ0NPTE9SX1BBQ0tFRCcsIFBvaW50QXR0cmlidXRlVHlwZXMuREFUQV9UWVBFX0lOVDgsIDQpLFxuICAgIFJHQl9QQUNLRUQ6IG5ldyBQb2ludEF0dHJpYnV0ZSgnQ09MT1JfUEFDS0VEJywgUG9pbnRBdHRyaWJ1dGVUeXBlcy5EQVRBX1RZUEVfSU5UOCwgMyksXG4gICAgTk9STUFMX0ZMT0FUUzogbmV3IFBvaW50QXR0cmlidXRlKCdOT1JNQUxfRkxPQVRTJywgUG9pbnRBdHRyaWJ1dGVUeXBlcy5EQVRBX1RZUEVfRkxPQVQsIDMpLFxuICAgIElOVEVOU0lUWTogbmV3IFBvaW50QXR0cmlidXRlKCdJTlRFTlNJVFknLCBQb2ludEF0dHJpYnV0ZVR5cGVzLkRBVEFfVFlQRV9VSU5UMTYsIDEpLFxuICAgIENMQVNTSUZJQ0FUSU9OOiBuZXcgUG9pbnRBdHRyaWJ1dGUoJ0NMQVNTSUZJQ0FUSU9OJywgUG9pbnRBdHRyaWJ1dGVUeXBlcy5EQVRBX1RZUEVfVUlOVDgsIDEpLFxuICAgIE5PUk1BTF9TUEhFUkVNQVBQRUQ6IG5ldyBQb2ludEF0dHJpYnV0ZSgnTk9STUFMX1NQSEVSRU1BUFBFRCcsIFBvaW50QXR0cmlidXRlVHlwZXMuREFUQV9UWVBFX1VJTlQ4LCAyKSxcbiAgICBOT1JNQUxfT0NUMTY6IG5ldyBQb2ludEF0dHJpYnV0ZSgnTk9STUFMX09DVDE2JywgUG9pbnRBdHRyaWJ1dGVUeXBlcy5EQVRBX1RZUEVfVUlOVDgsIDIpLFxuICAgIE5PUk1BTDogbmV3IFBvaW50QXR0cmlidXRlKCdOT1JNQUwnLCBQb2ludEF0dHJpYnV0ZVR5cGVzLkRBVEFfVFlQRV9GTE9BVCwgMyksXG4gICAgUkVUVVJOX05VTUJFUjogbmV3IFBvaW50QXR0cmlidXRlKCdSRVRVUk5fTlVNQkVSJywgUG9pbnRBdHRyaWJ1dGVUeXBlcy5EQVRBX1RZUEVfVUlOVDgsIDEpLFxuICAgIE5VTUJFUl9PRl9SRVRVUk5TOiBuZXcgUG9pbnRBdHRyaWJ1dGUoJ05VTUJFUl9PRl9SRVRVUk5TJywgUG9pbnRBdHRyaWJ1dGVUeXBlcy5EQVRBX1RZUEVfVUlOVDgsIDEpLFxuICAgIFNPVVJDRV9JRDogbmV3IFBvaW50QXR0cmlidXRlKCdTT1VSQ0VfSUQnLCBQb2ludEF0dHJpYnV0ZVR5cGVzLkRBVEFfVFlQRV9VSU5UMTYsIDEpLFxuICAgIElORElDRVM6IG5ldyBQb2ludEF0dHJpYnV0ZSgnSU5ESUNFUycsIFBvaW50QXR0cmlidXRlVHlwZXMuREFUQV9UWVBFX1VJTlQzMiwgMSksXG4gICAgU1BBQ0lORzogbmV3IFBvaW50QXR0cmlidXRlKCdTUEFDSU5HJywgUG9pbnRBdHRyaWJ1dGVUeXBlcy5EQVRBX1RZUEVfRkxPQVQsIDEpLFxuICAgIEdQU19USU1FOiBuZXcgUG9pbnRBdHRyaWJ1dGUoJ0dQU19USU1FJywgUG9pbnRBdHRyaWJ1dGVUeXBlcy5EQVRBX1RZUEVfRE9VQkxFLCAxKVxufTtcbmV4cG9ydCBjbGFzcyBQb2ludEF0dHJpYnV0ZXMge1xuICAgIGNvbnN0cnVjdG9yKHBvaW50QXR0cmlidXRlcywgYXR0cmlidXRlcyA9IFtdLCBieXRlU2l6ZSA9IDAsIHNpemUgPSAwLCB2ZWN0b3JzID0gW10pIHtcbiAgICAgICAgdGhpcy5hdHRyaWJ1dGVzID0gYXR0cmlidXRlcztcbiAgICAgICAgdGhpcy5ieXRlU2l6ZSA9IGJ5dGVTaXplO1xuICAgICAgICB0aGlzLnNpemUgPSBzaXplO1xuICAgICAgICB0aGlzLnZlY3RvcnMgPSB2ZWN0b3JzO1xuICAgICAgICBpZiAocG9pbnRBdHRyaWJ1dGVzICE9IG51bGwpIHtcbiAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgcG9pbnRBdHRyaWJ1dGVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgcG9pbnRBdHRyaWJ1dGVOYW1lID0gcG9pbnRBdHRyaWJ1dGVzW2ldO1xuICAgICAgICAgICAgICAgIGNvbnN0IHBvaW50QXR0cmlidXRlID0gUE9JTlRfQVRUUklCVVRFU1twb2ludEF0dHJpYnV0ZU5hbWVdO1xuICAgICAgICAgICAgICAgIHRoaXMuYXR0cmlidXRlcy5wdXNoKHBvaW50QXR0cmlidXRlKTtcbiAgICAgICAgICAgICAgICB0aGlzLmJ5dGVTaXplICs9IHBvaW50QXR0cmlidXRlLmJ5dGVTaXplO1xuICAgICAgICAgICAgICAgIHRoaXMuc2l6ZSsrO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIGFkZChwb2ludEF0dHJpYnV0ZSkge1xuICAgICAgICB0aGlzLmF0dHJpYnV0ZXMucHVzaChwb2ludEF0dHJpYnV0ZSk7XG4gICAgICAgIHRoaXMuYnl0ZVNpemUgKz0gcG9pbnRBdHRyaWJ1dGUuYnl0ZVNpemU7XG4gICAgICAgIHRoaXMuc2l6ZSsrO1xuICAgIH1cbiAgICBhZGRWZWN0b3IodmVjdG9yKSB7XG4gICAgICAgIHRoaXMudmVjdG9ycy5wdXNoKHZlY3Rvcik7XG4gICAgfVxuICAgIGhhc05vcm1hbHMoKSB7XG4gICAgICAgIGZvciAoY29uc3QgbmFtZSBpbiB0aGlzLmF0dHJpYnV0ZXMpIHtcbiAgICAgICAgICAgIGNvbnN0IHBvaW50QXR0cmlidXRlID0gdGhpcy5hdHRyaWJ1dGVzW25hbWVdO1xuICAgICAgICAgICAgaWYgKHBvaW50QXR0cmlidXRlID09PSBQT0lOVF9BVFRSSUJVVEVTLk5PUk1BTF9TUEhFUkVNQVBQRUQgfHxcbiAgICAgICAgICAgICAgICBwb2ludEF0dHJpYnV0ZSA9PT0gUE9JTlRfQVRUUklCVVRFUy5OT1JNQUxfRkxPQVRTIHx8XG4gICAgICAgICAgICAgICAgcG9pbnRBdHRyaWJ1dGUgPT09IFBPSU5UX0FUVFJJQlVURVMuTk9STUFMIHx8XG4gICAgICAgICAgICAgICAgcG9pbnRBdHRyaWJ1dGUgPT09IFBPSU5UX0FUVFJJQlVURVMuTk9STUFMX09DVDE2KSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBnZXRBdHRyaWJ1dGUoYXR0cmlidXRlTmFtZSkge1xuICAgICAgICByZXR1cm4gdGhpcy5hdHRyaWJ1dGVzLmZpbmQoYXR0ciA9PiBhdHRyLm5hbWUgPT09IGF0dHJpYnV0ZU5hbWUpO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\\\\n//# sourceURL=webpack-internal:///./src/loading2/point-attributes.ts\\\\n\\\");\\n\\n/***/ })\\n\\n/******/ \\t});\\n/************************************************************************/\\n/******/ \\t// The module cache\\n/******/ \\tvar __webpack_module_cache__ = {};\\n/******/ \\t\\n/******/ \\t// The require function\\n/******/ \\tfunction __webpack_require__(moduleId) {\\n/******/ \\t\\t// Check if module is in cache\\n/******/ \\t\\tvar cachedModule = __webpack_module_cache__[moduleId];\\n/******/ \\t\\tif (cachedModule !== undefined) {\\n/******/ \\t\\t\\treturn cachedModule.exports;\\n/******/ \\t\\t}\\n/******/ \\t\\t// Create a new module (and put it into the cache)\\n/******/ \\t\\tvar module = __webpack_module_cache__[moduleId] = {\\n/******/ \\t\\t\\t// no module.id needed\\n/******/ \\t\\t\\t// no module.loaded needed\\n/******/ \\t\\t\\texports: {}\\n/******/ \\t\\t};\\n/******/ \\t\\n/******/ \\t\\t// Execute the module function\\n/******/ \\t\\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\\n/******/ \\t\\n/******/ \\t\\t// Return the exports of the module\\n/******/ \\t\\treturn module.exports;\\n/******/ \\t}\\n/******/ \\t\\n/************************************************************************/\\n/******/ \\t/* webpack/runtime/define property getters */\\n/******/ \\t(() => {\\n/******/ \\t\\t// define getter functions for harmony exports\\n/******/ \\t\\t__webpack_require__.d = (exports, definition) => {\\n/******/ \\t\\t\\tfor(var key in definition) {\\n/******/ \\t\\t\\t\\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\\n/******/ \\t\\t\\t\\t\\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\\n/******/ \\t\\t\\t\\t}\\n/******/ \\t\\t\\t}\\n/******/ \\t\\t};\\n/******/ \\t})();\\n/******/ \\t\\n/******/ \\t/* webpack/runtime/hasOwnProperty shorthand */\\n/******/ \\t(() => {\\n/******/ \\t\\t__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))\\n/******/ \\t})();\\n/******/ \\t\\n/******/ \\t/* webpack/runtime/make namespace object */\\n/******/ \\t(() => {\\n/******/ \\t\\t// define __esModule on exports\\n/******/ \\t\\t__webpack_require__.r = (exports) => {\\n/******/ \\t\\t\\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\\n/******/ \\t\\t\\t\\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\\n/******/ \\t\\t\\t}\\n/******/ \\t\\t\\tObject.defineProperty(exports, '__esModule', { value: true });\\n/******/ \\t\\t};\\n/******/ \\t})();\\n/******/ \\t\\n/************************************************************************/\\n/******/ \\t\\n/******/ \\t// startup\\n/******/ \\t// Load entry module and return exports\\n/******/ \\t// This entry module can't be inlined because the eval-source-map devtool is used.\\n/******/ \\tvar __webpack_exports__ = __webpack_require__(\\\"./node_modules/babel-loader/lib/index.js!./src/loading2/decoder.worker.js\\\");\\n/******/ \\t\\n/******/ })()\\n;\", \"Worker\", undefined, undefined);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/loading2/decoder.worker.js\n");

/***/ }),

/***/ "./src/loading2/gltf-decoder.worker.js":
/*!*********************************************!*\
  !*** ./src/loading2/gltf-decoder.worker.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Worker_fn)\n/* harmony export */ });\n/* harmony import */ var _node_modules_worker_loader_dist_runtime_inline_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !!../../node_modules/worker-loader/dist/runtime/inline.js */ \"./node_modules/worker-loader/dist/runtime/inline.js\");\n/* harmony import */ var _node_modules_worker_loader_dist_runtime_inline_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_worker_loader_dist_runtime_inline_js__WEBPACK_IMPORTED_MODULE_0__);\n\n\n\nfunction Worker_fn() {\n  return _node_modules_worker_loader_dist_runtime_inline_js__WEBPACK_IMPORTED_MODULE_0___default()(\"/*\\n * ATTENTION: An \\\"eval-source-map\\\" devtool has been used.\\n * This devtool is neither made for production nor for readable output files.\\n * It uses \\\"eval()\\\" calls to create a separate source file with attached SourceMaps in the browser devtools.\\n * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)\\n * or disable the default devtool with \\\"devtool: false\\\".\\n * If you are looking for production-ready output files, see mode: \\\"production\\\" (https://webpack.js.org/configuration/mode/).\\n */\\n/******/ (() => { // webpackBootstrap\\n/******/ \\t\\\"use strict\\\";\\n/******/ \\tvar __webpack_modules__ = ({\\n\\n/***/ \\\"./node_modules/babel-loader/lib/index.js!./src/loading2/gltf-decoder.worker.js\\\":\\n/*!**************************************************************************************!*\\\\\\n  !*** ./node_modules/babel-loader/lib/index.js!./src/loading2/gltf-decoder.worker.js ***!\\n  \\\\**************************************************************************************/\\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\\n\\neval(\\\"__webpack_require__.r(__webpack_exports__);\\\\n/* harmony import */ var _point_attributes_ts__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./point-attributes.ts */ \\\\\\\"./src/loading2/point-attributes.ts\\\\\\\");\\\\nfunction _createForOfIteratorHelper(r, e) { var t = \\\\\\\"undefined\\\\\\\" != typeof Symbol && r[Symbol.iterator] || r[\\\\\\\"@@iterator\\\\\\\"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && \\\\\\\"number\\\\\\\" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError(\\\\\\\"Invalid attempt to iterate non-iterable instance.\\\\\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\\\\\\\"); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t.return || t.return(); } finally { if (u) throw o; } } }; }\\\\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\\\\\\\"string\\\\\\\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \\\\\\\"Object\\\\\\\" === t && r.constructor && (t = r.constructor.name), \\\\\\\"Map\\\\\\\" === t || \\\\\\\"Set\\\\\\\" === t ? Array.from(r) : \\\\\\\"Arguments\\\\\\\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\\\\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\\\\n\\\\nvar typedArrayMapping = {\\\\n  'int8': Int8Array,\\\\n  'int16': Int16Array,\\\\n  'int32': Int32Array,\\\\n  'int64': Float64Array,\\\\n  'uint8': Uint8Array,\\\\n  'uint16': Uint16Array,\\\\n  'uint32': Uint32Array,\\\\n  'uint64': Float64Array,\\\\n  'float': Float32Array,\\\\n  'double': Float64Array\\\\n};\\\\nonmessage = function onmessage(event) {\\\\n  var _event$data = event.data,\\\\n    buffer = _event$data.buffer,\\\\n    pointAttributes = _event$data.pointAttributes,\\\\n    scale = _event$data.scale,\\\\n    name = _event$data.name,\\\\n    min = _event$data.min,\\\\n    max = _event$data.max,\\\\n    size = _event$data.size,\\\\n    offset = _event$data.offset,\\\\n    numPoints = _event$data.numPoints;\\\\n  var view = new DataView(buffer);\\\\n  var attributeBuffers = {};\\\\n  var bytesPerPointPosition = 4 * 3;\\\\n  var gridSize = 32;\\\\n  var grid = new Uint32Array(Math.pow(gridSize, 3));\\\\n  var toIndex = function toIndex(x, y, z) {\\\\n    // min is already subtracted\\\\n    var dx = gridSize * x / size.x;\\\\n    var dy = gridSize * y / size.y;\\\\n    var dz = gridSize * z / size.z;\\\\n    var ix = Math.min(parseInt(dx), gridSize - 1);\\\\n    var iy = Math.min(parseInt(dy), gridSize - 1);\\\\n    var iz = Math.min(parseInt(dz), gridSize - 1);\\\\n    var index = ix + iy * gridSize + iz * gridSize * gridSize;\\\\n    return index;\\\\n  };\\\\n  var numOccupiedCells = 0;\\\\n  var tightBoxMin = [Number.POSITIVE_INFINITY, Number.POSITIVE_INFINITY, Number.POSITIVE_INFINITY];\\\\n  var tightBoxMax = [Number.NEGATIVE_INFINITY, Number.NEGATIVE_INFINITY, Number.NEGATIVE_INFINITY];\\\\n  var _iterator = _createForOfIteratorHelper(pointAttributes.attributes),\\\\n    _step;\\\\n  try {\\\\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\\\\n      var pointAttribute = _step.value;\\\\n      if ([\\\\\\\"POSITION_CARTESIAN\\\\\\\", \\\\\\\"position\\\\\\\"].includes(pointAttribute.name)) {\\\\n        var _buff = new ArrayBuffer(numPoints * 4 * 3);\\\\n        var positions = new Float32Array(_buff);\\\\n        for (var _j = 0; _j < numPoints; _j++) {\\\\n          var pointOffset = _j * bytesPerPointPosition;\\\\n          var x = view.getFloat32(pointOffset + 0, true) + offset[0] - min.x;\\\\n          var y = view.getFloat32(pointOffset + 4, true) + offset[1] - min.y;\\\\n          var z = view.getFloat32(pointOffset + 8, true) + offset[2] - min.z;\\\\n          tightBoxMin[0] = Math.min(tightBoxMin[0], x);\\\\n          tightBoxMin[1] = Math.min(tightBoxMin[1], y);\\\\n          tightBoxMin[2] = Math.min(tightBoxMin[2], z);\\\\n          tightBoxMax[0] = Math.max(tightBoxMax[0], x);\\\\n          tightBoxMax[1] = Math.max(tightBoxMax[1], y);\\\\n          tightBoxMax[2] = Math.max(tightBoxMax[2], z);\\\\n          var index = toIndex(x, y, z);\\\\n          var count = grid[index]++;\\\\n          if (count === 0) {\\\\n            numOccupiedCells++;\\\\n          }\\\\n          positions[3 * _j + 0] = x;\\\\n          positions[3 * _j + 1] = y;\\\\n          positions[3 * _j + 2] = z;\\\\n        }\\\\n        attributeBuffers[pointAttribute.name] = {\\\\n          buffer: _buff,\\\\n          attribute: pointAttribute\\\\n        };\\\\n      } else if ([\\\\\\\"RGBA\\\\\\\", \\\\\\\"rgba\\\\\\\"].includes(pointAttribute.name)) {\\\\n        attributeBuffers[pointAttribute.name] = {\\\\n          buffer: buffer.slice(numPoints * bytesPerPointPosition),\\\\n          attribute: pointAttribute\\\\n        };\\\\n      }\\\\n    }\\\\n  } catch (err) {\\\\n    _iterator.e(err);\\\\n  } finally {\\\\n    _iterator.f();\\\\n  }\\\\n  var occupancy = parseInt(numPoints / numOccupiedCells);\\\\n  {\\\\n    // add indices\\\\n    var buff = new ArrayBuffer(numPoints * 4);\\\\n    var indices = new Uint32Array(buff);\\\\n    for (var i = 0; i < numPoints; i++) {\\\\n      indices[i] = i;\\\\n    }\\\\n    attributeBuffers[\\\\\\\"INDICES\\\\\\\"] = {\\\\n      buffer: buff,\\\\n      attribute: _point_attributes_ts__WEBPACK_IMPORTED_MODULE_0__.PointAttribute.INDICES\\\\n    };\\\\n  }\\\\n  {\\\\n    // handle attribute vectors\\\\n    var vectors = pointAttributes.vectors;\\\\n    var _iterator2 = _createForOfIteratorHelper(vectors),\\\\n      _step2;\\\\n    try {\\\\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\\\\n        var vector = _step2.value;\\\\n        var _name = vector.name,\\\\n          attributes = vector.attributes;\\\\n        var numVectorElements = attributes.length;\\\\n        var _buffer = new ArrayBuffer(numVectorElements * numPoints * 4);\\\\n        var f32 = new Float32Array(_buffer);\\\\n        var iElement = 0;\\\\n        var _iterator3 = _createForOfIteratorHelper(attributes),\\\\n          _step3;\\\\n        try {\\\\n          for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\\\\n            var sourceName = _step3.value;\\\\n            var sourceBuffer = attributeBuffers[sourceName];\\\\n            var _offset = sourceBuffer.offset,\\\\n              _scale = sourceBuffer.scale;\\\\n            var _view = new DataView(sourceBuffer.buffer);\\\\n            var getter = _view.getFloat32.bind(_view);\\\\n            for (var j = 0; j < numPoints; j++) {\\\\n              var value = getter(j * 4, true);\\\\n              f32[j * numVectorElements + iElement] = value / _scale + _offset;\\\\n            }\\\\n            iElement++;\\\\n          }\\\\n        } catch (err) {\\\\n          _iterator3.e(err);\\\\n        } finally {\\\\n          _iterator3.f();\\\\n        }\\\\n        var vecAttribute = new _point_attributes_ts__WEBPACK_IMPORTED_MODULE_0__.PointAttribute(_name, _point_attributes_ts__WEBPACK_IMPORTED_MODULE_0__.PointAttributeTypes.DATA_TYPE_FLOAT, 3);\\\\n        attributeBuffers[_name] = {\\\\n          buffer: _buffer,\\\\n          attribute: vecAttribute\\\\n        };\\\\n      }\\\\n    } catch (err) {\\\\n      _iterator2.e(err);\\\\n    } finally {\\\\n      _iterator2.f();\\\\n    }\\\\n  }\\\\n  var message = {\\\\n    buffer: buffer,\\\\n    attributeBuffers: attributeBuffers,\\\\n    density: occupancy,\\\\n    tightBoundingBox: {\\\\n      min: tightBoxMin,\\\\n      max: tightBoxMax\\\\n    }\\\\n  };\\\\n  var transferables = [];\\\\n  for (var property in message.attributeBuffers) {\\\\n    transferables.push(message.attributeBuffers[property].buffer);\\\\n  }\\\\n  transferables.push(buffer);\\\\n  postMessage(message, transferables);\\\\n};//# sourceURL=[module]\\\\n\\\");\\n\\n/***/ }),\\n\\n/***/ \\\"./src/loading2/point-attributes.ts\\\":\\n/*!******************************************!*\\\\\\n  !*** ./src/loading2/point-attributes.ts ***!\\n  \\\\******************************************/\\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\\n\\neval(\\\"__webpack_require__.r(__webpack_exports__);\\\\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\\\\n/* harmony export */   POINT_ATTRIBUTES: () => (/* binding */ POINT_ATTRIBUTES),\\\\n/* harmony export */   PointAttribute: () => (/* binding */ PointAttribute),\\\\n/* harmony export */   PointAttributeTypes: () => (/* binding */ PointAttributeTypes),\\\\n/* harmony export */   PointAttributes: () => (/* binding */ PointAttributes)\\\\n/* harmony export */ });\\\\n/**\\\\n * Some types of possible point attribute data formats\\\\n *\\\\n * @class\\\\n */\\\\nconst PointAttributeTypes = {\\\\n    DATA_TYPE_DOUBLE: { ordinal: 0, name: 'double', size: 8 },\\\\n    DATA_TYPE_FLOAT: { ordinal: 1, name: 'float', size: 4 },\\\\n    DATA_TYPE_INT8: { ordinal: 2, name: 'int8', size: 1 },\\\\n    DATA_TYPE_UINT8: { ordinal: 3, name: 'uint8', size: 1 },\\\\n    DATA_TYPE_INT16: { ordinal: 4, name: 'int16', size: 2 },\\\\n    DATA_TYPE_UINT16: { ordinal: 5, name: 'uint16', size: 2 },\\\\n    DATA_TYPE_INT32: { ordinal: 6, name: 'int32', size: 4 },\\\\n    DATA_TYPE_UINT32: { ordinal: 7, name: 'uint32', size: 4 },\\\\n    DATA_TYPE_INT64: { ordinal: 8, name: 'int64', size: 8 },\\\\n    DATA_TYPE_UINT64: { ordinal: 9, name: 'uint64', size: 8 }\\\\n};\\\\nlet i = 0;\\\\nfor (const obj in PointAttributeTypes) {\\\\n    PointAttributeTypes[i] = PointAttributeTypes[obj];\\\\n    i++;\\\\n}\\\\n\\\\nclass PointAttribute {\\\\n    constructor(name, type, numElements, range = [Infinity, -Infinity], uri = undefined) {\\\\n        this.name = name;\\\\n        this.type = type;\\\\n        this.numElements = numElements;\\\\n        this.range = range;\\\\n        this.uri = uri;\\\\n        this.byteSize = this.numElements * this.type.size;\\\\n        this.description = '';\\\\n    }\\\\n}\\\\n\\\\nconst POINT_ATTRIBUTES = {\\\\n    POSITION_CARTESIAN: new PointAttribute('POSITION_CARTESIAN', PointAttributeTypes.DATA_TYPE_FLOAT, 3),\\\\n    RGBA_PACKED: new PointAttribute('COLOR_PACKED', PointAttributeTypes.DATA_TYPE_INT8, 4),\\\\n    COLOR_PACKED: new PointAttribute('COLOR_PACKED', PointAttributeTypes.DATA_TYPE_INT8, 4),\\\\n    RGB_PACKED: new PointAttribute('COLOR_PACKED', PointAttributeTypes.DATA_TYPE_INT8, 3),\\\\n    NORMAL_FLOATS: new PointAttribute('NORMAL_FLOATS', PointAttributeTypes.DATA_TYPE_FLOAT, 3),\\\\n    INTENSITY: new PointAttribute('INTENSITY', PointAttributeTypes.DATA_TYPE_UINT16, 1),\\\\n    CLASSIFICATION: new PointAttribute('CLASSIFICATION', PointAttributeTypes.DATA_TYPE_UINT8, 1),\\\\n    NORMAL_SPHEREMAPPED: new PointAttribute('NORMAL_SPHEREMAPPED', PointAttributeTypes.DATA_TYPE_UINT8, 2),\\\\n    NORMAL_OCT16: new PointAttribute('NORMAL_OCT16', PointAttributeTypes.DATA_TYPE_UINT8, 2),\\\\n    NORMAL: new PointAttribute('NORMAL', PointAttributeTypes.DATA_TYPE_FLOAT, 3),\\\\n    RETURN_NUMBER: new PointAttribute('RETURN_NUMBER', PointAttributeTypes.DATA_TYPE_UINT8, 1),\\\\n    NUMBER_OF_RETURNS: new PointAttribute('NUMBER_OF_RETURNS', PointAttributeTypes.DATA_TYPE_UINT8, 1),\\\\n    SOURCE_ID: new PointAttribute('SOURCE_ID', PointAttributeTypes.DATA_TYPE_UINT16, 1),\\\\n    INDICES: new PointAttribute('INDICES', PointAttributeTypes.DATA_TYPE_UINT32, 1),\\\\n    SPACING: new PointAttribute('SPACING', PointAttributeTypes.DATA_TYPE_FLOAT, 1),\\\\n    GPS_TIME: new PointAttribute('GPS_TIME', PointAttributeTypes.DATA_TYPE_DOUBLE, 1)\\\\n};\\\\nclass PointAttributes {\\\\n    constructor(pointAttributes, attributes = [], byteSize = 0, size = 0, vectors = []) {\\\\n        this.attributes = attributes;\\\\n        this.byteSize = byteSize;\\\\n        this.size = size;\\\\n        this.vectors = vectors;\\\\n        if (pointAttributes != null) {\\\\n            for (let i = 0; i < pointAttributes.length; i++) {\\\\n                const pointAttributeName = pointAttributes[i];\\\\n                const pointAttribute = POINT_ATTRIBUTES[pointAttributeName];\\\\n                this.attributes.push(pointAttribute);\\\\n                this.byteSize += pointAttribute.byteSize;\\\\n                this.size++;\\\\n            }\\\\n        }\\\\n    }\\\\n    add(pointAttribute) {\\\\n        this.attributes.push(pointAttribute);\\\\n        this.byteSize += pointAttribute.byteSize;\\\\n        this.size++;\\\\n    }\\\\n    addVector(vector) {\\\\n        this.vectors.push(vector);\\\\n    }\\\\n    hasNormals() {\\\\n        for (const name in this.attributes) {\\\\n            const pointAttribute = this.attributes[name];\\\\n            if (pointAttribute === POINT_ATTRIBUTES.NORMAL_SPHEREMAPPED ||\\\\n                pointAttribute === POINT_ATTRIBUTES.NORMAL_FLOATS ||\\\\n                pointAttribute === POINT_ATTRIBUTES.NORMAL ||\\\\n                pointAttribute === POINT_ATTRIBUTES.NORMAL_OCT16) {\\\\n                return true;\\\\n            }\\\\n        }\\\\n        return false;\\\\n    }\\\\n    getAttribute(attributeName) {\\\\n        return this.attributes.find(attr => attr.name === attributeName);\\\\n    }\\\\n}\\\\n//# sourceURL=[module]\\\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbG9hZGluZzIvcG9pbnQtYXR0cmlidXRlcy50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG90cmVlLy4vc3JjL2xvYWRpbmcyL3BvaW50LWF0dHJpYnV0ZXMudHM/ZGNlMCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFNvbWUgdHlwZXMgb2YgcG9zc2libGUgcG9pbnQgYXR0cmlidXRlIGRhdGEgZm9ybWF0c1xuICpcbiAqIEBjbGFzc1xuICovXG5jb25zdCBQb2ludEF0dHJpYnV0ZVR5cGVzID0ge1xuICAgIERBVEFfVFlQRV9ET1VCTEU6IHsgb3JkaW5hbDogMCwgbmFtZTogJ2RvdWJsZScsIHNpemU6IDggfSxcbiAgICBEQVRBX1RZUEVfRkxPQVQ6IHsgb3JkaW5hbDogMSwgbmFtZTogJ2Zsb2F0Jywgc2l6ZTogNCB9LFxuICAgIERBVEFfVFlQRV9JTlQ4OiB7IG9yZGluYWw6IDIsIG5hbWU6ICdpbnQ4Jywgc2l6ZTogMSB9LFxuICAgIERBVEFfVFlQRV9VSU5UODogeyBvcmRpbmFsOiAzLCBuYW1lOiAndWludDgnLCBzaXplOiAxIH0sXG4gICAgREFUQV9UWVBFX0lOVDE2OiB7IG9yZGluYWw6IDQsIG5hbWU6ICdpbnQxNicsIHNpemU6IDIgfSxcbiAgICBEQVRBX1RZUEVfVUlOVDE2OiB7IG9yZGluYWw6IDUsIG5hbWU6ICd1aW50MTYnLCBzaXplOiAyIH0sXG4gICAgREFUQV9UWVBFX0lOVDMyOiB7IG9yZGluYWw6IDYsIG5hbWU6ICdpbnQzMicsIHNpemU6IDQgfSxcbiAgICBEQVRBX1RZUEVfVUlOVDMyOiB7IG9yZGluYWw6IDcsIG5hbWU6ICd1aW50MzInLCBzaXplOiA0IH0sXG4gICAgREFUQV9UWVBFX0lOVDY0OiB7IG9yZGluYWw6IDgsIG5hbWU6ICdpbnQ2NCcsIHNpemU6IDggfSxcbiAgICBEQVRBX1RZUEVfVUlOVDY0OiB7IG9yZGluYWw6IDksIG5hbWU6ICd1aW50NjQnLCBzaXplOiA4IH1cbn07XG5sZXQgaSA9IDA7XG5mb3IgKGNvbnN0IG9iaiBpbiBQb2ludEF0dHJpYnV0ZVR5cGVzKSB7XG4gICAgUG9pbnRBdHRyaWJ1dGVUeXBlc1tpXSA9IFBvaW50QXR0cmlidXRlVHlwZXNbb2JqXTtcbiAgICBpKys7XG59XG5leHBvcnQgeyBQb2ludEF0dHJpYnV0ZVR5cGVzIH07XG5jbGFzcyBQb2ludEF0dHJpYnV0ZSB7XG4gICAgY29uc3RydWN0b3IobmFtZSwgdHlwZSwgbnVtRWxlbWVudHMsIHJhbmdlID0gW0luZmluaXR5LCAtSW5maW5pdHldLCB1cmkgPSB1bmRlZmluZWQpIHtcbiAgICAgICAgdGhpcy5uYW1lID0gbmFtZTtcbiAgICAgICAgdGhpcy50eXBlID0gdHlwZTtcbiAgICAgICAgdGhpcy5udW1FbGVtZW50cyA9IG51bUVsZW1lbnRzO1xuICAgICAgICB0aGlzLnJhbmdlID0gcmFuZ2U7XG4gICAgICAgIHRoaXMudXJpID0gdXJpO1xuICAgICAgICB0aGlzLmJ5dGVTaXplID0gdGhpcy5udW1FbGVtZW50cyAqIHRoaXMudHlwZS5zaXplO1xuICAgICAgICB0aGlzLmRlc2NyaXB0aW9uID0gJyc7XG4gICAgfVxufVxuZXhwb3J0IHsgUG9pbnRBdHRyaWJ1dGUgfTtcbmV4cG9ydCBjb25zdCBQT0lOVF9BVFRSSUJVVEVTID0ge1xuICAgIFBPU0lUSU9OX0NBUlRFU0lBTjogbmV3IFBvaW50QXR0cmlidXRlKCdQT1NJVElPTl9DQVJURVNJQU4nLCBQb2ludEF0dHJpYnV0ZVR5cGVzLkRBVEFfVFlQRV9GTE9BVCwgMyksXG4gICAgUkdCQV9QQUNLRUQ6IG5ldyBQb2ludEF0dHJpYnV0ZSgnQ09MT1JfUEFDS0VEJywgUG9pbnRBdHRyaWJ1dGVUeXBlcy5EQVRBX1RZUEVfSU5UOCwgNCksXG4gICAgQ09MT1JfUEFDS0VEOiBuZXcgUG9pbnRBdHRyaWJ1dGUoJ0NPTE9SX1BBQ0tFRCcsIFBvaW50QXR0cmlidXRlVHlwZXMuREFUQV9UWVBFX0lOVDgsIDQpLFxuICAgIFJHQl9QQUNLRUQ6IG5ldyBQb2ludEF0dHJpYnV0ZSgnQ09MT1JfUEFDS0VEJywgUG9pbnRBdHRyaWJ1dGVUeXBlcy5EQVRBX1RZUEVfSU5UOCwgMyksXG4gICAgTk9STUFMX0ZMT0FUUzogbmV3IFBvaW50QXR0cmlidXRlKCdOT1JNQUxfRkxPQVRTJywgUG9pbnRBdHRyaWJ1dGVUeXBlcy5EQVRBX1RZUEVfRkxPQVQsIDMpLFxuICAgIElOVEVOU0lUWTogbmV3IFBvaW50QXR0cmlidXRlKCdJTlRFTlNJVFknLCBQb2ludEF0dHJpYnV0ZVR5cGVzLkRBVEFfVFlQRV9VSU5UMTYsIDEpLFxuICAgIENMQVNTSUZJQ0FUSU9OOiBuZXcgUG9pbnRBdHRyaWJ1dGUoJ0NMQVNTSUZJQ0FUSU9OJywgUG9pbnRBdHRyaWJ1dGVUeXBlcy5EQVRBX1RZUEVfVUlOVDgsIDEpLFxuICAgIE5PUk1BTF9TUEhFUkVNQVBQRUQ6IG5ldyBQb2ludEF0dHJpYnV0ZSgnTk9STUFMX1NQSEVSRU1BUFBFRCcsIFBvaW50QXR0cmlidXRlVHlwZXMuREFUQV9UWVBFX1VJTlQ4LCAyKSxcbiAgICBOT1JNQUxfT0NUMTY6IG5ldyBQb2ludEF0dHJpYnV0ZSgnTk9STUFMX09DVDE2JywgUG9pbnRBdHRyaWJ1dGVUeXBlcy5EQVRBX1RZUEVfVUlOVDgsIDIpLFxuICAgIE5PUk1BTDogbmV3IFBvaW50QXR0cmlidXRlKCdOT1JNQUwnLCBQb2ludEF0dHJpYnV0ZVR5cGVzLkRBVEFfVFlQRV9GTE9BVCwgMyksXG4gICAgUkVUVVJOX05VTUJFUjogbmV3IFBvaW50QXR0cmlidXRlKCdSRVRVUk5fTlVNQkVSJywgUG9pbnRBdHRyaWJ1dGVUeXBlcy5EQVRBX1RZUEVfVUlOVDgsIDEpLFxuICAgIE5VTUJFUl9PRl9SRVRVUk5TOiBuZXcgUG9pbnRBdHRyaWJ1dGUoJ05VTUJFUl9PRl9SRVRVUk5TJywgUG9pbnRBdHRyaWJ1dGVUeXBlcy5EQVRBX1RZUEVfVUlOVDgsIDEpLFxuICAgIFNPVVJDRV9JRDogbmV3IFBvaW50QXR0cmlidXRlKCdTT1VSQ0VfSUQnLCBQb2ludEF0dHJpYnV0ZVR5cGVzLkRBVEFfVFlQRV9VSU5UMTYsIDEpLFxuICAgIElORElDRVM6IG5ldyBQb2ludEF0dHJpYnV0ZSgnSU5ESUNFUycsIFBvaW50QXR0cmlidXRlVHlwZXMuREFUQV9UWVBFX1VJTlQzMiwgMSksXG4gICAgU1BBQ0lORzogbmV3IFBvaW50QXR0cmlidXRlKCdTUEFDSU5HJywgUG9pbnRBdHRyaWJ1dGVUeXBlcy5EQVRBX1RZUEVfRkxPQVQsIDEpLFxuICAgIEdQU19USU1FOiBuZXcgUG9pbnRBdHRyaWJ1dGUoJ0dQU19USU1FJywgUG9pbnRBdHRyaWJ1dGVUeXBlcy5EQVRBX1RZUEVfRE9VQkxFLCAxKVxufTtcbmV4cG9ydCBjbGFzcyBQb2ludEF0dHJpYnV0ZXMge1xuICAgIGNvbnN0cnVjdG9yKHBvaW50QXR0cmlidXRlcywgYXR0cmlidXRlcyA9IFtdLCBieXRlU2l6ZSA9IDAsIHNpemUgPSAwLCB2ZWN0b3JzID0gW10pIHtcbiAgICAgICAgdGhpcy5hdHRyaWJ1dGVzID0gYXR0cmlidXRlcztcbiAgICAgICAgdGhpcy5ieXRlU2l6ZSA9IGJ5dGVTaXplO1xuICAgICAgICB0aGlzLnNpemUgPSBzaXplO1xuICAgICAgICB0aGlzLnZlY3RvcnMgPSB2ZWN0b3JzO1xuICAgICAgICBpZiAocG9pbnRBdHRyaWJ1dGVzICE9IG51bGwpIHtcbiAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgcG9pbnRBdHRyaWJ1dGVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgcG9pbnRBdHRyaWJ1dGVOYW1lID0gcG9pbnRBdHRyaWJ1dGVzW2ldO1xuICAgICAgICAgICAgICAgIGNvbnN0IHBvaW50QXR0cmlidXRlID0gUE9JTlRfQVRUUklCVVRFU1twb2ludEF0dHJpYnV0ZU5hbWVdO1xuICAgICAgICAgICAgICAgIHRoaXMuYXR0cmlidXRlcy5wdXNoKHBvaW50QXR0cmlidXRlKTtcbiAgICAgICAgICAgICAgICB0aGlzLmJ5dGVTaXplICs9IHBvaW50QXR0cmlidXRlLmJ5dGVTaXplO1xuICAgICAgICAgICAgICAgIHRoaXMuc2l6ZSsrO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIGFkZChwb2ludEF0dHJpYnV0ZSkge1xuICAgICAgICB0aGlzLmF0dHJpYnV0ZXMucHVzaChwb2ludEF0dHJpYnV0ZSk7XG4gICAgICAgIHRoaXMuYnl0ZVNpemUgKz0gcG9pbnRBdHRyaWJ1dGUuYnl0ZVNpemU7XG4gICAgICAgIHRoaXMuc2l6ZSsrO1xuICAgIH1cbiAgICBhZGRWZWN0b3IodmVjdG9yKSB7XG4gICAgICAgIHRoaXMudmVjdG9ycy5wdXNoKHZlY3Rvcik7XG4gICAgfVxuICAgIGhhc05vcm1hbHMoKSB7XG4gICAgICAgIGZvciAoY29uc3QgbmFtZSBpbiB0aGlzLmF0dHJpYnV0ZXMpIHtcbiAgICAgICAgICAgIGNvbnN0IHBvaW50QXR0cmlidXRlID0gdGhpcy5hdHRyaWJ1dGVzW25hbWVdO1xuICAgICAgICAgICAgaWYgKHBvaW50QXR0cmlidXRlID09PSBQT0lOVF9BVFRSSUJVVEVTLk5PUk1BTF9TUEhFUkVNQVBQRUQgfHxcbiAgICAgICAgICAgICAgICBwb2ludEF0dHJpYnV0ZSA9PT0gUE9JTlRfQVRUUklCVVRFUy5OT1JNQUxfRkxPQVRTIHx8XG4gICAgICAgICAgICAgICAgcG9pbnRBdHRyaWJ1dGUgPT09IFBPSU5UX0FUVFJJQlVURVMuTk9STUFMIHx8XG4gICAgICAgICAgICAgICAgcG9pbnRBdHRyaWJ1dGUgPT09IFBPSU5UX0FUVFJJQlVURVMuTk9STUFMX09DVDE2KSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBnZXRBdHRyaWJ1dGUoYXR0cmlidXRlTmFtZSkge1xuICAgICAgICByZXR1cm4gdGhpcy5hdHRyaWJ1dGVzLmZpbmQoYXR0ciA9PiBhdHRyLm5hbWUgPT09IGF0dHJpYnV0ZU5hbWUpO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\\\\n//# sourceURL=webpack-internal:///./src/loading2/point-attributes.ts\\\\n\\\");\\n\\n/***/ })\\n\\n/******/ \\t});\\n/************************************************************************/\\n/******/ \\t// The module cache\\n/******/ \\tvar __webpack_module_cache__ = {};\\n/******/ \\t\\n/******/ \\t// The require function\\n/******/ \\tfunction __webpack_require__(moduleId) {\\n/******/ \\t\\t// Check if module is in cache\\n/******/ \\t\\tvar cachedModule = __webpack_module_cache__[moduleId];\\n/******/ \\t\\tif (cachedModule !== undefined) {\\n/******/ \\t\\t\\treturn cachedModule.exports;\\n/******/ \\t\\t}\\n/******/ \\t\\t// Create a new module (and put it into the cache)\\n/******/ \\t\\tvar module = __webpack_module_cache__[moduleId] = {\\n/******/ \\t\\t\\t// no module.id needed\\n/******/ \\t\\t\\t// no module.loaded needed\\n/******/ \\t\\t\\texports: {}\\n/******/ \\t\\t};\\n/******/ \\t\\n/******/ \\t\\t// Execute the module function\\n/******/ \\t\\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\\n/******/ \\t\\n/******/ \\t\\t// Return the exports of the module\\n/******/ \\t\\treturn module.exports;\\n/******/ \\t}\\n/******/ \\t\\n/************************************************************************/\\n/******/ \\t/* webpack/runtime/define property getters */\\n/******/ \\t(() => {\\n/******/ \\t\\t// define getter functions for harmony exports\\n/******/ \\t\\t__webpack_require__.d = (exports, definition) => {\\n/******/ \\t\\t\\tfor(var key in definition) {\\n/******/ \\t\\t\\t\\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\\n/******/ \\t\\t\\t\\t\\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\\n/******/ \\t\\t\\t\\t}\\n/******/ \\t\\t\\t}\\n/******/ \\t\\t};\\n/******/ \\t})();\\n/******/ \\t\\n/******/ \\t/* webpack/runtime/hasOwnProperty shorthand */\\n/******/ \\t(() => {\\n/******/ \\t\\t__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))\\n/******/ \\t})();\\n/******/ \\t\\n/******/ \\t/* webpack/runtime/make namespace object */\\n/******/ \\t(() => {\\n/******/ \\t\\t// define __esModule on exports\\n/******/ \\t\\t__webpack_require__.r = (exports) => {\\n/******/ \\t\\t\\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\\n/******/ \\t\\t\\t\\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\\n/******/ \\t\\t\\t}\\n/******/ \\t\\t\\tObject.defineProperty(exports, '__esModule', { value: true });\\n/******/ \\t\\t};\\n/******/ \\t})();\\n/******/ \\t\\n/************************************************************************/\\n/******/ \\t\\n/******/ \\t// startup\\n/******/ \\t// Load entry module and return exports\\n/******/ \\t// This entry module can't be inlined because the eval-source-map devtool is used.\\n/******/ \\tvar __webpack_exports__ = __webpack_require__(\\\"./node_modules/babel-loader/lib/index.js!./src/loading2/gltf-decoder.worker.js\\\");\\n/******/ \\t\\n/******/ })()\\n;\", \"Worker\", undefined, undefined);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/loading2/gltf-decoder.worker.js\n");

/***/ }),

/***/ "./src/workers/binary-decoder.worker.js":
/*!**********************************************!*\
  !*** ./src/workers/binary-decoder.worker.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Worker_fn)\n/* harmony export */ });\n/* harmony import */ var _node_modules_worker_loader_dist_runtime_inline_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !!../../node_modules/worker-loader/dist/runtime/inline.js */ \"./node_modules/worker-loader/dist/runtime/inline.js\");\n/* harmony import */ var _node_modules_worker_loader_dist_runtime_inline_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_worker_loader_dist_runtime_inline_js__WEBPACK_IMPORTED_MODULE_0__);\n\n\n\nfunction Worker_fn() {\n  return _node_modules_worker_loader_dist_runtime_inline_js__WEBPACK_IMPORTED_MODULE_0___default()(\"/*\\n * ATTENTION: An \\\"eval-source-map\\\" devtool has been used.\\n * This devtool is neither made for production nor for readable output files.\\n * It uses \\\"eval()\\\" calls to create a separate source file with attached SourceMaps in the browser devtools.\\n * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)\\n * or disable the default devtool with \\\"devtool: false\\\".\\n * If you are looking for production-ready output files, see mode: \\\"production\\\" (https://webpack.js.org/configuration/mode/).\\n */\\n/******/ (() => { // webpackBootstrap\\n/******/ \\t\\\"use strict\\\";\\n/******/ \\tvar __webpack_modules__ = ({\\n\\n/***/ \\\"./node_modules/babel-loader/lib/index.js!./src/workers/binary-decoder.worker.js\\\":\\n/*!***************************************************************************************!*\\\\\\n  !*** ./node_modules/babel-loader/lib/index.js!./src/workers/binary-decoder.worker.js ***!\\n  \\\\***************************************************************************************/\\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\\n\\neval(\\\"__webpack_require__.r(__webpack_exports__);\\\\n/* harmony import */ var _binary_decoder_worker_internal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./binary-decoder-worker-internal */ \\\\\\\"./src/workers/binary-decoder-worker-internal.ts\\\\\\\");\\\\n\\\\n\\\\n/*eslint-disable */\\\\nonmessage = _binary_decoder_worker_internal__WEBPACK_IMPORTED_MODULE_0__.handleMessage;//# sourceURL=[module]\\\\n\\\");\\n\\n/***/ }),\\n\\n/***/ \\\"./src/point-attributes.ts\\\":\\n/*!*********************************!*\\\\\\n  !*** ./src/point-attributes.ts ***!\\n  \\\\*********************************/\\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\\n\\neval(\\\"__webpack_require__.r(__webpack_exports__);\\\\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\\\\n/* harmony export */   POINT_ATTRIBUTES: () => (/* binding */ POINT_ATTRIBUTES),\\\\n/* harmony export */   POINT_ATTRIBUTE_TYPES: () => (/* binding */ POINT_ATTRIBUTE_TYPES),\\\\n/* harmony export */   PointAttributeName: () => (/* binding */ PointAttributeName),\\\\n/* harmony export */   PointAttributes: () => (/* binding */ PointAttributes)\\\\n/* harmony export */ });\\\\n// -------------------------------------------------------------------------------------------------\\\\n// Converted to Typescript and adapted from https://github.com/potree/potree\\\\n// -------------------------------------------------------------------------------------------------\\\\nvar PointAttributeName;\\\\n(function (PointAttributeName) {\\\\n    PointAttributeName[PointAttributeName[\\\\\\\"POSITION_CARTESIAN\\\\\\\"] = 0] = \\\\\\\"POSITION_CARTESIAN\\\\\\\";\\\\n    PointAttributeName[PointAttributeName[\\\\\\\"COLOR_PACKED\\\\\\\"] = 1] = \\\\\\\"COLOR_PACKED\\\\\\\";\\\\n    PointAttributeName[PointAttributeName[\\\\\\\"COLOR_FLOATS_1\\\\\\\"] = 2] = \\\\\\\"COLOR_FLOATS_1\\\\\\\";\\\\n    PointAttributeName[PointAttributeName[\\\\\\\"COLOR_FLOATS_255\\\\\\\"] = 3] = \\\\\\\"COLOR_FLOATS_255\\\\\\\";\\\\n    PointAttributeName[PointAttributeName[\\\\\\\"NORMAL_FLOATS\\\\\\\"] = 4] = \\\\\\\"NORMAL_FLOATS\\\\\\\";\\\\n    PointAttributeName[PointAttributeName[\\\\\\\"FILLER\\\\\\\"] = 5] = \\\\\\\"FILLER\\\\\\\";\\\\n    PointAttributeName[PointAttributeName[\\\\\\\"INTENSITY\\\\\\\"] = 6] = \\\\\\\"INTENSITY\\\\\\\";\\\\n    PointAttributeName[PointAttributeName[\\\\\\\"CLASSIFICATION\\\\\\\"] = 7] = \\\\\\\"CLASSIFICATION\\\\\\\";\\\\n    PointAttributeName[PointAttributeName[\\\\\\\"NORMAL_SPHEREMAPPED\\\\\\\"] = 8] = \\\\\\\"NORMAL_SPHEREMAPPED\\\\\\\";\\\\n    PointAttributeName[PointAttributeName[\\\\\\\"NORMAL_OCT16\\\\\\\"] = 9] = \\\\\\\"NORMAL_OCT16\\\\\\\";\\\\n    PointAttributeName[PointAttributeName[\\\\\\\"NORMAL\\\\\\\"] = 10] = \\\\\\\"NORMAL\\\\\\\";\\\\n})(PointAttributeName || (PointAttributeName = {}));\\\\nconst POINT_ATTRIBUTE_TYPES = {\\\\n    DATA_TYPE_DOUBLE: { ordinal: 0, size: 8 },\\\\n    DATA_TYPE_FLOAT: { ordinal: 1, size: 4 },\\\\n    DATA_TYPE_INT8: { ordinal: 2, size: 1 },\\\\n    DATA_TYPE_UINT8: { ordinal: 3, size: 1 },\\\\n    DATA_TYPE_INT16: { ordinal: 4, size: 2 },\\\\n    DATA_TYPE_UINT16: { ordinal: 5, size: 2 },\\\\n    DATA_TYPE_INT32: { ordinal: 6, size: 4 },\\\\n    DATA_TYPE_UINT32: { ordinal: 7, size: 4 },\\\\n    DATA_TYPE_INT64: { ordinal: 8, size: 8 },\\\\n    DATA_TYPE_UINT64: { ordinal: 9, size: 8 },\\\\n};\\\\nfunction makePointAttribute(name, type, numElements) {\\\\n    return {\\\\n        name,\\\\n        type,\\\\n        numElements,\\\\n        byteSize: numElements * type.size,\\\\n    };\\\\n}\\\\nconst RGBA_PACKED = makePointAttribute(PointAttributeName.COLOR_PACKED, POINT_ATTRIBUTE_TYPES.DATA_TYPE_INT8, 4);\\\\nconst POINT_ATTRIBUTES = {\\\\n    POSITION_CARTESIAN: makePointAttribute(PointAttributeName.POSITION_CARTESIAN, POINT_ATTRIBUTE_TYPES.DATA_TYPE_FLOAT, 3),\\\\n    RGBA_PACKED,\\\\n    COLOR_PACKED: RGBA_PACKED,\\\\n    RGB_PACKED: makePointAttribute(PointAttributeName.COLOR_PACKED, POINT_ATTRIBUTE_TYPES.DATA_TYPE_INT8, 3),\\\\n    NORMAL_FLOATS: makePointAttribute(PointAttributeName.NORMAL_FLOATS, POINT_ATTRIBUTE_TYPES.DATA_TYPE_FLOAT, 3),\\\\n    FILLER_1B: makePointAttribute(PointAttributeName.FILLER, POINT_ATTRIBUTE_TYPES.DATA_TYPE_UINT8, 1),\\\\n    INTENSITY: makePointAttribute(PointAttributeName.INTENSITY, POINT_ATTRIBUTE_TYPES.DATA_TYPE_UINT16, 1),\\\\n    CLASSIFICATION: makePointAttribute(PointAttributeName.CLASSIFICATION, POINT_ATTRIBUTE_TYPES.DATA_TYPE_UINT8, 1),\\\\n    NORMAL_SPHEREMAPPED: makePointAttribute(PointAttributeName.NORMAL_SPHEREMAPPED, POINT_ATTRIBUTE_TYPES.DATA_TYPE_UINT8, 2),\\\\n    NORMAL_OCT16: makePointAttribute(PointAttributeName.NORMAL_OCT16, POINT_ATTRIBUTE_TYPES.DATA_TYPE_UINT8, 2),\\\\n    NORMAL: makePointAttribute(PointAttributeName.NORMAL, POINT_ATTRIBUTE_TYPES.DATA_TYPE_FLOAT, 3),\\\\n};\\\\nclass PointAttributes {\\\\n    constructor(pointAttributeNames = []) {\\\\n        this.attributes = [];\\\\n        this.byteSize = 0;\\\\n        this.size = 0;\\\\n        for (let i = 0; i < pointAttributeNames.length; i++) {\\\\n            const pointAttributeName = pointAttributeNames[i];\\\\n            const pointAttribute = POINT_ATTRIBUTES[pointAttributeName];\\\\n            this.attributes.push(pointAttribute);\\\\n            this.byteSize += pointAttribute.byteSize;\\\\n            this.size++;\\\\n        }\\\\n    }\\\\n    add(pointAttribute) {\\\\n        this.attributes.push(pointAttribute);\\\\n        this.byteSize += pointAttribute.byteSize;\\\\n        this.size++;\\\\n    }\\\\n    hasColors() {\\\\n        return this.attributes.find(isColorAttribute) !== undefined;\\\\n    }\\\\n    hasNormals() {\\\\n        return this.attributes.find(isNormalAttribute) !== undefined;\\\\n    }\\\\n}\\\\nfunction isColorAttribute({ name }) {\\\\n    return name === PointAttributeName.COLOR_PACKED;\\\\n}\\\\nfunction isNormalAttribute({ name }) {\\\\n    return (name === PointAttributeName.NORMAL_SPHEREMAPPED ||\\\\n        name === PointAttributeName.NORMAL_FLOATS ||\\\\n        name === PointAttributeName.NORMAL ||\\\\n        name === PointAttributeName.NORMAL_OCT16);\\\\n}\\\\n//# sourceURL=[module]\\\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcG9pbnQtYXR0cmlidXRlcy50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3RyZWUvLi9zcmMvcG9pbnQtYXR0cmlidXRlcy50cz9lMDMyIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIENvbnZlcnRlZCB0byBUeXBlc2NyaXB0IGFuZCBhZGFwdGVkIGZyb20gaHR0cHM6Ly9naXRodWIuY29tL3BvdHJlZS9wb3RyZWVcbi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbmV4cG9ydCB2YXIgUG9pbnRBdHRyaWJ1dGVOYW1lO1xuKGZ1bmN0aW9uIChQb2ludEF0dHJpYnV0ZU5hbWUpIHtcbiAgICBQb2ludEF0dHJpYnV0ZU5hbWVbUG9pbnRBdHRyaWJ1dGVOYW1lW1wiUE9TSVRJT05fQ0FSVEVTSUFOXCJdID0gMF0gPSBcIlBPU0lUSU9OX0NBUlRFU0lBTlwiO1xuICAgIFBvaW50QXR0cmlidXRlTmFtZVtQb2ludEF0dHJpYnV0ZU5hbWVbXCJDT0xPUl9QQUNLRURcIl0gPSAxXSA9IFwiQ09MT1JfUEFDS0VEXCI7XG4gICAgUG9pbnRBdHRyaWJ1dGVOYW1lW1BvaW50QXR0cmlidXRlTmFtZVtcIkNPTE9SX0ZMT0FUU18xXCJdID0gMl0gPSBcIkNPTE9SX0ZMT0FUU18xXCI7XG4gICAgUG9pbnRBdHRyaWJ1dGVOYW1lW1BvaW50QXR0cmlidXRlTmFtZVtcIkNPTE9SX0ZMT0FUU18yNTVcIl0gPSAzXSA9IFwiQ09MT1JfRkxPQVRTXzI1NVwiO1xuICAgIFBvaW50QXR0cmlidXRlTmFtZVtQb2ludEF0dHJpYnV0ZU5hbWVbXCJOT1JNQUxfRkxPQVRTXCJdID0gNF0gPSBcIk5PUk1BTF9GTE9BVFNcIjtcbiAgICBQb2ludEF0dHJpYnV0ZU5hbWVbUG9pbnRBdHRyaWJ1dGVOYW1lW1wiRklMTEVSXCJdID0gNV0gPSBcIkZJTExFUlwiO1xuICAgIFBvaW50QXR0cmlidXRlTmFtZVtQb2ludEF0dHJpYnV0ZU5hbWVbXCJJTlRFTlNJVFlcIl0gPSA2XSA9IFwiSU5URU5TSVRZXCI7XG4gICAgUG9pbnRBdHRyaWJ1dGVOYW1lW1BvaW50QXR0cmlidXRlTmFtZVtcIkNMQVNTSUZJQ0FUSU9OXCJdID0gN10gPSBcIkNMQVNTSUZJQ0FUSU9OXCI7XG4gICAgUG9pbnRBdHRyaWJ1dGVOYW1lW1BvaW50QXR0cmlidXRlTmFtZVtcIk5PUk1BTF9TUEhFUkVNQVBQRURcIl0gPSA4XSA9IFwiTk9STUFMX1NQSEVSRU1BUFBFRFwiO1xuICAgIFBvaW50QXR0cmlidXRlTmFtZVtQb2ludEF0dHJpYnV0ZU5hbWVbXCJOT1JNQUxfT0NUMTZcIl0gPSA5XSA9IFwiTk9STUFMX09DVDE2XCI7XG4gICAgUG9pbnRBdHRyaWJ1dGVOYW1lW1BvaW50QXR0cmlidXRlTmFtZVtcIk5PUk1BTFwiXSA9IDEwXSA9IFwiTk9STUFMXCI7XG59KShQb2ludEF0dHJpYnV0ZU5hbWUgfHwgKFBvaW50QXR0cmlidXRlTmFtZSA9IHt9KSk7XG5leHBvcnQgY29uc3QgUE9JTlRfQVRUUklCVVRFX1RZUEVTID0ge1xuICAgIERBVEFfVFlQRV9ET1VCTEU6IHsgb3JkaW5hbDogMCwgc2l6ZTogOCB9LFxuICAgIERBVEFfVFlQRV9GTE9BVDogeyBvcmRpbmFsOiAxLCBzaXplOiA0IH0sXG4gICAgREFUQV9UWVBFX0lOVDg6IHsgb3JkaW5hbDogMiwgc2l6ZTogMSB9LFxuICAgIERBVEFfVFlQRV9VSU5UODogeyBvcmRpbmFsOiAzLCBzaXplOiAxIH0sXG4gICAgREFUQV9UWVBFX0lOVDE2OiB7IG9yZGluYWw6IDQsIHNpemU6IDIgfSxcbiAgICBEQVRBX1RZUEVfVUlOVDE2OiB7IG9yZGluYWw6IDUsIHNpemU6IDIgfSxcbiAgICBEQVRBX1RZUEVfSU5UMzI6IHsgb3JkaW5hbDogNiwgc2l6ZTogNCB9LFxuICAgIERBVEFfVFlQRV9VSU5UMzI6IHsgb3JkaW5hbDogNywgc2l6ZTogNCB9LFxuICAgIERBVEFfVFlQRV9JTlQ2NDogeyBvcmRpbmFsOiA4LCBzaXplOiA4IH0sXG4gICAgREFUQV9UWVBFX1VJTlQ2NDogeyBvcmRpbmFsOiA5LCBzaXplOiA4IH0sXG59O1xuZnVuY3Rpb24gbWFrZVBvaW50QXR0cmlidXRlKG5hbWUsIHR5cGUsIG51bUVsZW1lbnRzKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgbmFtZSxcbiAgICAgICAgdHlwZSxcbiAgICAgICAgbnVtRWxlbWVudHMsXG4gICAgICAgIGJ5dGVTaXplOiBudW1FbGVtZW50cyAqIHR5cGUuc2l6ZSxcbiAgICB9O1xufVxuY29uc3QgUkdCQV9QQUNLRUQgPSBtYWtlUG9pbnRBdHRyaWJ1dGUoUG9pbnRBdHRyaWJ1dGVOYW1lLkNPTE9SX1BBQ0tFRCwgUE9JTlRfQVRUUklCVVRFX1RZUEVTLkRBVEFfVFlQRV9JTlQ4LCA0KTtcbmV4cG9ydCBjb25zdCBQT0lOVF9BVFRSSUJVVEVTID0ge1xuICAgIFBPU0lUSU9OX0NBUlRFU0lBTjogbWFrZVBvaW50QXR0cmlidXRlKFBvaW50QXR0cmlidXRlTmFtZS5QT1NJVElPTl9DQVJURVNJQU4sIFBPSU5UX0FUVFJJQlVURV9UWVBFUy5EQVRBX1RZUEVfRkxPQVQsIDMpLFxuICAgIFJHQkFfUEFDS0VELFxuICAgIENPTE9SX1BBQ0tFRDogUkdCQV9QQUNLRUQsXG4gICAgUkdCX1BBQ0tFRDogbWFrZVBvaW50QXR0cmlidXRlKFBvaW50QXR0cmlidXRlTmFtZS5DT0xPUl9QQUNLRUQsIFBPSU5UX0FUVFJJQlVURV9UWVBFUy5EQVRBX1RZUEVfSU5UOCwgMyksXG4gICAgTk9STUFMX0ZMT0FUUzogbWFrZVBvaW50QXR0cmlidXRlKFBvaW50QXR0cmlidXRlTmFtZS5OT1JNQUxfRkxPQVRTLCBQT0lOVF9BVFRSSUJVVEVfVFlQRVMuREFUQV9UWVBFX0ZMT0FULCAzKSxcbiAgICBGSUxMRVJfMUI6IG1ha2VQb2ludEF0dHJpYnV0ZShQb2ludEF0dHJpYnV0ZU5hbWUuRklMTEVSLCBQT0lOVF9BVFRSSUJVVEVfVFlQRVMuREFUQV9UWVBFX1VJTlQ4LCAxKSxcbiAgICBJTlRFTlNJVFk6IG1ha2VQb2ludEF0dHJpYnV0ZShQb2ludEF0dHJpYnV0ZU5hbWUuSU5URU5TSVRZLCBQT0lOVF9BVFRSSUJVVEVfVFlQRVMuREFUQV9UWVBFX1VJTlQxNiwgMSksXG4gICAgQ0xBU1NJRklDQVRJT046IG1ha2VQb2ludEF0dHJpYnV0ZShQb2ludEF0dHJpYnV0ZU5hbWUuQ0xBU1NJRklDQVRJT04sIFBPSU5UX0FUVFJJQlVURV9UWVBFUy5EQVRBX1RZUEVfVUlOVDgsIDEpLFxuICAgIE5PUk1BTF9TUEhFUkVNQVBQRUQ6IG1ha2VQb2ludEF0dHJpYnV0ZShQb2ludEF0dHJpYnV0ZU5hbWUuTk9STUFMX1NQSEVSRU1BUFBFRCwgUE9JTlRfQVRUUklCVVRFX1RZUEVTLkRBVEFfVFlQRV9VSU5UOCwgMiksXG4gICAgTk9STUFMX09DVDE2OiBtYWtlUG9pbnRBdHRyaWJ1dGUoUG9pbnRBdHRyaWJ1dGVOYW1lLk5PUk1BTF9PQ1QxNiwgUE9JTlRfQVRUUklCVVRFX1RZUEVTLkRBVEFfVFlQRV9VSU5UOCwgMiksXG4gICAgTk9STUFMOiBtYWtlUG9pbnRBdHRyaWJ1dGUoUG9pbnRBdHRyaWJ1dGVOYW1lLk5PUk1BTCwgUE9JTlRfQVRUUklCVVRFX1RZUEVTLkRBVEFfVFlQRV9GTE9BVCwgMyksXG59O1xuZXhwb3J0IGNsYXNzIFBvaW50QXR0cmlidXRlcyB7XG4gICAgY29uc3RydWN0b3IocG9pbnRBdHRyaWJ1dGVOYW1lcyA9IFtdKSB7XG4gICAgICAgIHRoaXMuYXR0cmlidXRlcyA9IFtdO1xuICAgICAgICB0aGlzLmJ5dGVTaXplID0gMDtcbiAgICAgICAgdGhpcy5zaXplID0gMDtcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBwb2ludEF0dHJpYnV0ZU5hbWVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBjb25zdCBwb2ludEF0dHJpYnV0ZU5hbWUgPSBwb2ludEF0dHJpYnV0ZU5hbWVzW2ldO1xuICAgICAgICAgICAgY29uc3QgcG9pbnRBdHRyaWJ1dGUgPSBQT0lOVF9BVFRSSUJVVEVTW3BvaW50QXR0cmlidXRlTmFtZV07XG4gICAgICAgICAgICB0aGlzLmF0dHJpYnV0ZXMucHVzaChwb2ludEF0dHJpYnV0ZSk7XG4gICAgICAgICAgICB0aGlzLmJ5dGVTaXplICs9IHBvaW50QXR0cmlidXRlLmJ5dGVTaXplO1xuICAgICAgICAgICAgdGhpcy5zaXplKys7XG4gICAgICAgIH1cbiAgICB9XG4gICAgYWRkKHBvaW50QXR0cmlidXRlKSB7XG4gICAgICAgIHRoaXMuYXR0cmlidXRlcy5wdXNoKHBvaW50QXR0cmlidXRlKTtcbiAgICAgICAgdGhpcy5ieXRlU2l6ZSArPSBwb2ludEF0dHJpYnV0ZS5ieXRlU2l6ZTtcbiAgICAgICAgdGhpcy5zaXplKys7XG4gICAgfVxuICAgIGhhc0NvbG9ycygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuYXR0cmlidXRlcy5maW5kKGlzQ29sb3JBdHRyaWJ1dGUpICE9PSB1bmRlZmluZWQ7XG4gICAgfVxuICAgIGhhc05vcm1hbHMoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmF0dHJpYnV0ZXMuZmluZChpc05vcm1hbEF0dHJpYnV0ZSkgIT09IHVuZGVmaW5lZDtcbiAgICB9XG59XG5mdW5jdGlvbiBpc0NvbG9yQXR0cmlidXRlKHsgbmFtZSB9KSB7XG4gICAgcmV0dXJuIG5hbWUgPT09IFBvaW50QXR0cmlidXRlTmFtZS5DT0xPUl9QQUNLRUQ7XG59XG5mdW5jdGlvbiBpc05vcm1hbEF0dHJpYnV0ZSh7IG5hbWUgfSkge1xuICAgIHJldHVybiAobmFtZSA9PT0gUG9pbnRBdHRyaWJ1dGVOYW1lLk5PUk1BTF9TUEhFUkVNQVBQRUQgfHxcbiAgICAgICAgbmFtZSA9PT0gUG9pbnRBdHRyaWJ1dGVOYW1lLk5PUk1BTF9GTE9BVFMgfHxcbiAgICAgICAgbmFtZSA9PT0gUG9pbnRBdHRyaWJ1dGVOYW1lLk5PUk1BTCB8fFxuICAgICAgICBuYW1lID09PSBQb2ludEF0dHJpYnV0ZU5hbWUuTk9STUFMX09DVDE2KTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\\\\n//# sourceURL=webpack-internal:///./src/point-attributes.ts\\\\n\\\");\\n\\n/***/ }),\\n\\n/***/ \\\"./src/version.ts\\\":\\n/*!************************!*\\\\\\n  !*** ./src/version.ts ***!\\n  \\\\************************/\\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\\n\\neval(\\\"__webpack_require__.r(__webpack_exports__);\\\\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\\\\n/* harmony export */   Version: () => (/* binding */ Version)\\\\n/* harmony export */ });\\\\nclass Version {\\\\n    constructor(version) {\\\\n        this.versionMinor = 0;\\\\n        this.version = version;\\\\n        const vmLength = version.indexOf('.') === -1 ? version.length : version.indexOf('.');\\\\n        this.versionMajor = parseInt(version.substr(0, vmLength), 10);\\\\n        this.versionMinor = parseInt(version.substr(vmLength + 1), 10);\\\\n        if (isNaN(this.versionMinor)) {\\\\n            this.versionMinor = 0;\\\\n        }\\\\n    }\\\\n    newerThan(version) {\\\\n        const v = new Version(version);\\\\n        if (this.versionMajor > v.versionMajor) {\\\\n            return true;\\\\n        }\\\\n        else if (this.versionMajor === v.versionMajor && this.versionMinor > v.versionMinor) {\\\\n            return true;\\\\n        }\\\\n        else {\\\\n            return false;\\\\n        }\\\\n    }\\\\n    equalOrHigher(version) {\\\\n        const v = new Version(version);\\\\n        if (this.versionMajor > v.versionMajor) {\\\\n            return true;\\\\n        }\\\\n        else if (this.versionMajor === v.versionMajor && this.versionMinor >= v.versionMinor) {\\\\n            return true;\\\\n        }\\\\n        else {\\\\n            return false;\\\\n        }\\\\n    }\\\\n    upTo(version) {\\\\n        return !this.newerThan(version);\\\\n    }\\\\n}\\\\n//# sourceURL=[module]\\\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvdmVyc2lvbi50cyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG90cmVlLy4vc3JjL3ZlcnNpb24udHM/MTAyOSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY2xhc3MgVmVyc2lvbiB7XG4gICAgY29uc3RydWN0b3IodmVyc2lvbikge1xuICAgICAgICB0aGlzLnZlcnNpb25NaW5vciA9IDA7XG4gICAgICAgIHRoaXMudmVyc2lvbiA9IHZlcnNpb247XG4gICAgICAgIGNvbnN0IHZtTGVuZ3RoID0gdmVyc2lvbi5pbmRleE9mKCcuJykgPT09IC0xID8gdmVyc2lvbi5sZW5ndGggOiB2ZXJzaW9uLmluZGV4T2YoJy4nKTtcbiAgICAgICAgdGhpcy52ZXJzaW9uTWFqb3IgPSBwYXJzZUludCh2ZXJzaW9uLnN1YnN0cigwLCB2bUxlbmd0aCksIDEwKTtcbiAgICAgICAgdGhpcy52ZXJzaW9uTWlub3IgPSBwYXJzZUludCh2ZXJzaW9uLnN1YnN0cih2bUxlbmd0aCArIDEpLCAxMCk7XG4gICAgICAgIGlmIChpc05hTih0aGlzLnZlcnNpb25NaW5vcikpIHtcbiAgICAgICAgICAgIHRoaXMudmVyc2lvbk1pbm9yID0gMDtcbiAgICAgICAgfVxuICAgIH1cbiAgICBuZXdlclRoYW4odmVyc2lvbikge1xuICAgICAgICBjb25zdCB2ID0gbmV3IFZlcnNpb24odmVyc2lvbik7XG4gICAgICAgIGlmICh0aGlzLnZlcnNpb25NYWpvciA+IHYudmVyc2lvbk1ham9yKSB7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICh0aGlzLnZlcnNpb25NYWpvciA9PT0gdi52ZXJzaW9uTWFqb3IgJiYgdGhpcy52ZXJzaW9uTWlub3IgPiB2LnZlcnNpb25NaW5vcikge1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZXF1YWxPckhpZ2hlcih2ZXJzaW9uKSB7XG4gICAgICAgIGNvbnN0IHYgPSBuZXcgVmVyc2lvbih2ZXJzaW9uKTtcbiAgICAgICAgaWYgKHRoaXMudmVyc2lvbk1ham9yID4gdi52ZXJzaW9uTWFqb3IpIHtcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKHRoaXMudmVyc2lvbk1ham9yID09PSB2LnZlcnNpb25NYWpvciAmJiB0aGlzLnZlcnNpb25NaW5vciA+PSB2LnZlcnNpb25NaW5vcikge1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICB9XG4gICAgdXBUbyh2ZXJzaW9uKSB7XG4gICAgICAgIHJldHVybiAhdGhpcy5uZXdlclRoYW4odmVyc2lvbik7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\\\\n//# sourceURL=webpack-internal:///./src/version.ts\\\\n\\\");\\n\\n/***/ }),\\n\\n/***/ \\\"./src/workers/binary-decoder-worker-internal.ts\\\":\\n/*!*******************************************************!*\\\\\\n  !*** ./src/workers/binary-decoder-worker-internal.ts ***!\\n  \\\\*******************************************************/\\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\\n\\neval(\\\"__webpack_require__.r(__webpack_exports__);\\\\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\\\\n/* harmony export */   handleMessage: () => (/* binding */ handleMessage)\\\\n/* harmony export */ });\\\\n/* harmony import */ var _point_attributes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../point-attributes */ \\\\\\\"./src/point-attributes.ts\\\\\\\");\\\\n/* harmony import */ var _version__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../version */ \\\\\\\"./src/version.ts\\\\\\\");\\\\n/* harmony import */ var _custom_array_view__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./custom-array-view */ \\\\\\\"./src/workers/custom-array-view.ts\\\\\\\");\\\\n/**\\\\n * Adapted from Potree.js http://potree.org\\\\n * Potree License: https://github.com/potree/potree/blob/1.5/LICENSE\\\\n */\\\\n\\\\n\\\\n\\\\n// IE11 does not have Math.sign(), this has been adapted from CoreJS es6.math.sign.js for TypeScript\\\\nconst mathSign = Math.sign ||\\\\n    function (x) {\\\\n        // tslint:disable-next-line:triple-equals\\\\n        return (x = +x) == 0 || x != x ? x : x < 0 ? -1 : 1;\\\\n    };\\\\nfunction handleMessage(event) {\\\\n    const buffer = event.data.buffer;\\\\n    const pointAttributes = event.data.pointAttributes;\\\\n    const ctx = {\\\\n        attributeBuffers: {},\\\\n        currentOffset: 0,\\\\n        data: new _custom_array_view__WEBPACK_IMPORTED_MODULE_2__.CustomArrayView(buffer),\\\\n        mean: [0, 0, 0],\\\\n        nodeOffset: event.data.offset,\\\\n        numPoints: event.data.buffer.byteLength / pointAttributes.byteSize,\\\\n        pointAttributes,\\\\n        scale: event.data.scale,\\\\n        tightBoxMax: [Number.NEGATIVE_INFINITY, Number.NEGATIVE_INFINITY, Number.NEGATIVE_INFINITY],\\\\n        tightBoxMin: [Number.POSITIVE_INFINITY, Number.POSITIVE_INFINITY, Number.POSITIVE_INFINITY],\\\\n        transferables: [],\\\\n        version: new _version__WEBPACK_IMPORTED_MODULE_1__.Version(event.data.version),\\\\n    };\\\\n    for (const pointAttribute of ctx.pointAttributes.attributes) {\\\\n        decodeAndAddAttribute(pointAttribute, ctx);\\\\n        ctx.currentOffset += pointAttribute.byteSize;\\\\n    }\\\\n    const indices = new ArrayBuffer(ctx.numPoints * 4);\\\\n    const iIndices = new Uint32Array(indices);\\\\n    for (let i = 0; i < ctx.numPoints; i++) {\\\\n        iIndices[i] = i;\\\\n    }\\\\n    if (!ctx.attributeBuffers[_point_attributes__WEBPACK_IMPORTED_MODULE_0__.PointAttributeName.CLASSIFICATION]) {\\\\n        addEmptyClassificationBuffer(ctx);\\\\n    }\\\\n    const message = {\\\\n        buffer: buffer,\\\\n        mean: ctx.mean,\\\\n        attributeBuffers: ctx.attributeBuffers,\\\\n        tightBoundingBox: { min: ctx.tightBoxMin, max: ctx.tightBoxMax },\\\\n        indices,\\\\n    };\\\\n    postMessage(message, ctx.transferables);\\\\n}\\\\nfunction addEmptyClassificationBuffer(ctx) {\\\\n    const buffer = new ArrayBuffer(ctx.numPoints * 4);\\\\n    const classifications = new Float32Array(buffer);\\\\n    for (let i = 0; i < ctx.numPoints; i++) {\\\\n        classifications[i] = 0;\\\\n    }\\\\n    ctx.attributeBuffers[_point_attributes__WEBPACK_IMPORTED_MODULE_0__.PointAttributeName.CLASSIFICATION] = {\\\\n        buffer,\\\\n        attribute: _point_attributes__WEBPACK_IMPORTED_MODULE_0__.POINT_ATTRIBUTES.CLASSIFICATION,\\\\n    };\\\\n}\\\\nfunction decodeAndAddAttribute(attribute, ctx) {\\\\n    const decodedAttribute = decodePointAttribute(attribute, ctx);\\\\n    if (decodedAttribute === undefined) {\\\\n        return;\\\\n    }\\\\n    ctx.attributeBuffers[decodedAttribute.attribute.name] = decodedAttribute;\\\\n    ctx.transferables.push(decodedAttribute.buffer);\\\\n}\\\\nfunction decodePointAttribute(attribute, ctx) {\\\\n    switch (attribute.name) {\\\\n        case _point_attributes__WEBPACK_IMPORTED_MODULE_0__.PointAttributeName.POSITION_CARTESIAN:\\\\n            return decodePositionCartesian(attribute, ctx);\\\\n        case _point_attributes__WEBPACK_IMPORTED_MODULE_0__.PointAttributeName.COLOR_PACKED:\\\\n            return decodeColor(attribute, ctx);\\\\n        case _point_attributes__WEBPACK_IMPORTED_MODULE_0__.PointAttributeName.INTENSITY:\\\\n            return decodeIntensity(attribute, ctx);\\\\n        case _point_attributes__WEBPACK_IMPORTED_MODULE_0__.PointAttributeName.CLASSIFICATION:\\\\n            return decodeClassification(attribute, ctx);\\\\n        case _point_attributes__WEBPACK_IMPORTED_MODULE_0__.PointAttributeName.NORMAL_SPHEREMAPPED:\\\\n            return decodeNormalSphereMapped(attribute, ctx);\\\\n        case _point_attributes__WEBPACK_IMPORTED_MODULE_0__.PointAttributeName.NORMAL_OCT16:\\\\n            return decodeNormalOct16(attribute, ctx);\\\\n        case _point_attributes__WEBPACK_IMPORTED_MODULE_0__.PointAttributeName.NORMAL:\\\\n            return decodeNormal(attribute, ctx);\\\\n        default:\\\\n            return undefined;\\\\n    }\\\\n}\\\\nfunction decodePositionCartesian(attribute, ctx) {\\\\n    const buffer = new ArrayBuffer(ctx.numPoints * 4 * 3);\\\\n    const positions = new Float32Array(buffer);\\\\n    for (let i = 0; i < ctx.numPoints; i++) {\\\\n        let x;\\\\n        let y;\\\\n        let z;\\\\n        if (ctx.version.newerThan('1.3')) {\\\\n            x = ctx.data.getUint32(ctx.currentOffset + i * ctx.pointAttributes.byteSize + 0) * ctx.scale;\\\\n            y = ctx.data.getUint32(ctx.currentOffset + i * ctx.pointAttributes.byteSize + 4) * ctx.scale;\\\\n            z = ctx.data.getUint32(ctx.currentOffset + i * ctx.pointAttributes.byteSize + 8) * ctx.scale;\\\\n        }\\\\n        else {\\\\n            x = ctx.data.getFloat32(i * ctx.pointAttributes.byteSize + 0) + ctx.nodeOffset[0];\\\\n            y = ctx.data.getFloat32(i * ctx.pointAttributes.byteSize + 4) + ctx.nodeOffset[1];\\\\n            z = ctx.data.getFloat32(i * ctx.pointAttributes.byteSize + 8) + ctx.nodeOffset[2];\\\\n        }\\\\n        positions[3 * i + 0] = x;\\\\n        positions[3 * i + 1] = y;\\\\n        positions[3 * i + 2] = z;\\\\n        ctx.mean[0] += x / ctx.numPoints;\\\\n        ctx.mean[1] += y / ctx.numPoints;\\\\n        ctx.mean[2] += z / ctx.numPoints;\\\\n        ctx.tightBoxMin[0] = Math.min(ctx.tightBoxMin[0], x);\\\\n        ctx.tightBoxMin[1] = Math.min(ctx.tightBoxMin[1], y);\\\\n        ctx.tightBoxMin[2] = Math.min(ctx.tightBoxMin[2], z);\\\\n        ctx.tightBoxMax[0] = Math.max(ctx.tightBoxMax[0], x);\\\\n        ctx.tightBoxMax[1] = Math.max(ctx.tightBoxMax[1], y);\\\\n        ctx.tightBoxMax[2] = Math.max(ctx.tightBoxMax[2], z);\\\\n    }\\\\n    return { buffer, attribute };\\\\n}\\\\nfunction decodeColor(attribute, ctx) {\\\\n    const buffer = new ArrayBuffer(ctx.numPoints * 3);\\\\n    const colors = new Uint8Array(buffer);\\\\n    for (let i = 0; i < ctx.numPoints; i++) {\\\\n        colors[3 * i + 0] = ctx.data.getUint8(ctx.currentOffset + i * ctx.pointAttributes.byteSize + 0);\\\\n        colors[3 * i + 1] = ctx.data.getUint8(ctx.currentOffset + i * ctx.pointAttributes.byteSize + 1);\\\\n        colors[3 * i + 2] = ctx.data.getUint8(ctx.currentOffset + i * ctx.pointAttributes.byteSize + 2);\\\\n    }\\\\n    return { buffer, attribute };\\\\n}\\\\nfunction decodeIntensity(attribute, ctx) {\\\\n    const buffer = new ArrayBuffer(ctx.numPoints * 4);\\\\n    const intensities = new Float32Array(buffer);\\\\n    for (let i = 0; i < ctx.numPoints; i++) {\\\\n        intensities[i] = ctx.data.getUint16(ctx.currentOffset + i * ctx.pointAttributes.byteSize);\\\\n    }\\\\n    return { buffer, attribute };\\\\n}\\\\nfunction decodeClassification(attribute, ctx) {\\\\n    const buffer = new ArrayBuffer(ctx.numPoints);\\\\n    const classifications = new Uint8Array(buffer);\\\\n    for (let j = 0; j < ctx.numPoints; j++) {\\\\n        classifications[j] = ctx.data.getUint8(ctx.currentOffset + j * ctx.pointAttributes.byteSize);\\\\n    }\\\\n    return { buffer, attribute };\\\\n}\\\\nfunction decodeNormalSphereMapped(attribute, ctx) {\\\\n    const buffer = new ArrayBuffer(ctx.numPoints * 4 * 3);\\\\n    const normals = new Float32Array(buffer);\\\\n    for (let j = 0; j < ctx.numPoints; j++) {\\\\n        const bx = ctx.data.getUint8(ctx.currentOffset + j * ctx.pointAttributes.byteSize + 0);\\\\n        const by = ctx.data.getUint8(ctx.currentOffset + j * ctx.pointAttributes.byteSize + 1);\\\\n        const ex = bx / 255;\\\\n        const ey = by / 255;\\\\n        let nx = ex * 2 - 1;\\\\n        let ny = ey * 2 - 1;\\\\n        let nz = 1;\\\\n        const nw = -1;\\\\n        const l = nx * -nx + ny * -ny + nz * -nw;\\\\n        nz = l;\\\\n        nx = nx * Math.sqrt(l);\\\\n        ny = ny * Math.sqrt(l);\\\\n        nx = nx * 2;\\\\n        ny = ny * 2;\\\\n        nz = nz * 2 - 1;\\\\n        normals[3 * j + 0] = nx;\\\\n        normals[3 * j + 1] = ny;\\\\n        normals[3 * j + 2] = nz;\\\\n    }\\\\n    return { buffer, attribute };\\\\n}\\\\nfunction decodeNormalOct16(attribute, ctx) {\\\\n    const buff = new ArrayBuffer(ctx.numPoints * 4 * 3);\\\\n    const normals = new Float32Array(buff);\\\\n    for (let j = 0; j < ctx.numPoints; j++) {\\\\n        const bx = ctx.data.getUint8(ctx.currentOffset + j * ctx.pointAttributes.byteSize + 0);\\\\n        const by = ctx.data.getUint8(ctx.currentOffset + j * ctx.pointAttributes.byteSize + 1);\\\\n        const u = (bx / 255) * 2 - 1;\\\\n        const v = (by / 255) * 2 - 1;\\\\n        let z = 1 - Math.abs(u) - Math.abs(v);\\\\n        let x = 0;\\\\n        let y = 0;\\\\n        if (z >= 0) {\\\\n            x = u;\\\\n            y = v;\\\\n        }\\\\n        else {\\\\n            x = -(v / mathSign(v) - 1) / mathSign(u);\\\\n            y = -(u / mathSign(u) - 1) / mathSign(v);\\\\n        }\\\\n        const length = Math.sqrt(x * x + y * y + z * z);\\\\n        x = x / length;\\\\n        y = y / length;\\\\n        z = z / length;\\\\n        normals[3 * j + 0] = x;\\\\n        normals[3 * j + 1] = y;\\\\n        normals[3 * j + 2] = z;\\\\n    }\\\\n    return { buffer: buff, attribute };\\\\n}\\\\nfunction decodeNormal(attribute, ctx) {\\\\n    const buffer = new ArrayBuffer(ctx.numPoints * 4 * 3);\\\\n    const normals = new Float32Array(buffer);\\\\n    for (let j = 0; j < ctx.numPoints; j++) {\\\\n        const x = ctx.data.getFloat32(ctx.currentOffset + j * ctx.pointAttributes.byteSize + 0);\\\\n        const y = ctx.data.getFloat32(ctx.currentOffset + j * ctx.pointAttributes.byteSize + 4);\\\\n        const z = ctx.data.getFloat32(ctx.currentOffset + j * ctx.pointAttributes.byteSize + 8);\\\\n        normals[3 * j + 0] = x;\\\\n        normals[3 * j + 1] = y;\\\\n        normals[3 * j + 2] = z;\\\\n    }\\\\n    return { buffer, attribute };\\\\n}\\\\n//# sourceURL=[module]\\\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvd29ya2Vycy9iaW5hcnktZGVjb2Rlci13b3JrZXItaW50ZXJuYWwudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3RyZWUvLi9zcmMvd29ya2Vycy9iaW5hcnktZGVjb2Rlci13b3JrZXItaW50ZXJuYWwudHM/Y2RmZiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEFkYXB0ZWQgZnJvbSBQb3RyZWUuanMgaHR0cDovL3BvdHJlZS5vcmdcbiAqIFBvdHJlZSBMaWNlbnNlOiBodHRwczovL2dpdGh1Yi5jb20vcG90cmVlL3BvdHJlZS9ibG9iLzEuNS9MSUNFTlNFXG4gKi9cbmltcG9ydCB7IFBvaW50QXR0cmlidXRlTmFtZSwgUE9JTlRfQVRUUklCVVRFUywgfSBmcm9tICcuLi9wb2ludC1hdHRyaWJ1dGVzJztcbmltcG9ydCB7IFZlcnNpb24gfSBmcm9tICcuLi92ZXJzaW9uJztcbmltcG9ydCB7IEN1c3RvbUFycmF5VmlldyB9IGZyb20gJy4vY3VzdG9tLWFycmF5LXZpZXcnO1xuLy8gSUUxMSBkb2VzIG5vdCBoYXZlIE1hdGguc2lnbigpLCB0aGlzIGhhcyBiZWVuIGFkYXB0ZWQgZnJvbSBDb3JlSlMgZXM2Lm1hdGguc2lnbi5qcyBmb3IgVHlwZVNjcmlwdFxuY29uc3QgbWF0aFNpZ24gPSBNYXRoLnNpZ24gfHxcbiAgICBmdW5jdGlvbiAoeCkge1xuICAgICAgICAvLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6dHJpcGxlLWVxdWFsc1xuICAgICAgICByZXR1cm4gKHggPSAreCkgPT0gMCB8fCB4ICE9IHggPyB4IDogeCA8IDAgPyAtMSA6IDE7XG4gICAgfTtcbmV4cG9ydCBmdW5jdGlvbiBoYW5kbGVNZXNzYWdlKGV2ZW50KSB7XG4gICAgY29uc3QgYnVmZmVyID0gZXZlbnQuZGF0YS5idWZmZXI7XG4gICAgY29uc3QgcG9pbnRBdHRyaWJ1dGVzID0gZXZlbnQuZGF0YS5wb2ludEF0dHJpYnV0ZXM7XG4gICAgY29uc3QgY3R4ID0ge1xuICAgICAgICBhdHRyaWJ1dGVCdWZmZXJzOiB7fSxcbiAgICAgICAgY3VycmVudE9mZnNldDogMCxcbiAgICAgICAgZGF0YTogbmV3IEN1c3RvbUFycmF5VmlldyhidWZmZXIpLFxuICAgICAgICBtZWFuOiBbMCwgMCwgMF0sXG4gICAgICAgIG5vZGVPZmZzZXQ6IGV2ZW50LmRhdGEub2Zmc2V0LFxuICAgICAgICBudW1Qb2ludHM6IGV2ZW50LmRhdGEuYnVmZmVyLmJ5dGVMZW5ndGggLyBwb2ludEF0dHJpYnV0ZXMuYnl0ZVNpemUsXG4gICAgICAgIHBvaW50QXR0cmlidXRlcyxcbiAgICAgICAgc2NhbGU6IGV2ZW50LmRhdGEuc2NhbGUsXG4gICAgICAgIHRpZ2h0Qm94TWF4OiBbTnVtYmVyLk5FR0FUSVZFX0lORklOSVRZLCBOdW1iZXIuTkVHQVRJVkVfSU5GSU5JVFksIE51bWJlci5ORUdBVElWRV9JTkZJTklUWV0sXG4gICAgICAgIHRpZ2h0Qm94TWluOiBbTnVtYmVyLlBPU0lUSVZFX0lORklOSVRZLCBOdW1iZXIuUE9TSVRJVkVfSU5GSU5JVFksIE51bWJlci5QT1NJVElWRV9JTkZJTklUWV0sXG4gICAgICAgIHRyYW5zZmVyYWJsZXM6IFtdLFxuICAgICAgICB2ZXJzaW9uOiBuZXcgVmVyc2lvbihldmVudC5kYXRhLnZlcnNpb24pLFxuICAgIH07XG4gICAgZm9yIChjb25zdCBwb2ludEF0dHJpYnV0ZSBvZiBjdHgucG9pbnRBdHRyaWJ1dGVzLmF0dHJpYnV0ZXMpIHtcbiAgICAgICAgZGVjb2RlQW5kQWRkQXR0cmlidXRlKHBvaW50QXR0cmlidXRlLCBjdHgpO1xuICAgICAgICBjdHguY3VycmVudE9mZnNldCArPSBwb2ludEF0dHJpYnV0ZS5ieXRlU2l6ZTtcbiAgICB9XG4gICAgY29uc3QgaW5kaWNlcyA9IG5ldyBBcnJheUJ1ZmZlcihjdHgubnVtUG9pbnRzICogNCk7XG4gICAgY29uc3QgaUluZGljZXMgPSBuZXcgVWludDMyQXJyYXkoaW5kaWNlcyk7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBjdHgubnVtUG9pbnRzOyBpKyspIHtcbiAgICAgICAgaUluZGljZXNbaV0gPSBpO1xuICAgIH1cbiAgICBpZiAoIWN0eC5hdHRyaWJ1dGVCdWZmZXJzW1BvaW50QXR0cmlidXRlTmFtZS5DTEFTU0lGSUNBVElPTl0pIHtcbiAgICAgICAgYWRkRW1wdHlDbGFzc2lmaWNhdGlvbkJ1ZmZlcihjdHgpO1xuICAgIH1cbiAgICBjb25zdCBtZXNzYWdlID0ge1xuICAgICAgICBidWZmZXI6IGJ1ZmZlcixcbiAgICAgICAgbWVhbjogY3R4Lm1lYW4sXG4gICAgICAgIGF0dHJpYnV0ZUJ1ZmZlcnM6IGN0eC5hdHRyaWJ1dGVCdWZmZXJzLFxuICAgICAgICB0aWdodEJvdW5kaW5nQm94OiB7IG1pbjogY3R4LnRpZ2h0Qm94TWluLCBtYXg6IGN0eC50aWdodEJveE1heCB9LFxuICAgICAgICBpbmRpY2VzLFxuICAgIH07XG4gICAgcG9zdE1lc3NhZ2UobWVzc2FnZSwgY3R4LnRyYW5zZmVyYWJsZXMpO1xufVxuZnVuY3Rpb24gYWRkRW1wdHlDbGFzc2lmaWNhdGlvbkJ1ZmZlcihjdHgpIHtcbiAgICBjb25zdCBidWZmZXIgPSBuZXcgQXJyYXlCdWZmZXIoY3R4Lm51bVBvaW50cyAqIDQpO1xuICAgIGNvbnN0IGNsYXNzaWZpY2F0aW9ucyA9IG5ldyBGbG9hdDMyQXJyYXkoYnVmZmVyKTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGN0eC5udW1Qb2ludHM7IGkrKykge1xuICAgICAgICBjbGFzc2lmaWNhdGlvbnNbaV0gPSAwO1xuICAgIH1cbiAgICBjdHguYXR0cmlidXRlQnVmZmVyc1tQb2ludEF0dHJpYnV0ZU5hbWUuQ0xBU1NJRklDQVRJT05dID0ge1xuICAgICAgICBidWZmZXIsXG4gICAgICAgIGF0dHJpYnV0ZTogUE9JTlRfQVRUUklCVVRFUy5DTEFTU0lGSUNBVElPTixcbiAgICB9O1xufVxuZnVuY3Rpb24gZGVjb2RlQW5kQWRkQXR0cmlidXRlKGF0dHJpYnV0ZSwgY3R4KSB7XG4gICAgY29uc3QgZGVjb2RlZEF0dHJpYnV0ZSA9IGRlY29kZVBvaW50QXR0cmlidXRlKGF0dHJpYnV0ZSwgY3R4KTtcbiAgICBpZiAoZGVjb2RlZEF0dHJpYnV0ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHJldHVybjtcbiAgICB9XG4gICAgY3R4LmF0dHJpYnV0ZUJ1ZmZlcnNbZGVjb2RlZEF0dHJpYnV0ZS5hdHRyaWJ1dGUubmFtZV0gPSBkZWNvZGVkQXR0cmlidXRlO1xuICAgIGN0eC50cmFuc2ZlcmFibGVzLnB1c2goZGVjb2RlZEF0dHJpYnV0ZS5idWZmZXIpO1xufVxuZnVuY3Rpb24gZGVjb2RlUG9pbnRBdHRyaWJ1dGUoYXR0cmlidXRlLCBjdHgpIHtcbiAgICBzd2l0Y2ggKGF0dHJpYnV0ZS5uYW1lKSB7XG4gICAgICAgIGNhc2UgUG9pbnRBdHRyaWJ1dGVOYW1lLlBPU0lUSU9OX0NBUlRFU0lBTjpcbiAgICAgICAgICAgIHJldHVybiBkZWNvZGVQb3NpdGlvbkNhcnRlc2lhbihhdHRyaWJ1dGUsIGN0eCk7XG4gICAgICAgIGNhc2UgUG9pbnRBdHRyaWJ1dGVOYW1lLkNPTE9SX1BBQ0tFRDpcbiAgICAgICAgICAgIHJldHVybiBkZWNvZGVDb2xvcihhdHRyaWJ1dGUsIGN0eCk7XG4gICAgICAgIGNhc2UgUG9pbnRBdHRyaWJ1dGVOYW1lLklOVEVOU0lUWTpcbiAgICAgICAgICAgIHJldHVybiBkZWNvZGVJbnRlbnNpdHkoYXR0cmlidXRlLCBjdHgpO1xuICAgICAgICBjYXNlIFBvaW50QXR0cmlidXRlTmFtZS5DTEFTU0lGSUNBVElPTjpcbiAgICAgICAgICAgIHJldHVybiBkZWNvZGVDbGFzc2lmaWNhdGlvbihhdHRyaWJ1dGUsIGN0eCk7XG4gICAgICAgIGNhc2UgUG9pbnRBdHRyaWJ1dGVOYW1lLk5PUk1BTF9TUEhFUkVNQVBQRUQ6XG4gICAgICAgICAgICByZXR1cm4gZGVjb2RlTm9ybWFsU3BoZXJlTWFwcGVkKGF0dHJpYnV0ZSwgY3R4KTtcbiAgICAgICAgY2FzZSBQb2ludEF0dHJpYnV0ZU5hbWUuTk9STUFMX09DVDE2OlxuICAgICAgICAgICAgcmV0dXJuIGRlY29kZU5vcm1hbE9jdDE2KGF0dHJpYnV0ZSwgY3R4KTtcbiAgICAgICAgY2FzZSBQb2ludEF0dHJpYnV0ZU5hbWUuTk9STUFMOlxuICAgICAgICAgICAgcmV0dXJuIGRlY29kZU5vcm1hbChhdHRyaWJ1dGUsIGN0eCk7XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cbn1cbmZ1bmN0aW9uIGRlY29kZVBvc2l0aW9uQ2FydGVzaWFuKGF0dHJpYnV0ZSwgY3R4KSB7XG4gICAgY29uc3QgYnVmZmVyID0gbmV3IEFycmF5QnVmZmVyKGN0eC5udW1Qb2ludHMgKiA0ICogMyk7XG4gICAgY29uc3QgcG9zaXRpb25zID0gbmV3IEZsb2F0MzJBcnJheShidWZmZXIpO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgY3R4Lm51bVBvaW50czsgaSsrKSB7XG4gICAgICAgIGxldCB4O1xuICAgICAgICBsZXQgeTtcbiAgICAgICAgbGV0IHo7XG4gICAgICAgIGlmIChjdHgudmVyc2lvbi5uZXdlclRoYW4oJzEuMycpKSB7XG4gICAgICAgICAgICB4ID0gY3R4LmRhdGEuZ2V0VWludDMyKGN0eC5jdXJyZW50T2Zmc2V0ICsgaSAqIGN0eC5wb2ludEF0dHJpYnV0ZXMuYnl0ZVNpemUgKyAwKSAqIGN0eC5zY2FsZTtcbiAgICAgICAgICAgIHkgPSBjdHguZGF0YS5nZXRVaW50MzIoY3R4LmN1cnJlbnRPZmZzZXQgKyBpICogY3R4LnBvaW50QXR0cmlidXRlcy5ieXRlU2l6ZSArIDQpICogY3R4LnNjYWxlO1xuICAgICAgICAgICAgeiA9IGN0eC5kYXRhLmdldFVpbnQzMihjdHguY3VycmVudE9mZnNldCArIGkgKiBjdHgucG9pbnRBdHRyaWJ1dGVzLmJ5dGVTaXplICsgOCkgKiBjdHguc2NhbGU7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB4ID0gY3R4LmRhdGEuZ2V0RmxvYXQzMihpICogY3R4LnBvaW50QXR0cmlidXRlcy5ieXRlU2l6ZSArIDApICsgY3R4Lm5vZGVPZmZzZXRbMF07XG4gICAgICAgICAgICB5ID0gY3R4LmRhdGEuZ2V0RmxvYXQzMihpICogY3R4LnBvaW50QXR0cmlidXRlcy5ieXRlU2l6ZSArIDQpICsgY3R4Lm5vZGVPZmZzZXRbMV07XG4gICAgICAgICAgICB6ID0gY3R4LmRhdGEuZ2V0RmxvYXQzMihpICogY3R4LnBvaW50QXR0cmlidXRlcy5ieXRlU2l6ZSArIDgpICsgY3R4Lm5vZGVPZmZzZXRbMl07XG4gICAgICAgIH1cbiAgICAgICAgcG9zaXRpb25zWzMgKiBpICsgMF0gPSB4O1xuICAgICAgICBwb3NpdGlvbnNbMyAqIGkgKyAxXSA9IHk7XG4gICAgICAgIHBvc2l0aW9uc1szICogaSArIDJdID0gejtcbiAgICAgICAgY3R4Lm1lYW5bMF0gKz0geCAvIGN0eC5udW1Qb2ludHM7XG4gICAgICAgIGN0eC5tZWFuWzFdICs9IHkgLyBjdHgubnVtUG9pbnRzO1xuICAgICAgICBjdHgubWVhblsyXSArPSB6IC8gY3R4Lm51bVBvaW50cztcbiAgICAgICAgY3R4LnRpZ2h0Qm94TWluWzBdID0gTWF0aC5taW4oY3R4LnRpZ2h0Qm94TWluWzBdLCB4KTtcbiAgICAgICAgY3R4LnRpZ2h0Qm94TWluWzFdID0gTWF0aC5taW4oY3R4LnRpZ2h0Qm94TWluWzFdLCB5KTtcbiAgICAgICAgY3R4LnRpZ2h0Qm94TWluWzJdID0gTWF0aC5taW4oY3R4LnRpZ2h0Qm94TWluWzJdLCB6KTtcbiAgICAgICAgY3R4LnRpZ2h0Qm94TWF4WzBdID0gTWF0aC5tYXgoY3R4LnRpZ2h0Qm94TWF4WzBdLCB4KTtcbiAgICAgICAgY3R4LnRpZ2h0Qm94TWF4WzFdID0gTWF0aC5tYXgoY3R4LnRpZ2h0Qm94TWF4WzFdLCB5KTtcbiAgICAgICAgY3R4LnRpZ2h0Qm94TWF4WzJdID0gTWF0aC5tYXgoY3R4LnRpZ2h0Qm94TWF4WzJdLCB6KTtcbiAgICB9XG4gICAgcmV0dXJuIHsgYnVmZmVyLCBhdHRyaWJ1dGUgfTtcbn1cbmZ1bmN0aW9uIGRlY29kZUNvbG9yKGF0dHJpYnV0ZSwgY3R4KSB7XG4gICAgY29uc3QgYnVmZmVyID0gbmV3IEFycmF5QnVmZmVyKGN0eC5udW1Qb2ludHMgKiAzKTtcbiAgICBjb25zdCBjb2xvcnMgPSBuZXcgVWludDhBcnJheShidWZmZXIpO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgY3R4Lm51bVBvaW50czsgaSsrKSB7XG4gICAgICAgIGNvbG9yc1szICogaSArIDBdID0gY3R4LmRhdGEuZ2V0VWludDgoY3R4LmN1cnJlbnRPZmZzZXQgKyBpICogY3R4LnBvaW50QXR0cmlidXRlcy5ieXRlU2l6ZSArIDApO1xuICAgICAgICBjb2xvcnNbMyAqIGkgKyAxXSA9IGN0eC5kYXRhLmdldFVpbnQ4KGN0eC5jdXJyZW50T2Zmc2V0ICsgaSAqIGN0eC5wb2ludEF0dHJpYnV0ZXMuYnl0ZVNpemUgKyAxKTtcbiAgICAgICAgY29sb3JzWzMgKiBpICsgMl0gPSBjdHguZGF0YS5nZXRVaW50OChjdHguY3VycmVudE9mZnNldCArIGkgKiBjdHgucG9pbnRBdHRyaWJ1dGVzLmJ5dGVTaXplICsgMik7XG4gICAgfVxuICAgIHJldHVybiB7IGJ1ZmZlciwgYXR0cmlidXRlIH07XG59XG5mdW5jdGlvbiBkZWNvZGVJbnRlbnNpdHkoYXR0cmlidXRlLCBjdHgpIHtcbiAgICBjb25zdCBidWZmZXIgPSBuZXcgQXJyYXlCdWZmZXIoY3R4Lm51bVBvaW50cyAqIDQpO1xuICAgIGNvbnN0IGludGVuc2l0aWVzID0gbmV3IEZsb2F0MzJBcnJheShidWZmZXIpO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgY3R4Lm51bVBvaW50czsgaSsrKSB7XG4gICAgICAgIGludGVuc2l0aWVzW2ldID0gY3R4LmRhdGEuZ2V0VWludDE2KGN0eC5jdXJyZW50T2Zmc2V0ICsgaSAqIGN0eC5wb2ludEF0dHJpYnV0ZXMuYnl0ZVNpemUpO1xuICAgIH1cbiAgICByZXR1cm4geyBidWZmZXIsIGF0dHJpYnV0ZSB9O1xufVxuZnVuY3Rpb24gZGVjb2RlQ2xhc3NpZmljYXRpb24oYXR0cmlidXRlLCBjdHgpIHtcbiAgICBjb25zdCBidWZmZXIgPSBuZXcgQXJyYXlCdWZmZXIoY3R4Lm51bVBvaW50cyk7XG4gICAgY29uc3QgY2xhc3NpZmljYXRpb25zID0gbmV3IFVpbnQ4QXJyYXkoYnVmZmVyKTtcbiAgICBmb3IgKGxldCBqID0gMDsgaiA8IGN0eC5udW1Qb2ludHM7IGorKykge1xuICAgICAgICBjbGFzc2lmaWNhdGlvbnNbal0gPSBjdHguZGF0YS5nZXRVaW50OChjdHguY3VycmVudE9mZnNldCArIGogKiBjdHgucG9pbnRBdHRyaWJ1dGVzLmJ5dGVTaXplKTtcbiAgICB9XG4gICAgcmV0dXJuIHsgYnVmZmVyLCBhdHRyaWJ1dGUgfTtcbn1cbmZ1bmN0aW9uIGRlY29kZU5vcm1hbFNwaGVyZU1hcHBlZChhdHRyaWJ1dGUsIGN0eCkge1xuICAgIGNvbnN0IGJ1ZmZlciA9IG5ldyBBcnJheUJ1ZmZlcihjdHgubnVtUG9pbnRzICogNCAqIDMpO1xuICAgIGNvbnN0IG5vcm1hbHMgPSBuZXcgRmxvYXQzMkFycmF5KGJ1ZmZlcik7XG4gICAgZm9yIChsZXQgaiA9IDA7IGogPCBjdHgubnVtUG9pbnRzOyBqKyspIHtcbiAgICAgICAgY29uc3QgYnggPSBjdHguZGF0YS5nZXRVaW50OChjdHguY3VycmVudE9mZnNldCArIGogKiBjdHgucG9pbnRBdHRyaWJ1dGVzLmJ5dGVTaXplICsgMCk7XG4gICAgICAgIGNvbnN0IGJ5ID0gY3R4LmRhdGEuZ2V0VWludDgoY3R4LmN1cnJlbnRPZmZzZXQgKyBqICogY3R4LnBvaW50QXR0cmlidXRlcy5ieXRlU2l6ZSArIDEpO1xuICAgICAgICBjb25zdCBleCA9IGJ4IC8gMjU1O1xuICAgICAgICBjb25zdCBleSA9IGJ5IC8gMjU1O1xuICAgICAgICBsZXQgbnggPSBleCAqIDIgLSAxO1xuICAgICAgICBsZXQgbnkgPSBleSAqIDIgLSAxO1xuICAgICAgICBsZXQgbnogPSAxO1xuICAgICAgICBjb25zdCBudyA9IC0xO1xuICAgICAgICBjb25zdCBsID0gbnggKiAtbnggKyBueSAqIC1ueSArIG56ICogLW53O1xuICAgICAgICBueiA9IGw7XG4gICAgICAgIG54ID0gbnggKiBNYXRoLnNxcnQobCk7XG4gICAgICAgIG55ID0gbnkgKiBNYXRoLnNxcnQobCk7XG4gICAgICAgIG54ID0gbnggKiAyO1xuICAgICAgICBueSA9IG55ICogMjtcbiAgICAgICAgbnogPSBueiAqIDIgLSAxO1xuICAgICAgICBub3JtYWxzWzMgKiBqICsgMF0gPSBueDtcbiAgICAgICAgbm9ybWFsc1szICogaiArIDFdID0gbnk7XG4gICAgICAgIG5vcm1hbHNbMyAqIGogKyAyXSA9IG56O1xuICAgIH1cbiAgICByZXR1cm4geyBidWZmZXIsIGF0dHJpYnV0ZSB9O1xufVxuZnVuY3Rpb24gZGVjb2RlTm9ybWFsT2N0MTYoYXR0cmlidXRlLCBjdHgpIHtcbiAgICBjb25zdCBidWZmID0gbmV3IEFycmF5QnVmZmVyKGN0eC5udW1Qb2ludHMgKiA0ICogMyk7XG4gICAgY29uc3Qgbm9ybWFscyA9IG5ldyBGbG9hdDMyQXJyYXkoYnVmZik7XG4gICAgZm9yIChsZXQgaiA9IDA7IGogPCBjdHgubnVtUG9pbnRzOyBqKyspIHtcbiAgICAgICAgY29uc3QgYnggPSBjdHguZGF0YS5nZXRVaW50OChjdHguY3VycmVudE9mZnNldCArIGogKiBjdHgucG9pbnRBdHRyaWJ1dGVzLmJ5dGVTaXplICsgMCk7XG4gICAgICAgIGNvbnN0IGJ5ID0gY3R4LmRhdGEuZ2V0VWludDgoY3R4LmN1cnJlbnRPZmZzZXQgKyBqICogY3R4LnBvaW50QXR0cmlidXRlcy5ieXRlU2l6ZSArIDEpO1xuICAgICAgICBjb25zdCB1ID0gKGJ4IC8gMjU1KSAqIDIgLSAxO1xuICAgICAgICBjb25zdCB2ID0gKGJ5IC8gMjU1KSAqIDIgLSAxO1xuICAgICAgICBsZXQgeiA9IDEgLSBNYXRoLmFicyh1KSAtIE1hdGguYWJzKHYpO1xuICAgICAgICBsZXQgeCA9IDA7XG4gICAgICAgIGxldCB5ID0gMDtcbiAgICAgICAgaWYgKHogPj0gMCkge1xuICAgICAgICAgICAgeCA9IHU7XG4gICAgICAgICAgICB5ID0gdjtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHggPSAtKHYgLyBtYXRoU2lnbih2KSAtIDEpIC8gbWF0aFNpZ24odSk7XG4gICAgICAgICAgICB5ID0gLSh1IC8gbWF0aFNpZ24odSkgLSAxKSAvIG1hdGhTaWduKHYpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGxlbmd0aCA9IE1hdGguc3FydCh4ICogeCArIHkgKiB5ICsgeiAqIHopO1xuICAgICAgICB4ID0geCAvIGxlbmd0aDtcbiAgICAgICAgeSA9IHkgLyBsZW5ndGg7XG4gICAgICAgIHogPSB6IC8gbGVuZ3RoO1xuICAgICAgICBub3JtYWxzWzMgKiBqICsgMF0gPSB4O1xuICAgICAgICBub3JtYWxzWzMgKiBqICsgMV0gPSB5O1xuICAgICAgICBub3JtYWxzWzMgKiBqICsgMl0gPSB6O1xuICAgIH1cbiAgICByZXR1cm4geyBidWZmZXI6IGJ1ZmYsIGF0dHJpYnV0ZSB9O1xufVxuZnVuY3Rpb24gZGVjb2RlTm9ybWFsKGF0dHJpYnV0ZSwgY3R4KSB7XG4gICAgY29uc3QgYnVmZmVyID0gbmV3IEFycmF5QnVmZmVyKGN0eC5udW1Qb2ludHMgKiA0ICogMyk7XG4gICAgY29uc3Qgbm9ybWFscyA9IG5ldyBGbG9hdDMyQXJyYXkoYnVmZmVyKTtcbiAgICBmb3IgKGxldCBqID0gMDsgaiA8IGN0eC5udW1Qb2ludHM7IGorKykge1xuICAgICAgICBjb25zdCB4ID0gY3R4LmRhdGEuZ2V0RmxvYXQzMihjdHguY3VycmVudE9mZnNldCArIGogKiBjdHgucG9pbnRBdHRyaWJ1dGVzLmJ5dGVTaXplICsgMCk7XG4gICAgICAgIGNvbnN0IHkgPSBjdHguZGF0YS5nZXRGbG9hdDMyKGN0eC5jdXJyZW50T2Zmc2V0ICsgaiAqIGN0eC5wb2ludEF0dHJpYnV0ZXMuYnl0ZVNpemUgKyA0KTtcbiAgICAgICAgY29uc3QgeiA9IGN0eC5kYXRhLmdldEZsb2F0MzIoY3R4LmN1cnJlbnRPZmZzZXQgKyBqICogY3R4LnBvaW50QXR0cmlidXRlcy5ieXRlU2l6ZSArIDgpO1xuICAgICAgICBub3JtYWxzWzMgKiBqICsgMF0gPSB4O1xuICAgICAgICBub3JtYWxzWzMgKiBqICsgMV0gPSB5O1xuICAgICAgICBub3JtYWxzWzMgKiBqICsgMl0gPSB6O1xuICAgIH1cbiAgICByZXR1cm4geyBidWZmZXIsIGF0dHJpYnV0ZSB9O1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\\\\n//# sourceURL=webpack-internal:///./src/workers/binary-decoder-worker-internal.ts\\\\n\\\");\\n\\n/***/ }),\\n\\n/***/ \\\"./src/workers/custom-array-view.ts\\\":\\n/*!******************************************!*\\\\\\n  !*** ./src/workers/custom-array-view.ts ***!\\n  \\\\******************************************/\\n/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {\\n\\neval(\\\"__webpack_require__.r(__webpack_exports__);\\\\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\\\\n/* harmony export */   CustomArrayView: () => (/* binding */ CustomArrayView)\\\\n/* harmony export */ });\\\\n/**\\\\n * Adapted from Potree.js http://potree.org\\\\n * Potree License: https://github.com/potree/potree/blob/1.5/LICENSE\\\\n */\\\\n// http://jsperf.com/uint8array-vs-dataview3/3\\\\n// tslint:disable:no-bitwise\\\\nclass CustomArrayView {\\\\n    constructor(buffer) {\\\\n        this.tmp = new ArrayBuffer(4);\\\\n        this.tmpf = new Float32Array(this.tmp);\\\\n        this.tmpu8 = new Uint8Array(this.tmp);\\\\n        this.u8 = new Uint8Array(buffer);\\\\n    }\\\\n    getUint32(i) {\\\\n        return (this.u8[i + 3] << 24) | (this.u8[i + 2] << 16) | (this.u8[i + 1] << 8) | this.u8[i];\\\\n    }\\\\n    getUint16(i) {\\\\n        return (this.u8[i + 1] << 8) | this.u8[i];\\\\n    }\\\\n    getFloat32(i) {\\\\n        const tmpu8 = this.tmpu8;\\\\n        const u8 = this.u8;\\\\n        const tmpf = this.tmpf;\\\\n        tmpu8[0] = u8[i + 0];\\\\n        tmpu8[1] = u8[i + 1];\\\\n        tmpu8[2] = u8[i + 2];\\\\n        tmpu8[3] = u8[i + 3];\\\\n        return tmpf[0];\\\\n    }\\\\n    getUint8(i) {\\\\n        return this.u8[i];\\\\n    }\\\\n}\\\\n// tslint:enable:no-bitwise\\\\n//# sourceURL=[module]\\\\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvd29ya2Vycy9jdXN0b20tYXJyYXktdmlldy50cyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wb3RyZWUvLi9zcmMvd29ya2Vycy9jdXN0b20tYXJyYXktdmlldy50cz8zMmIzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQWRhcHRlZCBmcm9tIFBvdHJlZS5qcyBodHRwOi8vcG90cmVlLm9yZ1xuICogUG90cmVlIExpY2Vuc2U6IGh0dHBzOi8vZ2l0aHViLmNvbS9wb3RyZWUvcG90cmVlL2Jsb2IvMS41L0xJQ0VOU0VcbiAqL1xuLy8gaHR0cDovL2pzcGVyZi5jb20vdWludDhhcnJheS12cy1kYXRhdmlldzMvM1xuLy8gdHNsaW50OmRpc2FibGU6bm8tYml0d2lzZVxuZXhwb3J0IGNsYXNzIEN1c3RvbUFycmF5VmlldyB7XG4gICAgY29uc3RydWN0b3IoYnVmZmVyKSB7XG4gICAgICAgIHRoaXMudG1wID0gbmV3IEFycmF5QnVmZmVyKDQpO1xuICAgICAgICB0aGlzLnRtcGYgPSBuZXcgRmxvYXQzMkFycmF5KHRoaXMudG1wKTtcbiAgICAgICAgdGhpcy50bXB1OCA9IG5ldyBVaW50OEFycmF5KHRoaXMudG1wKTtcbiAgICAgICAgdGhpcy51OCA9IG5ldyBVaW50OEFycmF5KGJ1ZmZlcik7XG4gICAgfVxuICAgIGdldFVpbnQzMihpKSB7XG4gICAgICAgIHJldHVybiAodGhpcy51OFtpICsgM10gPDwgMjQpIHwgKHRoaXMudThbaSArIDJdIDw8IDE2KSB8ICh0aGlzLnU4W2kgKyAxXSA8PCA4KSB8IHRoaXMudThbaV07XG4gICAgfVxuICAgIGdldFVpbnQxNihpKSB7XG4gICAgICAgIHJldHVybiAodGhpcy51OFtpICsgMV0gPDwgOCkgfCB0aGlzLnU4W2ldO1xuICAgIH1cbiAgICBnZXRGbG9hdDMyKGkpIHtcbiAgICAgICAgY29uc3QgdG1wdTggPSB0aGlzLnRtcHU4O1xuICAgICAgICBjb25zdCB1OCA9IHRoaXMudTg7XG4gICAgICAgIGNvbnN0IHRtcGYgPSB0aGlzLnRtcGY7XG4gICAgICAgIHRtcHU4WzBdID0gdThbaSArIDBdO1xuICAgICAgICB0bXB1OFsxXSA9IHU4W2kgKyAxXTtcbiAgICAgICAgdG1wdThbMl0gPSB1OFtpICsgMl07XG4gICAgICAgIHRtcHU4WzNdID0gdThbaSArIDNdO1xuICAgICAgICByZXR1cm4gdG1wZlswXTtcbiAgICB9XG4gICAgZ2V0VWludDgoaSkge1xuICAgICAgICByZXR1cm4gdGhpcy51OFtpXTtcbiAgICB9XG59XG4vLyB0c2xpbnQ6ZW5hYmxlOm5vLWJpdHdpc2VcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\\\\n//# sourceURL=webpack-internal:///./src/workers/custom-array-view.ts\\\\n\\\");\\n\\n/***/ })\\n\\n/******/ \\t});\\n/************************************************************************/\\n/******/ \\t// The module cache\\n/******/ \\tvar __webpack_module_cache__ = {};\\n/******/ \\t\\n/******/ \\t// The require function\\n/******/ \\tfunction __webpack_require__(moduleId) {\\n/******/ \\t\\t// Check if module is in cache\\n/******/ \\t\\tvar cachedModule = __webpack_module_cache__[moduleId];\\n/******/ \\t\\tif (cachedModule !== undefined) {\\n/******/ \\t\\t\\treturn cachedModule.exports;\\n/******/ \\t\\t}\\n/******/ \\t\\t// Create a new module (and put it into the cache)\\n/******/ \\t\\tvar module = __webpack_module_cache__[moduleId] = {\\n/******/ \\t\\t\\t// no module.id needed\\n/******/ \\t\\t\\t// no module.loaded needed\\n/******/ \\t\\t\\texports: {}\\n/******/ \\t\\t};\\n/******/ \\t\\n/******/ \\t\\t// Execute the module function\\n/******/ \\t\\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\\n/******/ \\t\\n/******/ \\t\\t// Return the exports of the module\\n/******/ \\t\\treturn module.exports;\\n/******/ \\t}\\n/******/ \\t\\n/************************************************************************/\\n/******/ \\t/* webpack/runtime/define property getters */\\n/******/ \\t(() => {\\n/******/ \\t\\t// define getter functions for harmony exports\\n/******/ \\t\\t__webpack_require__.d = (exports, definition) => {\\n/******/ \\t\\t\\tfor(var key in definition) {\\n/******/ \\t\\t\\t\\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\\n/******/ \\t\\t\\t\\t\\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\\n/******/ \\t\\t\\t\\t}\\n/******/ \\t\\t\\t}\\n/******/ \\t\\t};\\n/******/ \\t})();\\n/******/ \\t\\n/******/ \\t/* webpack/runtime/hasOwnProperty shorthand */\\n/******/ \\t(() => {\\n/******/ \\t\\t__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))\\n/******/ \\t})();\\n/******/ \\t\\n/******/ \\t/* webpack/runtime/make namespace object */\\n/******/ \\t(() => {\\n/******/ \\t\\t// define __esModule on exports\\n/******/ \\t\\t__webpack_require__.r = (exports) => {\\n/******/ \\t\\t\\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\\n/******/ \\t\\t\\t\\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\\n/******/ \\t\\t\\t}\\n/******/ \\t\\t\\tObject.defineProperty(exports, '__esModule', { value: true });\\n/******/ \\t\\t};\\n/******/ \\t})();\\n/******/ \\t\\n/************************************************************************/\\n/******/ \\t\\n/******/ \\t// startup\\n/******/ \\t// Load entry module and return exports\\n/******/ \\t// This entry module can't be inlined because the eval-source-map devtool is used.\\n/******/ \\tvar __webpack_exports__ = __webpack_require__(\\\"./node_modules/babel-loader/lib/index.js!./src/workers/binary-decoder.worker.js\\\");\\n/******/ \\t\\n/******/ })()\\n;\", \"Worker\", undefined, undefined);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/workers/binary-decoder.worker.js\n");

/***/ }),

/***/ "./node_modules/worker-loader/dist/runtime/inline.js":
/*!***********************************************************!*\
  !*** ./node_modules/worker-loader/dist/runtime/inline.js ***!
  \***********************************************************/
/***/ ((module) => {

eval("\n\n/* eslint-env browser */\n\n/* eslint-disable no-undef, no-use-before-define, new-cap */\nmodule.exports = function (content, workerConstructor, workerOptions, url) {\n  var globalScope = self || window;\n\n  try {\n    try {\n      var blob;\n\n      try {\n        // New API\n        blob = new globalScope.Blob([content]);\n      } catch (e) {\n        // BlobBuilder = Deprecated, but widely implemented\n        var BlobBuilder = globalScope.BlobBuilder || globalScope.WebKitBlobBuilder || globalScope.MozBlobBuilder || globalScope.MSBlobBuilder;\n        blob = new BlobBuilder();\n        blob.append(content);\n        blob = blob.getBlob();\n      }\n\n      var URL = globalScope.URL || globalScope.webkitURL;\n      var objectURL = URL.createObjectURL(blob);\n      var worker = new globalScope[workerConstructor](objectURL, workerOptions);\n      URL.revokeObjectURL(objectURL);\n      return worker;\n    } catch (e) {\n      return new globalScope[workerConstructor](\"data:application/javascript,\".concat(encodeURIComponent(content)), workerOptions);\n    }\n  } catch (e) {\n    if (!url) {\n      throw Error(\"Inline worker is not supported\");\n    }\n\n    return new globalScope[workerConstructor](url, workerOptions);\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvd29ya2VyLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5saW5lLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3BvdHJlZS8uL25vZGVfbW9kdWxlcy93b3JrZXItbG9hZGVyL2Rpc3QvcnVudGltZS9pbmxpbmUuanM/ZWNkNiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuLyogZXNsaW50LWVudiBicm93c2VyICovXG5cbi8qIGVzbGludC1kaXNhYmxlIG5vLXVuZGVmLCBuby11c2UtYmVmb3JlLWRlZmluZSwgbmV3LWNhcCAqL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoY29udGVudCwgd29ya2VyQ29uc3RydWN0b3IsIHdvcmtlck9wdGlvbnMsIHVybCkge1xuICB2YXIgZ2xvYmFsU2NvcGUgPSBzZWxmIHx8IHdpbmRvdztcblxuICB0cnkge1xuICAgIHRyeSB7XG4gICAgICB2YXIgYmxvYjtcblxuICAgICAgdHJ5IHtcbiAgICAgICAgLy8gTmV3IEFQSVxuICAgICAgICBibG9iID0gbmV3IGdsb2JhbFNjb3BlLkJsb2IoW2NvbnRlbnRdKTtcbiAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgLy8gQmxvYkJ1aWxkZXIgPSBEZXByZWNhdGVkLCBidXQgd2lkZWx5IGltcGxlbWVudGVkXG4gICAgICAgIHZhciBCbG9iQnVpbGRlciA9IGdsb2JhbFNjb3BlLkJsb2JCdWlsZGVyIHx8IGdsb2JhbFNjb3BlLldlYktpdEJsb2JCdWlsZGVyIHx8IGdsb2JhbFNjb3BlLk1vekJsb2JCdWlsZGVyIHx8IGdsb2JhbFNjb3BlLk1TQmxvYkJ1aWxkZXI7XG4gICAgICAgIGJsb2IgPSBuZXcgQmxvYkJ1aWxkZXIoKTtcbiAgICAgICAgYmxvYi5hcHBlbmQoY29udGVudCk7XG4gICAgICAgIGJsb2IgPSBibG9iLmdldEJsb2IoKTtcbiAgICAgIH1cblxuICAgICAgdmFyIFVSTCA9IGdsb2JhbFNjb3BlLlVSTCB8fCBnbG9iYWxTY29wZS53ZWJraXRVUkw7XG4gICAgICB2YXIgb2JqZWN0VVJMID0gVVJMLmNyZWF0ZU9iamVjdFVSTChibG9iKTtcbiAgICAgIHZhciB3b3JrZXIgPSBuZXcgZ2xvYmFsU2NvcGVbd29ya2VyQ29uc3RydWN0b3JdKG9iamVjdFVSTCwgd29ya2VyT3B0aW9ucyk7XG4gICAgICBVUkwucmV2b2tlT2JqZWN0VVJMKG9iamVjdFVSTCk7XG4gICAgICByZXR1cm4gd29ya2VyO1xuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIHJldHVybiBuZXcgZ2xvYmFsU2NvcGVbd29ya2VyQ29uc3RydWN0b3JdKFwiZGF0YTphcHBsaWNhdGlvbi9qYXZhc2NyaXB0LFwiLmNvbmNhdChlbmNvZGVVUklDb21wb25lbnQoY29udGVudCkpLCB3b3JrZXJPcHRpb25zKTtcbiAgICB9XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICBpZiAoIXVybCkge1xuICAgICAgdGhyb3cgRXJyb3IoXCJJbmxpbmUgd29ya2VyIGlzIG5vdCBzdXBwb3J0ZWRcIik7XG4gICAgfVxuXG4gICAgcmV0dXJuIG5ldyBnbG9iYWxTY29wZVt3b3JrZXJDb25zdHJ1Y3Rvcl0odXJsLCB3b3JrZXJPcHRpb25zKTtcbiAgfVxufTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/worker-loader/dist/runtime/inline.js\n");

/***/ }),

/***/ "three":
/*!************************!*\
  !*** external "three" ***!
  \************************/
/***/ ((module) => {

module.exports = __WEBPACK_EXTERNAL_MODULE_three__;

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.ts");
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()
;
});